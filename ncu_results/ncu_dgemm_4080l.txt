==PROF== Connected to process 2570 (/home/deniz/Documents/CENG443_project/src/dgemm)
==PROF== Profiling "dgemm_tensor_core" - 0: 0%....50%....100% - 38 passes
==PROF== Profiling "dgemm_normal" - 1: 0%....50%....100% - 38 passes

=== Tensor Core DGEMM Performance ===

=== Regular DGEMM Performance ===

=== Performance Comparison ===
Matrix size: 1024x1024
Tensor Core kernel time: 1428.874 ms
Regular kernel time: 1240.077 ms
Speedup: 0.87x

=== Result Verification ===
Tensor Core C[0][0] = 1024
Regular C[0][0] = 1024
Expected value = 1024
==PROF== Disconnected from process 2570
[2570] dgemm@127.0.0.1
  dgemm_tensor_core(const double *, const double *, double *) (128, 128, 1)x(32, 1, 1), Context 1, Stream 7, Device 0, CC 8.9
    Section: GPU Speed Of Light Throughput
    ----------------------- ------------- ------------
    Metric Name               Metric Unit Metric Value
    ----------------------- ------------- ------------
    DRAM Frequency          cycle/nsecond         9.39
    SM Frequency            cycle/nsecond         1.29
    Elapsed Cycles                  cycle     10620006
    Memory Throughput                   %        17.94
    DRAM Throughput                     %         0.49
    Duration                      msecond         8.23
    L1/TEX Cache Throughput             %        12.62
    L2 Cache Throughput                 %        17.94
    SM Active Cycles                cycle  10561483.60
    Compute (SM) Throughput             %        96.69
    ----------------------- ------------- ------------

    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing workloads in the Compute Workload Analysis section.                                        

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved 0% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         3.80
    Dropped Samples                sample            0
    Maximum Sampling Interval     usecond          128
    # Pass Groups                                    2
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         0.03
    Executed Ipc Elapsed  inst/cycle         0.03
    Issue Slots Busy               %         0.78
    Issued Ipc Active     inst/cycle         0.03
    SM Busy                        %        97.23
    -------------------- ----------- ------------

    OPT   FP64 is the highest-utilized pipeline (97.2%) based on active cycles, taking into account the rates of its    
          different instructions. It executes 64-bit floating point operations. The pipeline is over-utilized and       
          likely a performance bottleneck. Based on the number of executed instructions, the highest utilized pipeline  
          (12.3%) is FP64 (DMMA). It executes DMMA operations. Comparing the two, the overall pipeline utilization      
          appears to be caused by high-latency instructions. See the Kernel Profiling Guide                             
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-decoder) or hover over the          
          pipeline name to understand the workloads handled by each pipeline. The Instruction Statistics section shows  
          the mix of executed instructions in this kernel. Check the Warp State Statistics section for which reasons    
          cause warps to stall.                                                                                         

    Section: Memory Workload Analysis
    --------------------------- ------------ ------------
    Metric Name                  Metric Unit Metric Value
    --------------------------- ------------ ------------
    Memory Throughput           Gbyte/second         2.04
    Mem Busy                               %        17.94
    Max Bandwidth                          %        17.93
    L1/TEX Hit Rate                        %        24.81
    L2 Compression Success Rate            %            0
    L2 Compression Ratio                                0
    L2 Hit Rate                            %        98.69
    Mem Pipes Busy                         %         5.46
    --------------------------- ------------ ------------

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %         0.78
    Issued Warp Per Scheduler                        0.01
    No Eligible                            %        99.22
    Active Warps Per Scheduler          warp         5.91
    Eligible Warps Per Scheduler        warp         0.01
    ---------------------------- ----------- ------------

    OPT   Est. Local Speedup: 3.307%                                                                                    
          Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 128.6 cycles. This might leave hardware resources underutilized and may lead to   
          less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of   
          5.91 active warps per scheduler, but only an average of 0.01 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle       760.24
    Warp Cycles Per Executed Instruction           cycle       760.41
    Avg. Active Threads Per Warp                                   32
    Avg. Not Predicated Off Threads Per Warp                    31.97
    ---------------------------------------- ----------- ------------

    OPT   Est. Speedup: 3.307%                                                                                          
          On average, each warp of this kernel spends 593.0 cycles being stalled waiting for a scoreboard dependency on 
          a MIO (memory input/output) operation (not to L1TEX). The primary reason for a high number of stalls due to   
          short scoreboards is typically memory operations to shared memory. Other reasons include frequent execution   
          of special math instructions (e.g. MUFU) or dynamic branching (e.g. BRX, JMX). Consult the Memory Workload    
          Analysis section to verify if there are shared memory operations and reduce bank conflicts, if reported.      
          Assigning frequently accessed values to variables can assist the compiler in using low-latency registers      
          instead of direct memory accesses. This stall type represents about 78.0% of the total average of 760.2       
          cycles between issuing two instructions.                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on         
          sampling data. The Kernel Profiling Guide                                                                     
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details    
          on each stall reason.                                                                                         

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst        81920
    Executed Instructions                           inst     19005440
    Avg. Issued Instructions Per Scheduler          inst     81938.58
    Issued Instructions                             inst     19009751
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                    32
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                  16384
    Registers Per Thread             register/thread              40
    Shared Memory Configuration Size           Kbyte           32.77
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block        byte/block               0
    # SMs                                         SM              58
    Threads                                   thread          524288
    Uses Green Context                                             0
    Waves Per SM                                               11.77
    -------------------------------- --------------- ---------------

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           24
    Block Limit Registers                 block           48
    Block Limit Shared Mem                block           32
    Block Limit Warps                     block           48
    Theoretical Active Warps per SM        warp           24
    Theoretical Occupancy                     %           50
    Achieved Occupancy                        %        49.15
    Achieved Active Warps Per SM           warp        23.59
    ------------------------------- ----------- ------------

    OPT   Est. Speedup: 3.307%                                                                                          
          The 6.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 12. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that   
          can fit on the SM.                                                                                            

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle       350640
    Total DRAM Elapsed Cycles        cycle    463902720
    Average L1 Active Cycles         cycle  10561483.60
    Total L1 Elapsed Cycles          cycle    615959614
    Average L2 Active Cycles         cycle   8936758.29
    Total L2 Elapsed Cycles          cycle    216350976
    Average SM Active Cycles         cycle  10561483.60
    Total SM Elapsed Cycles          cycle    615959614
    Average SMSP Active Cycles       cycle  10534408.91
    Total SMSP Elapsed Cycles        cycle   2463838456
    -------------------------- ----------- ------------

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.03
    Branch Instructions              inst       540672
    Branch Efficiency                   %          100
    Avg. Divergent Branches                          0
    ------------------------- ----------- ------------

  dgemm_normal(const double *, const double *, double *) (64, 64, 1)x(16, 16, 1), Context 1, Stream 7, Device 0, CC 8.9
    Section: GPU Speed Of Light Throughput
    ----------------------- ------------- ------------
    Metric Name               Metric Unit Metric Value
    ----------------------- ------------- ------------
    DRAM Frequency          cycle/nsecond         9.39
    SM Frequency            cycle/nsecond         1.29
    Elapsed Cycles                  cycle      9632154
    Memory Throughput                   %        24.06
    DRAM Throughput                     %         0.54
    Duration                      msecond         7.47
    L1/TEX Cache Throughput             %        24.27
    L2 Cache Throughput                 %        10.74
    SM Active Cycles                cycle   9546942.24
    Compute (SM) Throughput             %        96.10
    ----------------------- ------------- ------------

    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing workloads in the Compute Workload Analysis section.                                        

    Section: GPU Speed Of Light Roofline Chart
    OPT   Est. Speedup: 95.44%                                                                                          
          The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved 0% of 
          this device's fp32 peak performance and 96% of its fp64 peak performance. If Compute Workload Analysis        
          determines that this kernel is fp64 bound, consider using 32-bit precision floating point operations to       
          improve its performance. See the Kernel Profiling Guide                                                       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         3.80
    Dropped Samples                sample            0
    Maximum Sampling Interval     usecond          512
    # Pass Groups                                    2
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         0.23
    Executed Ipc Elapsed  inst/cycle         0.23
    Issue Slots Busy               %         5.72
    Issued Ipc Active     inst/cycle         0.23
    SM Busy                        %        96.96
    -------------------- ----------- ------------

    OPT   FP64 is the highest-utilized pipeline (97.0%) based on active cycles, taking into account the rates of its    
          different instructions. It executes 64-bit floating point operations. The pipeline is over-utilized and       
          likely a performance bottleneck. Based on the number of executed instructions, the highest utilized pipeline  
          (97.0%) is FP64 (FP64). It executes non-DMMA 64-bit floating point operations. Comparing the two, the         
          overall pipeline utilization appears to be caused by frequent, low-latency instructions. See the Kernel       
          Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-decoder) or hover   
          over the pipeline name to understand the workloads handled by each pipeline. The Instruction Statistics       
          section shows the mix of executed instructions in this kernel. Check the Warp State Statistics section for    
          which reasons cause warps to stall.                                                                           

    Section: Memory Workload Analysis
    --------------------------- ------------ ------------
    Metric Name                  Metric Unit Metric Value
    --------------------------- ------------ ------------
    Memory Throughput           Gbyte/second         2.26
    Mem Busy                               %        24.06
    Max Bandwidth                          %        24.06
    L1/TEX Hit Rate                        %        83.28
    L2 Compression Success Rate            %            0
    L2 Compression Ratio                                0
    L2 Hit Rate                            %        98.45
    Mem Pipes Busy                         %        36.05
    --------------------------- ------------ ------------

    Section: Memory Workload Analysis Tables
    OPT   Est. Speedup: 6.015%                                                                                          
          The memory access pattern for global loads from L1TEX might not be optimal. On average, only 24.0 of the 32   
          bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between   
          threads. Check the Source Counters section for uncoalesced global loads.                                      

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %         5.72
    Issued Warp Per Scheduler                        0.06
    No Eligible                            %        94.28
    Active Warps Per Scheduler          warp        11.64
    Eligible Warps Per Scheduler        warp         0.16
    ---------------------------- ----------- ------------

    OPT   Est. Local Speedup: 3.901%                                                                                    
          Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 17.5 cycles. This might leave hardware resources underutilized and may lead to    
          less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of   
          11.64 active warps per scheduler, but only an average of 0.16 warps were eligible per cycle. Eligible warps   
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle       203.67
    Warp Cycles Per Executed Instruction           cycle       203.70
    Avg. Active Threads Per Warp                                   32
    Avg. Not Predicated Off Threads Per Warp                    31.98
    ---------------------------------------- ----------- ------------

    OPT   Est. Speedup: 3.901%                                                                                          
          On average, each warp of this kernel spends 113.6 cycles being stalled waiting for the L1 instruction queue   
          for texture operations to be not full. This stall reason is high in cases of extreme utilization of the       
          L1TEX pipeline. Try issuing fewer texture fetches, surface loads, surface stores, or decoupled math           
          operations. If applicable, consider combining multiple lower-width memory operations into fewer wider memory  
          operations and try interleaving memory operations and math instructions. Consider converting texture lookups  
          or surface loads into global memory lookups. Texture can accept four threads' requests per cycle, whereas     
          global accepts 32 threads. This stall type represents about 55.8% of the total average of 203.7 cycles        
          between issuing two instructions.                                                                             
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 3.901%                                                                                          
          On average, each warp of this kernel spends 81.2 cycles being stalled waiting for a scoreboard dependency on  
          a MIO (memory input/output) operation (not to L1TEX). The primary reason for a high number of stalls due to   
          short scoreboards is typically memory operations to shared memory. Other reasons include frequent execution   
          of special math instructions (e.g. MUFU) or dynamic branching (e.g. BRX, JMX). Consult the Memory Workload    
          Analysis section to verify if there are shared memory operations and reduce bank conflicts, if reported.      
          Assigning frequently accessed values to variables can assist the compiler in using low-latency registers      
          instead of direct memory accesses. This stall type represents about 39.9% of the total average of 203.7       
          cycles between issuing two instructions.                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on         
          sampling data. The Kernel Profiling Guide                                                                     
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details    
          on each stall reason.                                                                                         

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst    545615.45
    Executed Instructions                           inst    126582784
    Avg. Issued Instructions Per Scheduler          inst    545697.35
    Issued Instructions                             inst    126601786
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                   256
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                   4096
    Registers Per Thread             register/thread              40
    Shared Memory Configuration Size           Kbyte           16.38
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block        byte/block               0
    # SMs                                         SM              58
    Threads                                   thread         1048576
    Uses Green Context                                             0
    Waves Per SM                                               11.77
    -------------------------------- --------------- ---------------

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           24
    Block Limit Registers                 block            6
    Block Limit Shared Mem                block           16
    Block Limit Warps                     block            6
    Theoretical Active Warps per SM        warp           48
    Theoretical Occupancy                     %          100
    Achieved Occupancy                        %        97.01
    Achieved Active Warps Per SM           warp        46.57
    ------------------------------- ----------- ------------

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle    351061.33
    Total DRAM Elapsed Cycles        cycle    420751360
    Average L1 Active Cycles         cycle   9546942.24
    Total L1 Elapsed Cycles          cycle    558663996
    Average L2 Active Cycles         cycle   7717472.83
    Total L2 Elapsed Cycles          cycle    196226232
    Average SM Active Cycles         cycle   9546942.24
    Total SM Elapsed Cycles          cycle    558663996
    Average SMSP Active Cycles       cycle   9546026.00
    Total SMSP Elapsed Cycles        cycle   2234655984
    -------------------------- ----------- ------------

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.02
    Branch Instructions              inst      2162688
    Branch Efficiency                   %          100
    Avg. Divergent Branches                          0
    ------------------------- ----------- ------------

