==PROF== Connected to process 1819 (/data/CENG443_project/src/hgemm_stream_dilay_sm80)
==PROF== Profiling "hgemm_normal" - 0: 0%....50%....100% - 48 passes
==PROF== Profiling "hgemm_tensor_core" - 1: 0%....50%....100% - 47 passes
==PROF== Profiling "hgemm_normal" - 2: 0%....50%....100% - 48 passes
==PROF== Profiling "hgemm_tensor_core" - 3: 0%....50%....100% - 47 passes
==PROF== Profiling "hgemm_normal" - 4: 0%....50%....100% - 47 passes
==PROF== Profiling "hgemm_tensor_core" - 5: 0%....50%....100% - 47 passes
==PROF== Profiling "hgemm_normal" - 6: 0%....50%....100% - 47 passes
==PROF== Profiling "hgemm_tensor_core" - 7: 0%....50%....100% - 47 passes
==PROF== Profiling "hgemm_normal" - 8: 0%....50%....100% - 47 passes
==PROF== Profiling "hgemm_tensor_core" - 9: 0%....50%....100% - 47 passes
==PROF== Profiling "hgemm_normal" - 10: 0%....50%....100% - 47 passes
==PROF== Profiling "hgemm_tensor_core" - 11: 0%....50%....100% - 48 passes
==PROF== Profiling "hgemm_normal" - 12: 0%....50%....100% - 47 passes
==PROF== Profiling "hgemm_tensor_core" - 13: 0%....50%....100% - 47 passes
==PROF== Profiling "hgemm_normal" - 14: 0%....50%....100% - 47 passes
==PROF== Profiling "hgemm_tensor_core" - 15: 0%....50%....100% - 47 passes
==PROF== Profiling "hgemm_normal" - 16: 0%....50%....100% - 47 passes
==PROF== Profiling "hgemm_tensor_core" - 17: 0%....50%....100% - 48 passes
==PROF== Profiling "hgemm_normal" - 18: 0%....50%....100% - 47 passes
==PROF== Profiling "hgemm_tensor_core" - 19: 0%....50%....100% - 47 passes
==PROF== Profiling "hgemm_normal" - 20: 0%....50%....100% - 47 passes
==PROF== Profiling "hgemm_tensor_core" - 21: 0%....50%....100% - 47 passes
==PROF== Profiling "hgemm_normal" - 22: 0%....50%....100% - 47 passes
==PROF== Profiling "hgemm_tensor_core" - 23: 0%....50%....100% - 47 passes
==PROF== Profiling "hgemm_normal" - 24: 0%....50%....100% - 47 passes
==PROF== Profiling "hgemm_tensor_core" - 25: 0%....50%....100% - 47 passes
==PROF== Profiling "hgemm_normal" - 26: 0%....50%....100% - 47 passes
==PROF== Profiling "hgemm_tensor_core" - 27: 0%....50%....100% - 47 passes
==PROF== Profiling "hgemm_normal" - 28: 0%....50%....100% - 47 passes
==PROF== Profiling "hgemm_tensor_core" - 29: 0%....50%....100% - 47 passes
==PROF== Profiling "hgemm_normal" - 30: 0%....50%....100% - 47 passes
==PROF== Profiling "hgemm_tensor_core" - 31: 0%....50%....100% - 47 passes
Total execution time: 101787.921875 ms
==PROF== Disconnected from process 1819
[1819] hgemm_stream_dilay_sm80@127.0.0.1
  hgemm_normal(const __half *, const __half *, float *, int, int, unsigned long, unsigned long, unsigned long) (128, 8, 1)x(16, 16, 1), Context 1, Stream 14, Device 0, CC 8.0
    Section: GPU Speed Of Light Throughput
    ----------------------- ----------- ------------
    Metric Name             Metric Unit Metric Value
    ----------------------- ----------- ------------
    DRAM Frequency                  Ghz         1.51
    SM Frequency                    Ghz         1.06
    Elapsed Cycles                cycle       367780
    Memory Throughput                 %        70.85
    DRAM Throughput                   %         1.33
    Duration                         us       345.54
    L1/TEX Cache Throughput           %        81.66
    L2 Cache Throughput               %        12.75
    SM Active Cycles              cycle    318916.63
    Compute (SM) Throughput           %        63.46
    ----------------------- ----------- ------------

    INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. 
          Check both the Compute Workload Analysis and Memory Workload Analysis sections.                               

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved 21% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         3.74
    Dropped Samples                sample            0
    Maximum Sampling Interval       cycle        40000
    # Pass Groups                                    4
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         2.84
    Executed Ipc Elapsed  inst/cycle         2.46
    Issue Slots Busy               %        71.04
    Issued Ipc Active     inst/cycle         2.84
    SM Busy                        %        71.04
    -------------------- ----------- ------------

    INF   FMA is the highest-utilized pipeline (27.5%) based on active cycles, taking into account the rates of its     
          different instructions. It executes 32-bit floating point (FADD, FMUL, FMAD, ...) and integer (IMUL, IMAD)    
          operations. It is well-utilized, but should not be a bottleneck.                                              

    Section: Memory Workload Analysis
    --------------------------- ----------- ------------
    Metric Name                 Metric Unit Metric Value
    --------------------------- ----------- ------------
    Memory Throughput               Gbyte/s        25.81
    Mem Busy                              %        70.85
    Max Bandwidth                         %        63.46
    L1/TEX Hit Rate                       %        19.15
    L2 Compression Success Rate           %            0
    L2 Compression Ratio                               0
    L2 Hit Rate                           %        91.26
    Mem Pipes Busy                        %        63.46
    --------------------------- ----------- ------------

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %        71.02
    Issued Warp Per Scheduler                        0.71
    No Eligible                            %        28.98
    Active Warps Per Scheduler          warp        11.99
    Eligible Warps Per Scheduler        warp         3.67
    ---------------------------- ----------- ------------

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        16.88
    Warp Cycles Per Executed Instruction           cycle        16.89
    Avg. Active Threads Per Warp                                   32
    Avg. Not Predicated Off Threads Per Warp                    31.65
    ---------------------------------------- ----------- ------------

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst    226417.78
    Executed Instructions                           inst     97812480
    Avg. Issued Instructions Per Scheduler          inst    226550.48
    Issued Instructions                             inst     97869808
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                   256
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                   1024
    Registers Per Thread             register/thread              30
    Shared Memory Configuration Size           Kbyte           32.77
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block       Kbyte/block            1.02
    # SMs                                         SM             108
    Threads                                   thread          262144
    Uses Green Context                                             0
    Waves Per SM                                                1.19
    -------------------------------- --------------- ---------------

    OPT   Est. Speedup: 50%                                                                                             
          A wave of thread blocks is defined as the maximum number of blocks that can be executed in parallel on the    
          target GPU. The number of blocks in a wave depends on the number of multiprocessors and the theoretical       
          occupancy of the kernel. This kernel launch results in 1 full waves and a partial wave of 159 thread blocks.  
          Under the assumption of a uniform execution duration of all thread blocks, the partial wave may account for   
          up to 50.0% of the total kernel runtime with a lower occupancy of 25.0%. Try launching a grid with no         
          partial wave. The overall impact of this tail effect also lessens with the number of full waves executed for  
          a grid. See the Hardware Model                                                                                
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      
          details on launch configurations.                                                                             

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           32
    Block Limit Registers                 block            8
    Block Limit Shared Mem                block           16
    Block Limit Warps                     block            8
    Theoretical Active Warps per SM        warp           64
    Theoretical Occupancy                     %          100
    Achieved Occupancy                        %        74.96
    Achieved Active Warps Per SM           warp        47.97
    ------------------------------- ----------- ------------

    OPT   Est. Local Speedup: 25.04%                                                                                    
          The difference between calculated theoretical (100.0%) and measured achieved occupancy (75.0%) can be the     
          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   
          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle      6966.70
    Total DRAM Elapsed Cycles        cycle     20894208
    Average L1 Active Cycles         cycle    318916.63
    Total L1 Elapsed Cycles          cycle     39695150
    Average L2 Active Cycles         cycle    319379.40
    Total L2 Elapsed Cycles          cycle     28161280
    Average SM Active Cycles         cycle    318916.63
    Total SM Elapsed Cycles          cycle     39695150
    Average SMSP Active Cycles       cycle    318990.11
    Total SMSP Elapsed Cycles        cycle    158780600
    -------------------------- ----------- ------------

    OPT   Est. Speedup: 10.94%                                                                                          
          One or more SMs have a much lower number of active cycles than the average number of active cycles. Maximum   
          instance value is 12.60% above the average, while the minimum instance value is 15.69% below the average.     
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 10.87%                                                                                          
          One or more SMSPs have a much lower number of active cycles than the average number of active cycles. Maximum 
          instance value is 12.52% above the average, while the minimum instance value is 16.09% below the average.     
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 10.94%                                                                                          
          One or more L1 Slices have a much lower number of active cycles than the average number of active cycles.     
          Maximum instance value is 12.60% above the average, while the minimum instance value is 15.69% below the      
          average.                                                                                                      

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.03
    Branch Instructions              inst      3162112
    Branch Efficiency                   %          100
    Avg. Divergent Branches                          0
    ------------------------- ----------- ------------

  hgemm_tensor_core(const __half *, const __half *, float *, int, int) (8, 128, 1)x(32, 1, 1), Context 1, Stream 15, Device 0, CC 8.0
    Section: GPU Speed Of Light Throughput
    ----------------------- ----------- ------------
    Metric Name             Metric Unit Metric Value
    ----------------------- ----------- ------------
    DRAM Frequency                  Ghz         1.51
    SM Frequency                    Ghz         1.06
    Elapsed Cycles                cycle       506172
    Memory Throughput                 %        89.04
    DRAM Throughput                   %         0.97
    Duration                         us       475.33
    L1/TEX Cache Throughput           %        93.52
    L2 Cache Throughput               %         6.42
    SM Active Cycles              cycle    481916.82
    Compute (SM) Throughput           %        15.84
    ----------------------- ----------- ------------

    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing L1 in the Memory Workload Analysis section.                                                

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved 0% of  
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         4.19
    Dropped Samples                sample            0
    Maximum Sampling Interval       cycle        20000
    # Pass Groups                                    4
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         0.38
    Executed Ipc Elapsed  inst/cycle         0.36
    Issue Slots Busy               %         9.57
    Issued Ipc Active     inst/cycle         0.38
    SM Busy                        %         9.57
    -------------------- ----------- ------------

    OPT   Est. Local Speedup: 94.98%                                                                                    
          All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps   
          per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.             

    Section: Memory Workload Analysis
    --------------------------- ----------- ------------
    Metric Name                 Metric Unit Metric Value
    --------------------------- ----------- ------------
    Memory Throughput               Gbyte/s        18.77
    Mem Busy                              %        89.04
    Max Bandwidth                         %        15.84
    L1/TEX Hit Rate                       %        93.35
    L2 Compression Success Rate           %            0
    L2 Compression Ratio                               0
    L2 Hit Rate                           %        93.08
    Mem Pipes Busy                        %        15.84
    --------------------------- ----------- ------------

    Section: Memory Workload Analysis Tables
    OPT   Est. Speedup: 78.56%                                                                                          
          The memory access pattern for global loads from L1TEX might not be optimal. On average, only 3.8 of the 32    
          bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between   
          threads. Check the Source Counters section for uncoalesced global loads.                                      
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 46.76%                                                                                          
          The memory access pattern for shared loads might not be optimal and causes on average a 8.0 - way bank        
          conflict across all 262144 shared load requests.This results in 1048576 bank conflicts,  which represent      
          50.00% of the overall 2097225 wavefronts for shared loads. Check the Source Counters section for uncoalesced  
          shared loads.                                                                                                 
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 56.11%                                                                                          
          The memory access pattern for shared stores might not be optimal and causes on average a 2.5 - way bank       
          conflict across all 4194304 shared store requests.This results in 6291456 bank conflicts,  which represent    
          60.00% of the overall 10485760 wavefronts for shared stores. Check the Source Counters section for            
          uncoalesced shared stores.                                                                                    

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %         9.79
    Issued Warp Per Scheduler                        0.10
    No Eligible                            %        90.21
    Active Warps Per Scheduler          warp         2.36
    Eligible Warps Per Scheduler        warp         0.10
    ---------------------------- ----------- ------------

    OPT   Est. Local Speedup: 10.96%                                                                                    
          Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 10.2 cycles. This might leave hardware resources underutilized and may lead to    
          less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of   
          2.36 active warps per scheduler, but only an average of 0.10 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, reduce the time the active warps are stalled by inspecting the top stall reasons on the Warp  
          State Statistics and Source Counters sections.                                                                

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        24.12
    Warp Cycles Per Executed Instruction           cycle        24.13
    Avg. Active Threads Per Warp                                17.84
    Avg. Not Predicated Off Threads Per Warp                    17.73
    ---------------------------------------- ----------- ------------

    OPT   Est. Speedup: 10.96%                                                                                          
          On average, each warp of this kernel spends 16.7 cycles being stalled waiting for a scoreboard dependency on  
          a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited     
          upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the        
          memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by        
          increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently     
          used data to shared memory. This stall type represents about 69.4% of the total average of 24.1 cycles        
          between issuing two instructions.                                                                             
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on         
          sampling data. The Kernel Profiling Guide                                                                     
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details    
          on each stall reason.                                                                                         
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 7.064%                                                                                          
          Instructions are executed in warps, which are groups of 32 threads. Optimal instruction throughput is         
          achieved if all 32 threads of a warp execute the same instruction. The chosen launch configuration, early     
          thread completion, and divergent flow control can significantly lower the number of active threads in a warp  
          per cycle. This kernel achieves an average of 17.8 threads being active per cycle. This is further reduced    
          to 17.7 threads per warp due to predication. The compiler may use predication to avoid an actual branch.      
          Instead, all instructions are scheduled, but a per-thread condition code or predicate controls which threads  
          execute the instructions. Try to avoid different execution paths within a warp when possible.                 

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst     46108.44
    Executed Instructions                           inst     19918848
    Avg. Issued Instructions Per Scheduler          inst     46120.81
    Issued Instructions                             inst     19924190
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                    32
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                   1024
    Registers Per Thread             register/thread              32
    Shared Memory Configuration Size           Kbyte          102.40
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block       Kbyte/block            2.05
    # SMs                                         SM             108
    Threads                                   thread           32768
    Uses Green Context                                             0
    Waves Per SM                                                0.30
    -------------------------------- --------------- ---------------

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           32
    Block Limit Registers                 block           64
    Block Limit Shared Mem                block           33
    Block Limit Warps                     block           64
    Theoretical Active Warps per SM        warp           32
    Theoretical Occupancy                     %           50
    Achieved Occupancy                        %        14.43
    Achieved Active Warps Per SM           warp         9.23
    ------------------------------- ----------- ------------

    OPT   Est. Speedup: 10.96%                                                                                          
          The difference between calculated theoretical (50.0%) and measured achieved occupancy (14.4%) can be the      
          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   
          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 10.96%                                                                                          
          The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 16. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that   
          can fit on the SM.                                                                                            

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle      6968.70
    Total DRAM Elapsed Cycles        cycle     28744192
    Average L1 Active Cycles         cycle    481916.82
    Total L1 Elapsed Cycles          cycle     54665624
    Average L2 Active Cycles         cycle    429264.16
    Total L2 Elapsed Cycles          cycle     38782960
    Average SM Active Cycles         cycle    481916.82
    Total SM Elapsed Cycles          cycle     54665624
    Average SMSP Active Cycles       cycle    471319.01
    Total SMSP Elapsed Cycles        cycle    218662496
    -------------------------- ----------- ------------

    OPT   Est. Speedup: 5.829%                                                                                          
          One or more SMSPs have a much higher number of active cycles than the average number of active cycles.        
          Maximum instance value is 6.26% above the average, while the minimum instance value is 4.30% below the        
          average.                                                                                                      

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.03
    Branch Instructions              inst       528384
    Branch Efficiency                   %        50.19
    Avg. Divergent Branches                     303.41
    ------------------------- ----------- ------------

    OPT   Est. Speedup: 78.06%                                                                                          
          This kernel has uncoalesced global accesses resulting in a total of 31457280 excessive sectors (88% of the    
          total 35684352 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source       
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional      
          information on reducing uncoalesced device memory accesses.                                                   
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 55.54%                                                                                          
          This kernel has uncoalesced shared accesses resulting in a total of 7340032 excessive wavefronts (58% of the  
          total 12582912 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.  
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -ab) has an example on optimizing shared memory accesses.                                                     

  hgemm_normal(const __half *, const __half *, float *, int, int, unsigned long, unsigned long, unsigned long) (128, 8, 1)x(16, 16, 1), Context 1, Stream 16, Device 0, CC 8.0
    Section: GPU Speed Of Light Throughput
    ----------------------- ----------- ------------
    Metric Name             Metric Unit Metric Value
    ----------------------- ----------- ------------
    DRAM Frequency                  Ghz         1.51
    SM Frequency                    Ghz         1.06
    Elapsed Cycles                cycle       367827
    Memory Throughput                 %        70.84
    DRAM Throughput                   %         1.33
    Duration                         us       345.57
    L1/TEX Cache Throughput           %        81.57
    L2 Cache Throughput               %        12.77
    SM Active Cycles              cycle    319258.79
    Compute (SM) Throughput           %        63.45
    ----------------------- ----------- ------------

    INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. 
          Check both the Compute Workload Analysis and Memory Workload Analysis sections.                               

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved 21% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Kbyte       262.14
    Dropped Samples                sample            0
    Maximum Sampling Interval       cycle        20000
    # Pass Groups                                    4
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         2.84
    Executed Ipc Elapsed  inst/cycle         2.46
    Issue Slots Busy               %        70.96
    Issued Ipc Active     inst/cycle         2.84
    SM Busy                        %        70.96
    -------------------- ----------- ------------

    INF   FMA is the highest-utilized pipeline (27.5%) based on active cycles, taking into account the rates of its     
          different instructions. It executes 32-bit floating point (FADD, FMUL, FMAD, ...) and integer (IMUL, IMAD)    
          operations. It is well-utilized, but should not be a bottleneck.                                              

    Section: Memory Workload Analysis
    --------------------------- ----------- ------------
    Metric Name                 Metric Unit Metric Value
    --------------------------- ----------- ------------
    Memory Throughput               Gbyte/s        25.81
    Mem Busy                              %        70.84
    Max Bandwidth                         %        63.45
    L1/TEX Hit Rate                       %        19.07
    L2 Compression Success Rate           %            0
    L2 Compression Ratio                               0
    L2 Hit Rate                           %        91.71
    Mem Pipes Busy                        %        63.45
    --------------------------- ----------- ------------

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %        70.98
    Issued Warp Per Scheduler                        0.71
    No Eligible                            %        29.02
    Active Warps Per Scheduler          warp        11.99
    Eligible Warps Per Scheduler        warp         3.67
    ---------------------------- ----------- ------------

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        16.90
    Warp Cycles Per Executed Instruction           cycle        16.91
    Avg. Active Threads Per Warp                                   32
    Avg. Not Predicated Off Threads Per Warp                    31.65
    ---------------------------------------- ----------- ------------

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst    226417.78
    Executed Instructions                           inst     97812480
    Avg. Issued Instructions Per Scheduler          inst    226551.76
    Issued Instructions                             inst     97870359
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                   256
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                   1024
    Registers Per Thread             register/thread              30
    Shared Memory Configuration Size           Kbyte           32.77
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block       Kbyte/block            1.02
    # SMs                                         SM             108
    Threads                                   thread          262144
    Uses Green Context                                             0
    Waves Per SM                                                1.19
    -------------------------------- --------------- ---------------

    OPT   Est. Speedup: 50%                                                                                             
          A wave of thread blocks is defined as the maximum number of blocks that can be executed in parallel on the    
          target GPU. The number of blocks in a wave depends on the number of multiprocessors and the theoretical       
          occupancy of the kernel. This kernel launch results in 1 full waves and a partial wave of 159 thread blocks.  
          Under the assumption of a uniform execution duration of all thread blocks, the partial wave may account for   
          up to 50.0% of the total kernel runtime with a lower occupancy of 25.1%. Try launching a grid with no         
          partial wave. The overall impact of this tail effect also lessens with the number of full waves executed for  
          a grid. See the Hardware Model                                                                                
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      
          details on launch configurations.                                                                             

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           32
    Block Limit Registers                 block            8
    Block Limit Shared Mem                block           16
    Block Limit Warps                     block            8
    Theoretical Active Warps per SM        warp           64
    Theoretical Occupancy                     %          100
    Achieved Occupancy                        %        74.94
    Achieved Active Warps Per SM           warp        47.96
    ------------------------------- ----------- ------------

    OPT   Est. Local Speedup: 25.06%                                                                                    
          The difference between calculated theoretical (100.0%) and measured achieved occupancy (74.9%) can be the     
          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   
          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle      6967.60
    Total DRAM Elapsed Cycles        cycle     20896256
    Average L1 Active Cycles         cycle    319258.79
    Total L1 Elapsed Cycles          cycle     39701490
    Average L2 Active Cycles         cycle    321851.14
    Total L2 Elapsed Cycles          cycle     28166400
    Average SM Active Cycles         cycle    319258.79
    Total SM Elapsed Cycles          cycle     39701490
    Average SMSP Active Cycles       cycle    319184.43
    Total SMSP Elapsed Cycles        cycle    158805960
    -------------------------- ----------- ------------

    OPT   Est. Speedup: 10.89%                                                                                          
          One or more SMs have a much lower number of active cycles than the average number of active cycles. Maximum   
          instance value is 12.54% above the average, while the minimum instance value is 15.93% below the average.     
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 11.03%                                                                                          
          One or more SMSPs have a much lower number of active cycles than the average number of active cycles. Maximum 
          instance value is 12.70% above the average, while the minimum instance value is 15.95% below the average.     
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 10.89%                                                                                          
          One or more L1 Slices have a much lower number of active cycles than the average number of active cycles.     
          Maximum instance value is 12.54% above the average, while the minimum instance value is 15.93% below the      
          average.                                                                                                      

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.03
    Branch Instructions              inst      3162112
    Branch Efficiency                   %          100
    Avg. Divergent Branches                          0
    ------------------------- ----------- ------------

  hgemm_tensor_core(const __half *, const __half *, float *, int, int) (8, 128, 1)x(32, 1, 1), Context 1, Stream 17, Device 0, CC 8.0
    Section: GPU Speed Of Light Throughput
    ----------------------- ----------- ------------
    Metric Name             Metric Unit Metric Value
    ----------------------- ----------- ------------
    DRAM Frequency                  Ghz         1.51
    SM Frequency                    Ghz         1.06
    Elapsed Cycles                cycle       506102
    Memory Throughput                 %        89.06
    DRAM Throughput                   %         0.97
    Duration                         us       475.26
    L1/TEX Cache Throughput           %        93.46
    L2 Cache Throughput               %         6.37
    SM Active Cycles              cycle    482215.50
    Compute (SM) Throughput           %        15.84
    ----------------------- ----------- ------------

    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing L1 in the Memory Workload Analysis section.                                                

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved 0% of  
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         4.19
    Dropped Samples                sample            0
    Maximum Sampling Interval       cycle        20000
    # Pass Groups                                    4
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         0.38
    Executed Ipc Elapsed  inst/cycle         0.36
    Issue Slots Busy               %         9.56
    Issued Ipc Active     inst/cycle         0.38
    SM Busy                        %         9.56
    -------------------- ----------- ------------

    OPT   Est. Local Speedup: 94.98%                                                                                    
          All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps   
          per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.             

    Section: Memory Workload Analysis
    --------------------------- ----------- ------------
    Metric Name                 Metric Unit Metric Value
    --------------------------- ----------- ------------
    Memory Throughput               Gbyte/s        18.77
    Mem Busy                              %        89.06
    Max Bandwidth                         %        15.84
    L1/TEX Hit Rate                       %        93.66
    L2 Compression Success Rate           %            0
    L2 Compression Ratio                               0
    L2 Hit Rate                           %        86.70
    Mem Pipes Busy                        %        15.84
    --------------------------- ----------- ------------

    Section: Memory Workload Analysis Tables
    OPT   Est. Speedup: 78.59%                                                                                          
          The memory access pattern for global loads from L1TEX might not be optimal. On average, only 3.8 of the 32    
          bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between   
          threads. Check the Source Counters section for uncoalesced global loads.                                      
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 46.73%                                                                                          
          The memory access pattern for shared loads might not be optimal and causes on average a 8.0 - way bank        
          conflict across all 262144 shared load requests.This results in 1048576 bank conflicts,  which represent      
          50.00% of the overall 2097257 wavefronts for shared loads. Check the Source Counters section for uncoalesced  
          shared loads.                                                                                                 
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 56.08%                                                                                          
          The memory access pattern for shared stores might not be optimal and causes on average a 2.5 - way bank       
          conflict across all 4194304 shared store requests.This results in 6291456 bank conflicts,  which represent    
          60.00% of the overall 10485760 wavefronts for shared stores. Check the Source Counters section for            
          uncoalesced shared stores.                                                                                    

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %         9.78
    Issued Warp Per Scheduler                        0.10
    No Eligible                            %        90.22
    Active Warps Per Scheduler          warp         2.36
    Eligible Warps Per Scheduler        warp         0.10
    ---------------------------- ----------- ------------

    OPT   Est. Local Speedup: 10.94%                                                                                    
          Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 10.2 cycles. This might leave hardware resources underutilized and may lead to    
          less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of   
          2.36 active warps per scheduler, but only an average of 0.10 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, reduce the time the active warps are stalled by inspecting the top stall reasons on the Warp  
          State Statistics and Source Counters sections.                                                                

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        24.12
    Warp Cycles Per Executed Instruction           cycle        24.12
    Avg. Active Threads Per Warp                                17.84
    Avg. Not Predicated Off Threads Per Warp                    17.73
    ---------------------------------------- ----------- ------------

    OPT   Est. Speedup: 10.94%                                                                                          
          On average, each warp of this kernel spends 16.8 cycles being stalled waiting for a scoreboard dependency on  
          a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited     
          upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the        
          memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by        
          increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently     
          used data to shared memory. This stall type represents about 69.6% of the total average of 24.1 cycles        
          between issuing two instructions.                                                                             
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on         
          sampling data. The Kernel Profiling Guide                                                                     
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details    
          on each stall reason.                                                                                         
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 7.066%                                                                                          
          Instructions are executed in warps, which are groups of 32 threads. Optimal instruction throughput is         
          achieved if all 32 threads of a warp execute the same instruction. The chosen launch configuration, early     
          thread completion, and divergent flow control can significantly lower the number of active threads in a warp  
          per cycle. This kernel achieves an average of 17.8 threads being active per cycle. This is further reduced    
          to 17.7 threads per warp due to predication. The compiler may use predication to avoid an actual branch.      
          Instead, all instructions are scheduled, but a per-thread condition code or predicate controls which threads  
          execute the instructions. Try to avoid different execution paths within a warp when possible.                 

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst     46108.44
    Executed Instructions                           inst     19918848
    Avg. Issued Instructions Per Scheduler          inst     46120.77
    Issued Instructions                             inst     19924174
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                    32
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                   1024
    Registers Per Thread             register/thread              32
    Shared Memory Configuration Size           Kbyte          102.40
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block       Kbyte/block            2.05
    # SMs                                         SM             108
    Threads                                   thread           32768
    Uses Green Context                                             0
    Waves Per SM                                                0.30
    -------------------------------- --------------- ---------------

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           32
    Block Limit Registers                 block           64
    Block Limit Shared Mem                block           33
    Block Limit Warps                     block           64
    Theoretical Active Warps per SM        warp           32
    Theoretical Occupancy                     %           50
    Achieved Occupancy                        %        14.42
    Achieved Active Warps Per SM           warp         9.23
    ------------------------------- ----------- ------------

    OPT   Est. Speedup: 10.94%                                                                                          
          The difference between calculated theoretical (50.0%) and measured achieved occupancy (14.4%) can be the      
          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   
          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 10.94%                                                                                          
          The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 16. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that   
          can fit on the SM.                                                                                            

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle      6968.70
    Total DRAM Elapsed Cycles        cycle     28739072
    Average L1 Active Cycles         cycle    482215.50
    Total L1 Elapsed Cycles          cycle     54649346
    Average L2 Active Cycles         cycle    437146.17
    Total L2 Elapsed Cycles          cycle     38773120
    Average SM Active Cycles         cycle    482215.50
    Total SM Elapsed Cycles          cycle     54649346
    Average SMSP Active Cycles       cycle    471437.37
    Total SMSP Elapsed Cycles        cycle    218597384
    -------------------------- ----------- ------------

    OPT   Est. Speedup: 5.878%                                                                                          
          One or more SMSPs have a much higher number of active cycles than the average number of active cycles.        
          Maximum instance value is 6.31% above the average, while the minimum instance value is 4.48% below the        
          average.                                                                                                      

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.03
    Branch Instructions              inst       528384
    Branch Efficiency                   %        50.19
    Avg. Divergent Branches                     303.41
    ------------------------- ----------- ------------

    OPT   Est. Speedup: 79.51%                                                                                          
          This kernel has uncoalesced global accesses resulting in a total of 31457280 excessive sectors (88% of the    
          total 35684352 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source       
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional      
          information on reducing uncoalesced device memory accesses.                                                   
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 55.59%                                                                                          
          This kernel has uncoalesced shared accesses resulting in a total of 7340032 excessive wavefronts (58% of the  
          total 12582912 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.  
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -ab) has an example on optimizing shared memory accesses.                                                     

  hgemm_normal(const __half *, const __half *, float *, int, int, unsigned long, unsigned long, unsigned long) (128, 8, 1)x(16, 16, 1), Context 1, Stream 18, Device 0, CC 8.0
    Section: GPU Speed Of Light Throughput
    ----------------------- ----------- ------------
    Metric Name             Metric Unit Metric Value
    ----------------------- ----------- ------------
    DRAM Frequency                  Ghz         1.51
    SM Frequency                    Ghz         1.06
    Elapsed Cycles                cycle       367744
    Memory Throughput                 %        70.86
    DRAM Throughput                   %         1.33
    Duration                         us       345.47
    L1/TEX Cache Throughput           %        81.48
    L2 Cache Throughput               %        12.71
    SM Active Cycles              cycle    319596.60
    Compute (SM) Throughput           %        63.46
    ----------------------- ----------- ------------

    INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. 
          Check both the Compute Workload Analysis and Memory Workload Analysis sections.                               

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved 21% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         3.93
    Dropped Samples                sample            0
    Maximum Sampling Interval       cycle        40000
    # Pass Groups                                    4
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         2.83
    Executed Ipc Elapsed  inst/cycle         2.46
    Issue Slots Busy               %        70.89
    Issued Ipc Active     inst/cycle         2.84
    SM Busy                        %        70.89
    -------------------- ----------- ------------

    INF   FMA is the highest-utilized pipeline (27.4%) based on active cycles, taking into account the rates of its     
          different instructions. It executes 32-bit floating point (FADD, FMUL, FMAD, ...) and integer (IMUL, IMAD)    
          operations. It is well-utilized, but should not be a bottleneck.                                              

    Section: Memory Workload Analysis
    --------------------------- ----------- ------------
    Metric Name                 Metric Unit Metric Value
    --------------------------- ----------- ------------
    Memory Throughput               Gbyte/s        25.81
    Mem Busy                              %        70.86
    Max Bandwidth                         %        63.46
    L1/TEX Hit Rate                       %        19.11
    L2 Compression Success Rate           %            0
    L2 Compression Ratio                               0
    L2 Hit Rate                           %        91.27
    Mem Pipes Busy                        %        63.46
    --------------------------- ----------- ------------

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %        70.92
    Issued Warp Per Scheduler                        0.71
    No Eligible                            %        29.08
    Active Warps Per Scheduler          warp        11.98
    Eligible Warps Per Scheduler        warp         3.66
    ---------------------------- ----------- ------------

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        16.89
    Warp Cycles Per Executed Instruction           cycle        16.90
    Avg. Active Threads Per Warp                                   32
    Avg. Not Predicated Off Threads Per Warp                    31.65
    ---------------------------------------- ----------- ------------

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst    226417.78
    Executed Instructions                           inst     97812480
    Avg. Issued Instructions Per Scheduler          inst    226550.14
    Issued Instructions                             inst     97869661
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                   256
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                   1024
    Registers Per Thread             register/thread              30
    Shared Memory Configuration Size           Kbyte           32.77
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block       Kbyte/block            1.02
    # SMs                                         SM             108
    Threads                                   thread          262144
    Uses Green Context                                             0
    Waves Per SM                                                1.19
    -------------------------------- --------------- ---------------

    OPT   Est. Speedup: 50%                                                                                             
          A wave of thread blocks is defined as the maximum number of blocks that can be executed in parallel on the    
          target GPU. The number of blocks in a wave depends on the number of multiprocessors and the theoretical       
          occupancy of the kernel. This kernel launch results in 1 full waves and a partial wave of 159 thread blocks.  
          Under the assumption of a uniform execution duration of all thread blocks, the partial wave may account for   
          up to 50.0% of the total kernel runtime with a lower occupancy of 25.2%. Try launching a grid with no         
          partial wave. The overall impact of this tail effect also lessens with the number of full waves executed for  
          a grid. See the Hardware Model                                                                                
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      
          details on launch configurations.                                                                             

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           32
    Block Limit Registers                 block            8
    Block Limit Shared Mem                block           16
    Block Limit Warps                     block            8
    Theoretical Active Warps per SM        warp           64
    Theoretical Occupancy                     %          100
    Achieved Occupancy                        %        74.82
    Achieved Active Warps Per SM           warp        47.89
    ------------------------------- ----------- ------------

    OPT   Est. Local Speedup: 25.18%                                                                                    
          The difference between calculated theoretical (100.0%) and measured achieved occupancy (74.8%) can be the     
          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   
          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle      6966.70
    Total DRAM Elapsed Cycles        cycle     20891648
    Average L1 Active Cycles         cycle    319596.60
    Total L1 Elapsed Cycles          cycle     39692530
    Average L2 Active Cycles         cycle    321758.96
    Total L2 Elapsed Cycles          cycle     28163680
    Average SM Active Cycles         cycle    319596.60
    Total SM Elapsed Cycles          cycle     39692530
    Average SMSP Active Cycles       cycle    319443.15
    Total SMSP Elapsed Cycles        cycle    158770120
    -------------------------- ----------- ------------

    OPT   Est. Speedup: 10.82%                                                                                          
          One or more SMs have a much lower number of active cycles than the average number of active cycles. Maximum   
          instance value is 12.44% above the average, while the minimum instance value is 16.10% below the average.     
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 10.8%                                                                                           
          One or more SMSPs have a much lower number of active cycles than the average number of active cycles. Maximum 
          instance value is 12.43% above the average, while the minimum instance value is 15.81% below the average.     
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 10.82%                                                                                          
          One or more L1 Slices have a much lower number of active cycles than the average number of active cycles.     
          Maximum instance value is 12.44% above the average, while the minimum instance value is 16.10% below the      
          average.                                                                                                      

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.03
    Branch Instructions              inst      3162112
    Branch Efficiency                   %          100
    Avg. Divergent Branches                          0
    ------------------------- ----------- ------------

  hgemm_tensor_core(const __half *, const __half *, float *, int, int) (8, 128, 1)x(32, 1, 1), Context 1, Stream 19, Device 0, CC 8.0
    Section: GPU Speed Of Light Throughput
    ----------------------- ----------- ------------
    Metric Name             Metric Unit Metric Value
    ----------------------- ----------- ------------
    DRAM Frequency                  Ghz         1.51
    SM Frequency                    Ghz         1.06
    Elapsed Cycles                cycle       506133
    Memory Throughput                 %        89.04
    DRAM Throughput                   %         0.97
    Duration                         us       475.30
    L1/TEX Cache Throughput           %        93.42
    L2 Cache Throughput               %         6.28
    SM Active Cycles              cycle    482427.91
    Compute (SM) Throughput           %        15.84
    ----------------------- ----------- ------------

    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing L1 in the Memory Workload Analysis section.                                                

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved 0% of  
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         4.19
    Dropped Samples                sample            0
    Maximum Sampling Interval       cycle        20000
    # Pass Groups                                    4
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         0.38
    Executed Ipc Elapsed  inst/cycle         0.36
    Issue Slots Busy               %         9.56
    Issued Ipc Active     inst/cycle         0.38
    SM Busy                        %         9.56
    -------------------- ----------- ------------

    OPT   Est. Local Speedup: 94.98%                                                                                    
          All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps   
          per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.             

    Section: Memory Workload Analysis
    --------------------------- ----------- ------------
    Metric Name                 Metric Unit Metric Value
    --------------------------- ----------- ------------
    Memory Throughput               Gbyte/s        18.77
    Mem Busy                              %        89.04
    Max Bandwidth                         %        15.84
    L1/TEX Hit Rate                       %        93.76
    L2 Compression Success Rate           %            0
    L2 Compression Ratio                               0
    L2 Hit Rate                           %        87.75
    Mem Pipes Busy                        %        15.84
    --------------------------- ----------- ------------

    Section: Memory Workload Analysis Tables
    OPT   Est. Speedup: 78.57%                                                                                          
          The memory access pattern for global loads from L1TEX might not be optimal. On average, only 3.8 of the 32    
          bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between   
          threads. Check the Source Counters section for uncoalesced global loads.                                      
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 46.71%                                                                                          
          The memory access pattern for shared loads might not be optimal and causes on average a 8.0 - way bank        
          conflict across all 262144 shared load requests.This results in 1048576 bank conflicts,  which represent      
          50.00% of the overall 2097252 wavefronts for shared loads. Check the Source Counters section for uncoalesced  
          shared loads.                                                                                                 
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 56.05%                                                                                          
          The memory access pattern for shared stores might not be optimal and causes on average a 2.5 - way bank       
          conflict across all 4194304 shared store requests.This results in 6291456 bank conflicts,  which represent    
          60.00% of the overall 10485760 wavefronts for shared stores. Check the Source Counters section for            
          uncoalesced shared stores.                                                                                    

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %         9.77
    Issued Warp Per Scheduler                        0.10
    No Eligible                            %        90.23
    Active Warps Per Scheduler          warp         2.36
    Eligible Warps Per Scheduler        warp         0.10
    ---------------------------- ----------- ------------

    OPT   Est. Local Speedup: 10.96%                                                                                    
          Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 10.2 cycles. This might leave hardware resources underutilized and may lead to    
          less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of   
          2.36 active warps per scheduler, but only an average of 0.10 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, reduce the time the active warps are stalled by inspecting the top stall reasons on the Warp  
          State Statistics and Source Counters sections.                                                                

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        24.14
    Warp Cycles Per Executed Instruction           cycle        24.15
    Avg. Active Threads Per Warp                                17.84
    Avg. Not Predicated Off Threads Per Warp                    17.73
    ---------------------------------------- ----------- ------------

    OPT   Est. Speedup: 10.96%                                                                                          
          On average, each warp of this kernel spends 16.8 cycles being stalled waiting for a scoreboard dependency on  
          a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited     
          upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the        
          memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by        
          increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently     
          used data to shared memory. This stall type represents about 69.7% of the total average of 24.1 cycles        
          between issuing two instructions.                                                                             
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on         
          sampling data. The Kernel Profiling Guide                                                                     
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details    
          on each stall reason.                                                                                         
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 7.064%                                                                                          
          Instructions are executed in warps, which are groups of 32 threads. Optimal instruction throughput is         
          achieved if all 32 threads of a warp execute the same instruction. The chosen launch configuration, early     
          thread completion, and divergent flow control can significantly lower the number of active threads in a warp  
          per cycle. This kernel achieves an average of 17.8 threads being active per cycle. This is further reduced    
          to 17.7 threads per warp due to predication. The compiler may use predication to avoid an actual branch.      
          Instead, all instructions are scheduled, but a per-thread condition code or predicate controls which threads  
          execute the instructions. Try to avoid different execution paths within a warp when possible.                 

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst     46108.44
    Executed Instructions                           inst     19918848
    Avg. Issued Instructions Per Scheduler          inst     46122.02
    Issued Instructions                             inst     19924714
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                    32
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                   1024
    Registers Per Thread             register/thread              32
    Shared Memory Configuration Size           Kbyte          102.40
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block       Kbyte/block            2.05
    # SMs                                         SM             108
    Threads                                   thread           32768
    Uses Green Context                                             0
    Waves Per SM                                                0.30
    -------------------------------- --------------- ---------------

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           32
    Block Limit Registers                 block           64
    Block Limit Shared Mem                block           33
    Block Limit Warps                     block           64
    Theoretical Active Warps per SM        warp           32
    Theoretical Occupancy                     %           50
    Achieved Occupancy                        %        14.43
    Achieved Active Warps Per SM           warp         9.23
    ------------------------------- ----------- ------------

    OPT   Est. Speedup: 10.96%                                                                                          
          The difference between calculated theoretical (50.0%) and measured achieved occupancy (14.4%) can be the      
          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   
          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 10.96%                                                                                          
          The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 16. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that   
          can fit on the SM.                                                                                            

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle      6968.70
    Total DRAM Elapsed Cycles        cycle     28741632
    Average L1 Active Cycles         cycle    482427.91
    Total L1 Elapsed Cycles          cycle     54661874
    Average L2 Active Cycles         cycle    434682.24
    Total L2 Elapsed Cycles          cycle     38780160
    Average SM Active Cycles         cycle    482427.91
    Total SM Elapsed Cycles          cycle     54661874
    Average SMSP Active Cycles       cycle    472150.44
    Total SMSP Elapsed Cycles        cycle    218647496
    -------------------------- ----------- ------------

    OPT   Est. Speedup: 5.839%                                                                                          
          One or more SMSPs have a much higher number of active cycles than the average number of active cycles.        
          Maximum instance value is 6.26% above the average, while the minimum instance value is 4.41% below the        
          average.                                                                                                      

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.03
    Branch Instructions              inst       528384
    Branch Efficiency                   %        50.19
    Avg. Divergent Branches                     303.41
    ------------------------- ----------- ------------

    OPT   Est. Speedup: 79.05%                                                                                          
          This kernel has uncoalesced global accesses resulting in a total of 31457280 excessive sectors (88% of the    
          total 35684352 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source       
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional      
          information on reducing uncoalesced device memory accesses.                                                   
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 55.6%                                                                                           
          This kernel has uncoalesced shared accesses resulting in a total of 7340032 excessive wavefronts (58% of the  
          total 12582912 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.  
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -ab) has an example on optimizing shared memory accesses.                                                     

  hgemm_normal(const __half *, const __half *, float *, int, int, unsigned long, unsigned long, unsigned long) (128, 8, 1)x(16, 16, 1), Context 1, Stream 20, Device 0, CC 8.0
    Section: GPU Speed Of Light Throughput
    ----------------------- ----------- ------------
    Metric Name             Metric Unit Metric Value
    ----------------------- ----------- ------------
    DRAM Frequency                  Ghz         1.51
    SM Frequency                    Ghz         1.06
    Elapsed Cycles                cycle       367621
    Memory Throughput                 %        70.88
    DRAM Throughput                   %         1.33
    Duration                         us       345.38
    L1/TEX Cache Throughput           %        81.59
    L2 Cache Throughput               %        12.72
    SM Active Cycles              cycle    319185.17
    Compute (SM) Throughput           %        63.49
    ----------------------- ----------- ------------

    INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. 
          Check both the Compute Workload Analysis and Memory Workload Analysis sections.                               

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved 21% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         4.00
    Dropped Samples                sample            0
    Maximum Sampling Interval       cycle        40000
    # Pass Groups                                    4
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         2.84
    Executed Ipc Elapsed  inst/cycle         2.47
    Issue Slots Busy               %        70.98
    Issued Ipc Active     inst/cycle         2.84
    SM Busy                        %        70.98
    -------------------- ----------- ------------

    INF   FMA is the highest-utilized pipeline (27.5%) based on active cycles, taking into account the rates of its     
          different instructions. It executes 32-bit floating point (FADD, FMUL, FMAD, ...) and integer (IMUL, IMAD)    
          operations. It is well-utilized, but should not be a bottleneck.                                              

    Section: Memory Workload Analysis
    --------------------------- ----------- ------------
    Metric Name                 Metric Unit Metric Value
    --------------------------- ----------- ------------
    Memory Throughput               Gbyte/s        25.82
    Mem Busy                              %        70.88
    Max Bandwidth                         %        63.49
    L1/TEX Hit Rate                       %        19.34
    L2 Compression Success Rate           %            0
    L2 Compression Ratio                               0
    L2 Hit Rate                           %        91.50
    Mem Pipes Busy                        %        63.49
    --------------------------- ----------- ------------

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %        71.08
    Issued Warp Per Scheduler                        0.71
    No Eligible                            %        28.92
    Active Warps Per Scheduler          warp        12.01
    Eligible Warps Per Scheduler        warp         3.68
    ---------------------------- ----------- ------------

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        16.90
    Warp Cycles Per Executed Instruction           cycle        16.91
    Avg. Active Threads Per Warp                                   32
    Avg. Not Predicated Off Threads Per Warp                    31.65
    ---------------------------------------- ----------- ------------

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst    226417.78
    Executed Instructions                           inst     97812480
    Avg. Issued Instructions Per Scheduler          inst    226551.17
    Issued Instructions                             inst     97870106
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                   256
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                   1024
    Registers Per Thread             register/thread              30
    Shared Memory Configuration Size           Kbyte           32.77
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block       Kbyte/block            1.02
    # SMs                                         SM             108
    Threads                                   thread          262144
    Uses Green Context                                             0
    Waves Per SM                                                1.19
    -------------------------------- --------------- ---------------

    OPT   Est. Speedup: 50%                                                                                             
          A wave of thread blocks is defined as the maximum number of blocks that can be executed in parallel on the    
          target GPU. The number of blocks in a wave depends on the number of multiprocessors and the theoretical       
          occupancy of the kernel. This kernel launch results in 1 full waves and a partial wave of 159 thread blocks.  
          Under the assumption of a uniform execution duration of all thread blocks, the partial wave may account for   
          up to 50.0% of the total kernel runtime with a lower occupancy of 25.0%. Try launching a grid with no         
          partial wave. The overall impact of this tail effect also lessens with the number of full waves executed for  
          a grid. See the Hardware Model                                                                                
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      
          details on launch configurations.                                                                             

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           32
    Block Limit Registers                 block            8
    Block Limit Shared Mem                block           16
    Block Limit Warps                     block            8
    Theoretical Active Warps per SM        warp           64
    Theoretical Occupancy                     %          100
    Achieved Occupancy                        %        74.98
    Achieved Active Warps Per SM           warp        47.99
    ------------------------------- ----------- ------------

    OPT   Est. Local Speedup: 25.02%                                                                                    
          The difference between calculated theoretical (100.0%) and measured achieved occupancy (75.0%) can be the     
          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   
          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle      6966.70
    Total DRAM Elapsed Cycles        cycle     20883840
    Average L1 Active Cycles         cycle    319185.17
    Total L1 Elapsed Cycles          cycle     39678052
    Average L2 Active Cycles         cycle    320603.69
    Total L2 Elapsed Cycles          cycle     28151840
    Average SM Active Cycles         cycle    319185.17
    Total SM Elapsed Cycles          cycle     39678052
    Average SMSP Active Cycles       cycle    318727.74
    Total SMSP Elapsed Cycles        cycle    158712208
    -------------------------- ----------- ------------

    OPT   Est. Speedup: 10.92%                                                                                          
          One or more SMs have a much lower number of active cycles than the average number of active cycles. Maximum   
          instance value is 12.56% above the average, while the minimum instance value is 15.92% below the average.     
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 11.11%                                                                                          
          One or more SMSPs have a much lower number of active cycles than the average number of active cycles. Maximum 
          instance value is 12.80% above the average, while the minimum instance value is 15.64% below the average.     
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 10.92%                                                                                          
          One or more L1 Slices have a much lower number of active cycles than the average number of active cycles.     
          Maximum instance value is 12.56% above the average, while the minimum instance value is 15.92% below the      
          average.                                                                                                      

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.03
    Branch Instructions              inst      3162112
    Branch Efficiency                   %          100
    Avg. Divergent Branches                          0
    ------------------------- ----------- ------------

  hgemm_tensor_core(const __half *, const __half *, float *, int, int) (8, 128, 1)x(32, 1, 1), Context 1, Stream 21, Device 0, CC 8.0
    Section: GPU Speed Of Light Throughput
    ----------------------- ----------- ------------
    Metric Name             Metric Unit Metric Value
    ----------------------- ----------- ------------
    DRAM Frequency                  Ghz         1.51
    SM Frequency                    Ghz         1.06
    Elapsed Cycles                cycle       506597
    Memory Throughput                 %        88.96
    DRAM Throughput                   %         0.97
    Duration                         us       475.71
    L1/TEX Cache Throughput           %        93.43
    L2 Cache Throughput               %         6.61
    SM Active Cycles              cycle    482377.62
    Compute (SM) Throughput           %        15.82
    ----------------------- ----------- ------------

    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing L1 in the Memory Workload Analysis section.                                                

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved 0% of  
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         4.19
    Dropped Samples                sample            0
    Maximum Sampling Interval       cycle        20000
    # Pass Groups                                    4
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         0.38
    Executed Ipc Elapsed  inst/cycle         0.36
    Issue Slots Busy               %         9.56
    Issued Ipc Active     inst/cycle         0.38
    SM Busy                        %         9.56
    -------------------- ----------- ------------

    OPT   Est. Local Speedup: 94.98%                                                                                    
          All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps   
          per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.             

    Section: Memory Workload Analysis
    --------------------------- ----------- ------------
    Metric Name                 Metric Unit Metric Value
    --------------------------- ----------- ------------
    Memory Throughput               Gbyte/s        18.75
    Mem Busy                              %        88.96
    Max Bandwidth                         %        15.82
    L1/TEX Hit Rate                       %        93.71
    L2 Compression Success Rate           %            0
    L2 Compression Ratio                               0
    L2 Hit Rate                           %        97.34
    Mem Pipes Busy                        %        15.82
    --------------------------- ----------- ------------

    Section: Memory Workload Analysis Tables
    OPT   Est. Speedup: 78.5%                                                                                           
          The memory access pattern for global loads from L1TEX might not be optimal. On average, only 3.8 of the 32    
          bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between   
          threads. Check the Source Counters section for uncoalesced global loads.                                      
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 46.71%                                                                                          
          The memory access pattern for shared loads might not be optimal and causes on average a 8.0 - way bank        
          conflict across all 262144 shared load requests.This results in 1048576 bank conflicts,  which represent      
          50.00% of the overall 2097233 wavefronts for shared loads. Check the Source Counters section for uncoalesced  
          shared loads.                                                                                                 
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 56.06%                                                                                          
          The memory access pattern for shared stores might not be optimal and causes on average a 2.5 - way bank       
          conflict across all 4194304 shared store requests.This results in 6291456 bank conflicts,  which represent    
          60.00% of the overall 10485760 wavefronts for shared stores. Check the Source Counters section for            
          uncoalesced shared stores.                                                                                    

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %         9.80
    Issued Warp Per Scheduler                        0.10
    No Eligible                            %        90.20
    Active Warps Per Scheduler          warp         2.36
    Eligible Warps Per Scheduler        warp         0.10
    ---------------------------- ----------- ------------

    OPT   Est. Local Speedup: 11.04%                                                                                    
          Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 10.2 cycles. This might leave hardware resources underutilized and may lead to    
          less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of   
          2.36 active warps per scheduler, but only an average of 0.10 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, reduce the time the active warps are stalled by inspecting the top stall reasons on the Warp  
          State Statistics and Source Counters sections.                                                                

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        24.08
    Warp Cycles Per Executed Instruction           cycle        24.09
    Avg. Active Threads Per Warp                                17.84
    Avg. Not Predicated Off Threads Per Warp                    17.73
    ---------------------------------------- ----------- ------------

    OPT   Est. Speedup: 11.04%                                                                                          
          On average, each warp of this kernel spends 16.7 cycles being stalled waiting for a scoreboard dependency on  
          a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited     
          upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the        
          memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by        
          increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently     
          used data to shared memory. This stall type represents about 69.5% of the total average of 24.1 cycles        
          between issuing two instructions.                                                                             
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on         
          sampling data. The Kernel Profiling Guide                                                                     
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details    
          on each stall reason.                                                                                         
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 7.058%                                                                                          
          Instructions are executed in warps, which are groups of 32 threads. Optimal instruction throughput is         
          achieved if all 32 threads of a warp execute the same instruction. The chosen launch configuration, early     
          thread completion, and divergent flow control can significantly lower the number of active threads in a warp  
          per cycle. This kernel achieves an average of 17.8 threads being active per cycle. This is further reduced    
          to 17.7 threads per warp due to predication. The compiler may use predication to avoid an actual branch.      
          Instead, all instructions are scheduled, but a per-thread condition code or predicate controls which threads  
          execute the instructions. Try to avoid different execution paths within a warp when possible.                 

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst     46108.44
    Executed Instructions                           inst     19918848
    Avg. Issued Instructions Per Scheduler          inst     46120.81
    Issued Instructions                             inst     19924189
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                    32
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                   1024
    Registers Per Thread             register/thread              32
    Shared Memory Configuration Size           Kbyte          102.40
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block       Kbyte/block            2.05
    # SMs                                         SM             108
    Threads                                   thread           32768
    Uses Green Context                                             0
    Waves Per SM                                                0.30
    -------------------------------- --------------- ---------------

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           32
    Block Limit Registers                 block           64
    Block Limit Shared Mem                block           33
    Block Limit Warps                     block           64
    Theoretical Active Warps per SM        warp           32
    Theoretical Occupancy                     %           50
    Achieved Occupancy                        %        14.39
    Achieved Active Warps Per SM           warp         9.21
    ------------------------------- ----------- ------------

    OPT   Est. Speedup: 11.04%                                                                                          
          The difference between calculated theoretical (50.0%) and measured achieved occupancy (14.4%) can be the      
          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   
          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 11.04%                                                                                          
          The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 16. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that   
          can fit on the SM.                                                                                            

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle      6968.70
    Total DRAM Elapsed Cycles        cycle     28768768
    Average L1 Active Cycles         cycle    482377.62
    Total L1 Elapsed Cycles          cycle     54711796
    Average L2 Active Cycles         cycle    440715.24
    Total L2 Elapsed Cycles          cycle     38815520
    Average SM Active Cycles         cycle    482377.62
    Total SM Elapsed Cycles          cycle     54711796
    Average SMSP Active Cycles       cycle    470697.71
    Total SMSP Elapsed Cycles        cycle    218847184
    -------------------------- ----------- ------------

    OPT   Est. Speedup: 6.077%                                                                                          
          One or more SMSPs have a much higher number of active cycles than the average number of active cycles.        
          Maximum instance value is 6.54% above the average, while the minimum instance value is 4.43% below the        
          average.                                                                                                      

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.03
    Branch Instructions              inst       528384
    Branch Efficiency                   %        50.19
    Avg. Divergent Branches                     303.41
    ------------------------- ----------- ------------

    OPT   Est. Speedup: 80.07%                                                                                          
          This kernel has uncoalesced global accesses resulting in a total of 31457280 excessive sectors (88% of the    
          total 35684352 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source       
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional      
          information on reducing uncoalesced device memory accesses.                                                   
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 55.55%                                                                                          
          This kernel has uncoalesced shared accesses resulting in a total of 7340032 excessive wavefronts (58% of the  
          total 12582912 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.  
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -ab) has an example on optimizing shared memory accesses.                                                     

  hgemm_normal(const __half *, const __half *, float *, int, int, unsigned long, unsigned long, unsigned long) (128, 8, 1)x(16, 16, 1), Context 1, Stream 14, Device 0, CC 8.0
    Section: GPU Speed Of Light Throughput
    ----------------------- ----------- ------------
    Metric Name             Metric Unit Metric Value
    ----------------------- ----------- ------------
    DRAM Frequency                  Ghz         1.51
    SM Frequency                    Ghz         1.06
    Elapsed Cycles                cycle       367884
    Memory Throughput                 %        70.83
    DRAM Throughput                   %         1.33
    Duration                         us       345.63
    L1/TEX Cache Throughput           %        81.60
    L2 Cache Throughput               %        12.71
    SM Active Cycles              cycle    319136.60
    Compute (SM) Throughput           %        63.44
    ----------------------- ----------- ------------

    INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. 
          Check both the Compute Workload Analysis and Memory Workload Analysis sections.                               

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved 21% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         3.93
    Dropped Samples                sample            0
    Maximum Sampling Interval       cycle        40000
    # Pass Groups                                    4
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         2.84
    Executed Ipc Elapsed  inst/cycle         2.46
    Issue Slots Busy               %        70.99
    Issued Ipc Active     inst/cycle         2.84
    SM Busy                        %        70.99
    -------------------- ----------- ------------

    INF   FMA is the highest-utilized pipeline (27.5%) based on active cycles, taking into account the rates of its     
          different instructions. It executes 32-bit floating point (FADD, FMUL, FMAD, ...) and integer (IMUL, IMAD)    
          operations. It is well-utilized, but should not be a bottleneck.                                              

    Section: Memory Workload Analysis
    --------------------------- ----------- ------------
    Metric Name                 Metric Unit Metric Value
    --------------------------- ----------- ------------
    Memory Throughput               Gbyte/s        25.80
    Mem Busy                              %        70.83
    Max Bandwidth                         %        63.44
    L1/TEX Hit Rate                       %        19.27
    L2 Compression Success Rate           %            0
    L2 Compression Ratio                               0
    L2 Hit Rate                           %        91.21
    Mem Pipes Busy                        %        63.44
    --------------------------- ----------- ------------

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %        70.89
    Issued Warp Per Scheduler                        0.71
    No Eligible                            %        29.11
    Active Warps Per Scheduler          warp        11.96
    Eligible Warps Per Scheduler        warp         3.67
    ---------------------------- ----------- ------------

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        16.88
    Warp Cycles Per Executed Instruction           cycle        16.89
    Avg. Active Threads Per Warp                                   32
    Avg. Not Predicated Off Threads Per Warp                    31.65
    ---------------------------------------- ----------- ------------

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst    226417.78
    Executed Instructions                           inst     97812480
    Avg. Issued Instructions Per Scheduler          inst    226550.06
    Issued Instructions                             inst     97869624
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                   256
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                   1024
    Registers Per Thread             register/thread              30
    Shared Memory Configuration Size           Kbyte           32.77
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block       Kbyte/block            1.02
    # SMs                                         SM             108
    Threads                                   thread          262144
    Uses Green Context                                             0
    Waves Per SM                                                1.19
    -------------------------------- --------------- ---------------

    OPT   Est. Speedup: 50%                                                                                             
          A wave of thread blocks is defined as the maximum number of blocks that can be executed in parallel on the    
          target GPU. The number of blocks in a wave depends on the number of multiprocessors and the theoretical       
          occupancy of the kernel. This kernel launch results in 1 full waves and a partial wave of 159 thread blocks.  
          Under the assumption of a uniform execution duration of all thread blocks, the partial wave may account for   
          up to 50.0% of the total kernel runtime with a lower occupancy of 25.1%. Try launching a grid with no         
          partial wave. The overall impact of this tail effect also lessens with the number of full waves executed for  
          a grid. See the Hardware Model                                                                                
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      
          details on launch configurations.                                                                             

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           32
    Block Limit Registers                 block            8
    Block Limit Shared Mem                block           16
    Block Limit Warps                     block            8
    Theoretical Active Warps per SM        warp           64
    Theoretical Occupancy                     %          100
    Achieved Occupancy                        %        74.89
    Achieved Active Warps Per SM           warp        47.93
    ------------------------------- ----------- ------------

    OPT   Est. Local Speedup: 25.11%                                                                                    
          The difference between calculated theoretical (100.0%) and measured achieved occupancy (74.9%) can be the     
          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   
          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle      6966.70
    Total DRAM Elapsed Cycles        cycle     20899584
    Average L1 Active Cycles         cycle    319136.60
    Total L1 Elapsed Cycles          cycle     39708842
    Average L2 Active Cycles         cycle    318926.53
    Total L2 Elapsed Cycles          cycle     28173440
    Average SM Active Cycles         cycle    319136.60
    Total SM Elapsed Cycles          cycle     39708842
    Average SMSP Active Cycles       cycle    319566.77
    Total SMSP Elapsed Cycles        cycle    158835368
    -------------------------- ----------- ------------

    OPT   Est. Speedup: 10.91%                                                                                          
          One or more SMs have a much lower number of active cycles than the average number of active cycles. Maximum   
          instance value is 12.57% above the average, while the minimum instance value is 15.60% below the average.     
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 10.78%                                                                                          
          One or more SMSPs have a much lower number of active cycles than the average number of active cycles. Maximum 
          instance value is 12.40% above the average, while the minimum instance value is 15.88% below the average.     
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 10.91%                                                                                          
          One or more L1 Slices have a much lower number of active cycles than the average number of active cycles.     
          Maximum instance value is 12.57% above the average, while the minimum instance value is 15.60% below the      
          average.                                                                                                      

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.03
    Branch Instructions              inst      3162112
    Branch Efficiency                   %          100
    Avg. Divergent Branches                          0
    ------------------------- ----------- ------------

  hgemm_tensor_core(const __half *, const __half *, float *, int, int) (8, 128, 1)x(32, 1, 1), Context 1, Stream 15, Device 0, CC 8.0
    Section: GPU Speed Of Light Throughput
    ----------------------- ----------- ------------
    Metric Name             Metric Unit Metric Value
    ----------------------- ----------- ------------
    DRAM Frequency                  Ghz         1.51
    SM Frequency                    Ghz         1.06
    Elapsed Cycles                cycle       505973
    Memory Throughput                 %        89.07
    DRAM Throughput                   %         0.97
    Duration                         us       475.10
    L1/TEX Cache Throughput           %        93.45
    L2 Cache Throughput               %         6.48
    SM Active Cycles              cycle    482260.10
    Compute (SM) Throughput           %        15.84
    ----------------------- ----------- ------------

    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing L1 in the Memory Workload Analysis section.                                                

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved 0% of  
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         4.19
    Dropped Samples                sample            0
    Maximum Sampling Interval       cycle        20000
    # Pass Groups                                    4
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         0.38
    Executed Ipc Elapsed  inst/cycle         0.36
    Issue Slots Busy               %         9.56
    Issued Ipc Active     inst/cycle         0.38
    SM Busy                        %         9.56
    -------------------- ----------- ------------

    OPT   Est. Local Speedup: 94.98%                                                                                    
          All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps   
          per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.             

    Section: Memory Workload Analysis
    --------------------------- ----------- ------------
    Metric Name                 Metric Unit Metric Value
    --------------------------- ----------- ------------
    Memory Throughput               Gbyte/s        18.77
    Mem Busy                              %        89.07
    Max Bandwidth                         %        15.84
    L1/TEX Hit Rate                       %        93.41
    L2 Compression Success Rate           %            0
    L2 Compression Ratio                               0
    L2 Hit Rate                           %        95.03
    Mem Pipes Busy                        %        15.84
    --------------------------- ----------- ------------

    Section: Memory Workload Analysis Tables
    OPT   Est. Speedup: 78.59%                                                                                          
          The memory access pattern for global loads from L1TEX might not be optimal. On average, only 3.8 of the 32    
          bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between   
          threads. Check the Source Counters section for uncoalesced global loads.                                      
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 46.72%                                                                                          
          The memory access pattern for shared loads might not be optimal and causes on average a 8.0 - way bank        
          conflict across all 262144 shared load requests.This results in 1048576 bank conflicts,  which represent      
          50.00% of the overall 2097257 wavefronts for shared loads. Check the Source Counters section for uncoalesced  
          shared loads.                                                                                                 
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 56.07%                                                                                          
          The memory access pattern for shared stores might not be optimal and causes on average a 2.5 - way bank       
          conflict across all 4194304 shared store requests.This results in 6291456 bank conflicts,  which represent    
          60.00% of the overall 10485760 wavefronts for shared stores. Check the Source Counters section for            
          uncoalesced shared stores.                                                                                    

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %         9.78
    Issued Warp Per Scheduler                        0.10
    No Eligible                            %        90.22
    Active Warps Per Scheduler          warp         2.36
    Eligible Warps Per Scheduler        warp         0.10
    ---------------------------- ----------- ------------

    OPT   Est. Local Speedup: 10.93%                                                                                    
          Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 10.2 cycles. This might leave hardware resources underutilized and may lead to    
          less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of   
          2.36 active warps per scheduler, but only an average of 0.10 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, reduce the time the active warps are stalled by inspecting the top stall reasons on the Warp  
          State Statistics and Source Counters sections.                                                                

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        24.14
    Warp Cycles Per Executed Instruction           cycle        24.15
    Avg. Active Threads Per Warp                                17.84
    Avg. Not Predicated Off Threads Per Warp                    17.73
    ---------------------------------------- ----------- ------------

    OPT   Est. Speedup: 10.93%                                                                                          
          On average, each warp of this kernel spends 16.8 cycles being stalled waiting for a scoreboard dependency on  
          a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited     
          upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the        
          memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by        
          increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently     
          used data to shared memory. This stall type represents about 69.5% of the total average of 24.1 cycles        
          between issuing two instructions.                                                                             
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on         
          sampling data. The Kernel Profiling Guide                                                                     
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details    
          on each stall reason.                                                                                         
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 7.066%                                                                                          
          Instructions are executed in warps, which are groups of 32 threads. Optimal instruction throughput is         
          achieved if all 32 threads of a warp execute the same instruction. The chosen launch configuration, early     
          thread completion, and divergent flow control can significantly lower the number of active threads in a warp  
          per cycle. This kernel achieves an average of 17.8 threads being active per cycle. This is further reduced    
          to 17.7 threads per warp due to predication. The compiler may use predication to avoid an actual branch.      
          Instead, all instructions are scheduled, but a per-thread condition code or predicate controls which threads  
          execute the instructions. Try to avoid different execution paths within a warp when possible.                 

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst     46108.44
    Executed Instructions                           inst     19918848
    Avg. Issued Instructions Per Scheduler          inst     46121.62
    Issued Instructions                             inst     19924539
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                    32
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                   1024
    Registers Per Thread             register/thread              32
    Shared Memory Configuration Size           Kbyte          102.40
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block       Kbyte/block            2.05
    # SMs                                         SM             108
    Threads                                   thread           32768
    Uses Green Context                                             0
    Waves Per SM                                                0.30
    -------------------------------- --------------- ---------------

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           32
    Block Limit Registers                 block           64
    Block Limit Shared Mem                block           33
    Block Limit Warps                     block           64
    Theoretical Active Warps per SM        warp           32
    Theoretical Occupancy                     %           50
    Achieved Occupancy                        %        14.43
    Achieved Active Warps Per SM           warp         9.24
    ------------------------------- ----------- ------------

    OPT   Est. Speedup: 10.93%                                                                                          
          The difference between calculated theoretical (50.0%) and measured achieved occupancy (14.4%) can be the      
          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   
          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 10.93%                                                                                          
          The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 16. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that   
          can fit on the SM.                                                                                            

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle      6968.70
    Total DRAM Elapsed Cycles        cycle     28733312
    Average L1 Active Cycles         cycle    482260.10
    Total L1 Elapsed Cycles          cycle     54644554
    Average L2 Active Cycles         cycle    434651.60
    Total L2 Elapsed Cycles          cycle     38767680
    Average SM Active Cycles         cycle    482260.10
    Total SM Elapsed Cycles          cycle     54644554
    Average SMSP Active Cycles       cycle    471648.84
    Total SMSP Elapsed Cycles        cycle    218578216
    -------------------------- ----------- ------------

    OPT   Est. Speedup: 5.828%                                                                                          
          One or more SMSPs have a much higher number of active cycles than the average number of active cycles.        
          Maximum instance value is 6.25% above the average, while the minimum instance value is 4.19% below the        
          average.                                                                                                      

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.03
    Branch Instructions              inst       528384
    Branch Efficiency                   %        50.19
    Avg. Divergent Branches                     303.41
    ------------------------- ----------- ------------

    OPT   Est. Speedup: 79.07%                                                                                          
          This kernel has uncoalesced global accesses resulting in a total of 31457280 excessive sectors (88% of the    
          total 35684352 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source       
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional      
          information on reducing uncoalesced device memory accesses.                                                   
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 55.6%                                                                                           
          This kernel has uncoalesced shared accesses resulting in a total of 7340032 excessive wavefronts (58% of the  
          total 12582912 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.  
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -ab) has an example on optimizing shared memory accesses.                                                     

  hgemm_normal(const __half *, const __half *, float *, int, int, unsigned long, unsigned long, unsigned long) (128, 8, 1)x(16, 16, 1), Context 1, Stream 16, Device 0, CC 8.0
    Section: GPU Speed Of Light Throughput
    ----------------------- ----------- ------------
    Metric Name             Metric Unit Metric Value
    ----------------------- ----------- ------------
    DRAM Frequency                  Ghz         1.51
    SM Frequency                    Ghz         1.06
    Elapsed Cycles                cycle       367564
    Memory Throughput                 %        70.89
    DRAM Throughput                   %         1.33
    Duration                         us       345.34
    L1/TEX Cache Throughput           %        81.55
    L2 Cache Throughput               %        12.73
    SM Active Cycles              cycle    319314.55
    Compute (SM) Throughput           %        63.49
    ----------------------- ----------- ------------

    INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. 
          Check both the Compute Workload Analysis and Memory Workload Analysis sections.                               

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved 21% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         3.93
    Dropped Samples                sample            0
    Maximum Sampling Interval       cycle        40000
    # Pass Groups                                    4
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         2.84
    Executed Ipc Elapsed  inst/cycle         2.47
    Issue Slots Busy               %        70.95
    Issued Ipc Active     inst/cycle         2.84
    SM Busy                        %        70.95
    -------------------- ----------- ------------

    INF   FMA is the highest-utilized pipeline (27.5%) based on active cycles, taking into account the rates of its     
          different instructions. It executes 32-bit floating point (FADD, FMUL, FMAD, ...) and integer (IMUL, IMAD)    
          operations. It is well-utilized, but should not be a bottleneck.                                              

    Section: Memory Workload Analysis
    --------------------------- ----------- ------------
    Metric Name                 Metric Unit Metric Value
    --------------------------- ----------- ------------
    Memory Throughput               Gbyte/s        25.82
    Mem Busy                              %        70.89
    Max Bandwidth                         %        63.49
    L1/TEX Hit Rate                       %        19.12
    L2 Compression Success Rate           %            0
    L2 Compression Ratio                               0
    L2 Hit Rate                           %        90.72
    Mem Pipes Busy                        %        63.49
    --------------------------- ----------- ------------

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %        70.98
    Issued Warp Per Scheduler                        0.71
    No Eligible                            %        29.02
    Active Warps Per Scheduler          warp        11.98
    Eligible Warps Per Scheduler        warp         3.67
    ---------------------------- ----------- ------------

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        16.88
    Warp Cycles Per Executed Instruction           cycle        16.89
    Avg. Active Threads Per Warp                                   32
    Avg. Not Predicated Off Threads Per Warp                    31.65
    ---------------------------------------- ----------- ------------

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst    226417.78
    Executed Instructions                           inst     97812480
    Avg. Issued Instructions Per Scheduler          inst    226551.93
    Issued Instructions                             inst     97870432
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                   256
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                   1024
    Registers Per Thread             register/thread              30
    Shared Memory Configuration Size           Kbyte           32.77
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block       Kbyte/block            1.02
    # SMs                                         SM             108
    Threads                                   thread          262144
    Uses Green Context                                             0
    Waves Per SM                                                1.19
    -------------------------------- --------------- ---------------

    OPT   Est. Speedup: 50%                                                                                             
          A wave of thread blocks is defined as the maximum number of blocks that can be executed in parallel on the    
          target GPU. The number of blocks in a wave depends on the number of multiprocessors and the theoretical       
          occupancy of the kernel. This kernel launch results in 1 full waves and a partial wave of 159 thread blocks.  
          Under the assumption of a uniform execution duration of all thread blocks, the partial wave may account for   
          up to 50.0% of the total kernel runtime with a lower occupancy of 25.2%. Try launching a grid with no         
          partial wave. The overall impact of this tail effect also lessens with the number of full waves executed for  
          a grid. See the Hardware Model                                                                                
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      
          details on launch configurations.                                                                             

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           32
    Block Limit Registers                 block            8
    Block Limit Shared Mem                block           16
    Block Limit Warps                     block            8
    Theoretical Active Warps per SM        warp           64
    Theoretical Occupancy                     %          100
    Achieved Occupancy                        %        74.85
    Achieved Active Warps Per SM           warp        47.90
    ------------------------------- ----------- ------------

    OPT   Est. Local Speedup: 25.15%                                                                                    
          The difference between calculated theoretical (100.0%) and measured achieved occupancy (74.8%) can be the     
          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   
          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle      6966.70
    Total DRAM Elapsed Cycles        cycle     20883456
    Average L1 Active Cycles         cycle    319314.55
    Total L1 Elapsed Cycles          cycle     39675688
    Average L2 Active Cycles         cycle    319639.67
    Total L2 Elapsed Cycles          cycle     28147680
    Average SM Active Cycles         cycle    319314.55
    Total SM Elapsed Cycles          cycle     39675688
    Average SMSP Active Cycles       cycle    319194.93
    Total SMSP Elapsed Cycles        cycle    158702752
    -------------------------- ----------- ------------

    OPT   Est. Speedup: 10.9%                                                                                           
          One or more SMs have a much lower number of active cycles than the average number of active cycles. Maximum   
          instance value is 12.54% above the average, while the minimum instance value is 16.13% below the average.     
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 10.87%                                                                                          
          One or more SMSPs have a much lower number of active cycles than the average number of active cycles. Maximum 
          instance value is 12.51% above the average, while the minimum instance value is 15.73% below the average.     
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 10.9%                                                                                           
          One or more L1 Slices have a much lower number of active cycles than the average number of active cycles.     
          Maximum instance value is 12.54% above the average, while the minimum instance value is 16.13% below the      
          average.                                                                                                      

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.03
    Branch Instructions              inst      3162112
    Branch Efficiency                   %          100
    Avg. Divergent Branches                          0
    ------------------------- ----------- ------------

  hgemm_tensor_core(const __half *, const __half *, float *, int, int) (8, 128, 1)x(32, 1, 1), Context 1, Stream 17, Device 0, CC 8.0
    Section: GPU Speed Of Light Throughput
    ----------------------- ----------- ------------
    Metric Name             Metric Unit Metric Value
    ----------------------- ----------- ------------
    DRAM Frequency                  Ghz         1.51
    SM Frequency                    Ghz         1.06
    Elapsed Cycles                cycle       505650
    Memory Throughput                 %        89.13
    DRAM Throughput                   %         0.97
    Duration                         us       474.82
    L1/TEX Cache Throughput           %        93.43
    L2 Cache Throughput               %         6.48
    SM Active Cycles              cycle    482362.31
    Compute (SM) Throughput           %        15.85
    ----------------------- ----------- ------------

    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing L1 in the Memory Workload Analysis section.                                                

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved 0% of  
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         4.19
    Dropped Samples                sample            0
    Maximum Sampling Interval       cycle        20000
    # Pass Groups                                    4
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         0.38
    Executed Ipc Elapsed  inst/cycle         0.36
    Issue Slots Busy               %         9.56
    Issued Ipc Active     inst/cycle         0.38
    SM Busy                        %         9.56
    -------------------- ----------- ------------

    OPT   Est. Local Speedup: 94.98%                                                                                    
          All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps   
          per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.             

    Section: Memory Workload Analysis
    --------------------------- ----------- ------------
    Metric Name                 Metric Unit Metric Value
    --------------------------- ----------- ------------
    Memory Throughput               Gbyte/s        18.79
    Mem Busy                              %        89.13
    Max Bandwidth                         %        15.85
    L1/TEX Hit Rate                       %        94.06
    L2 Compression Success Rate           %            0
    L2 Compression Ratio                               0
    L2 Hit Rate                           %        95.36
    Mem Pipes Busy                        %        15.85
    --------------------------- ----------- ------------

    Section: Memory Workload Analysis Tables
    OPT   Est. Speedup: 78.64%                                                                                          
          The memory access pattern for global loads from L1TEX might not be optimal. On average, only 3.8 of the 32    
          bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between   
          threads. Check the Source Counters section for uncoalesced global loads.                                      
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 46.71%                                                                                          
          The memory access pattern for shared loads might not be optimal and causes on average a 8.0 - way bank        
          conflict across all 262144 shared load requests.This results in 1048576 bank conflicts,  which represent      
          50.00% of the overall 2097228 wavefronts for shared loads. Check the Source Counters section for uncoalesced  
          shared loads.                                                                                                 
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 56.06%                                                                                          
          The memory access pattern for shared stores might not be optimal and causes on average a 2.5 - way bank       
          conflict across all 4194304 shared store requests.This results in 6291456 bank conflicts,  which represent    
          60.00% of the overall 10485760 wavefronts for shared stores. Check the Source Counters section for            
          uncoalesced shared stores.                                                                                    

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %         9.77
    Issued Warp Per Scheduler                        0.10
    No Eligible                            %        90.23
    Active Warps Per Scheduler          warp         2.36
    Eligible Warps Per Scheduler        warp         0.10
    ---------------------------- ----------- ------------

    OPT   Est. Local Speedup: 10.87%                                                                                    
          Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 10.2 cycles. This might leave hardware resources underutilized and may lead to    
          less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of   
          2.36 active warps per scheduler, but only an average of 0.10 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, reduce the time the active warps are stalled by inspecting the top stall reasons on the Warp  
          State Statistics and Source Counters sections.                                                                

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        24.17
    Warp Cycles Per Executed Instruction           cycle        24.18
    Avg. Active Threads Per Warp                                17.84
    Avg. Not Predicated Off Threads Per Warp                    17.73
    ---------------------------------------- ----------- ------------

    OPT   Est. Speedup: 10.87%                                                                                          
          On average, each warp of this kernel spends 16.7 cycles being stalled waiting for a scoreboard dependency on  
          a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited     
          upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the        
          memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by        
          increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently     
          used data to shared memory. This stall type represents about 69.1% of the total average of 24.2 cycles        
          between issuing two instructions.                                                                             
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on         
          sampling data. The Kernel Profiling Guide                                                                     
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details    
          on each stall reason.                                                                                         
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 7.071%                                                                                          
          Instructions are executed in warps, which are groups of 32 threads. Optimal instruction throughput is         
          achieved if all 32 threads of a warp execute the same instruction. The chosen launch configuration, early     
          thread completion, and divergent flow control can significantly lower the number of active threads in a warp  
          per cycle. This kernel achieves an average of 17.8 threads being active per cycle. This is further reduced    
          to 17.7 threads per warp due to predication. The compiler may use predication to avoid an actual branch.      
          Instead, all instructions are scheduled, but a per-thread condition code or predicate controls which threads  
          execute the instructions. Try to avoid different execution paths within a warp when possible.                 

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst     46108.44
    Executed Instructions                           inst     19918848
    Avg. Issued Instructions Per Scheduler          inst     46120.86
    Issued Instructions                             inst     19924211
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                    32
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                   1024
    Registers Per Thread             register/thread              32
    Shared Memory Configuration Size           Kbyte          102.40
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block       Kbyte/block            2.05
    # SMs                                         SM             108
    Threads                                   thread           32768
    Uses Green Context                                             0
    Waves Per SM                                                0.30
    -------------------------------- --------------- ---------------

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           32
    Block Limit Registers                 block           64
    Block Limit Shared Mem                block           33
    Block Limit Warps                     block           64
    Theoretical Active Warps per SM        warp           32
    Theoretical Occupancy                     %           50
    Achieved Occupancy                        %        14.44
    Achieved Active Warps Per SM           warp         9.24
    ------------------------------- ----------- ------------

    OPT   Est. Speedup: 10.87%                                                                                          
          The difference between calculated theoretical (50.0%) and measured achieved occupancy (14.4%) can be the      
          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   
          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 10.87%                                                                                          
          The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 16. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that   
          can fit on the SM.                                                                                            

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle      6968.70
    Total DRAM Elapsed Cycles        cycle     28715008
    Average L1 Active Cycles         cycle    482362.31
    Total L1 Elapsed Cycles          cycle     54609428
    Average L2 Active Cycles         cycle    431269.76
    Total L2 Elapsed Cycles          cycle     38742880
    Average SM Active Cycles         cycle    482362.31
    Total SM Elapsed Cycles          cycle     54609428
    Average SMSP Active Cycles       cycle    472127.20
    Total SMSP Elapsed Cycles        cycle    218437712
    -------------------------- ----------- ------------

    OPT   Est. Speedup: 5.821%                                                                                          
          One or more SMSPs have a much higher number of active cycles than the average number of active cycles.        
          Maximum instance value is 6.23% above the average, while the minimum instance value is 4.12% below the        
          average.                                                                                                      

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.03
    Branch Instructions              inst       528384
    Branch Efficiency                   %        50.19
    Avg. Divergent Branches                     303.41
    ------------------------- ----------- ------------

    OPT   Est. Speedup: 78.5%                                                                                           
          This kernel has uncoalesced global accesses resulting in a total of 31457280 excessive sectors (88% of the    
          total 35684352 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source       
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional      
          information on reducing uncoalesced device memory accesses.                                                   
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 55.65%                                                                                          
          This kernel has uncoalesced shared accesses resulting in a total of 7340032 excessive wavefronts (58% of the  
          total 12582912 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.  
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -ab) has an example on optimizing shared memory accesses.                                                     

  hgemm_normal(const __half *, const __half *, float *, int, int, unsigned long, unsigned long, unsigned long) (128, 8, 1)x(16, 16, 1), Context 1, Stream 18, Device 0, CC 8.0
    Section: GPU Speed Of Light Throughput
    ----------------------- ----------- ------------
    Metric Name             Metric Unit Metric Value
    ----------------------- ----------- ------------
    DRAM Frequency                  Ghz         1.51
    SM Frequency                    Ghz         1.06
    Elapsed Cycles                cycle       367364
    Memory Throughput                 %        70.93
    DRAM Throughput                   %         1.34
    Duration                         us       345.12
    L1/TEX Cache Throughput           %        81.51
    L2 Cache Throughput               %        12.70
    SM Active Cycles              cycle    319500.94
    Compute (SM) Throughput           %        63.53
    ----------------------- ----------- ------------

    INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. 
          Check both the Compute Workload Analysis and Memory Workload Analysis sections.                               

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved 21% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         3.93
    Dropped Samples                sample            0
    Maximum Sampling Interval       cycle        40000
    # Pass Groups                                    4
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         2.83
    Executed Ipc Elapsed  inst/cycle         2.47
    Issue Slots Busy               %        70.91
    Issued Ipc Active     inst/cycle         2.84
    SM Busy                        %        70.91
    -------------------- ----------- ------------

    INF   FMA is the highest-utilized pipeline (27.5%) based on active cycles, taking into account the rates of its     
          different instructions. It executes 32-bit floating point (FADD, FMUL, FMAD, ...) and integer (IMUL, IMAD)    
          operations. It is well-utilized, but should not be a bottleneck.                                              

    Section: Memory Workload Analysis
    --------------------------- ----------- ------------
    Metric Name                 Metric Unit Metric Value
    --------------------------- ----------- ------------
    Memory Throughput               Gbyte/s        25.84
    Mem Busy                              %        70.93
    Max Bandwidth                         %        63.53
    L1/TEX Hit Rate                       %        18.60
    L2 Compression Success Rate           %            0
    L2 Compression Ratio                               0
    L2 Hit Rate                           %        91.37
    Mem Pipes Busy                        %        63.53
    --------------------------- ----------- ------------

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %        70.82
    Issued Warp Per Scheduler                        0.71
    No Eligible                            %        29.18
    Active Warps Per Scheduler          warp        11.96
    Eligible Warps Per Scheduler        warp         3.66
    ---------------------------- ----------- ------------

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        16.89
    Warp Cycles Per Executed Instruction           cycle        16.90
    Avg. Active Threads Per Warp                                   32
    Avg. Not Predicated Off Threads Per Warp                    31.65
    ---------------------------------------- ----------- ------------

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst    226417.78
    Executed Instructions                           inst     97812480
    Avg. Issued Instructions Per Scheduler          inst    226550.01
    Issued Instructions                             inst     97869604
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                   256
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                   1024
    Registers Per Thread             register/thread              30
    Shared Memory Configuration Size           Kbyte           32.77
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block       Kbyte/block            1.02
    # SMs                                         SM             108
    Threads                                   thread          262144
    Uses Green Context                                             0
    Waves Per SM                                                1.19
    -------------------------------- --------------- ---------------

    OPT   Est. Speedup: 50%                                                                                             
          A wave of thread blocks is defined as the maximum number of blocks that can be executed in parallel on the    
          target GPU. The number of blocks in a wave depends on the number of multiprocessors and the theoretical       
          occupancy of the kernel. This kernel launch results in 1 full waves and a partial wave of 159 thread blocks.  
          Under the assumption of a uniform execution duration of all thread blocks, the partial wave may account for   
          up to 50.0% of the total kernel runtime with a lower occupancy of 25.1%. Try launching a grid with no         
          partial wave. The overall impact of this tail effect also lessens with the number of full waves executed for  
          a grid. See the Hardware Model                                                                                
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      
          details on launch configurations.                                                                             

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           32
    Block Limit Registers                 block            8
    Block Limit Shared Mem                block           16
    Block Limit Warps                     block            8
    Theoretical Active Warps per SM        warp           64
    Theoretical Occupancy                     %          100
    Achieved Occupancy                        %        74.88
    Achieved Active Warps Per SM           warp        47.92
    ------------------------------- ----------- ------------

    OPT   Est. Local Speedup: 25.12%                                                                                    
          The difference between calculated theoretical (100.0%) and measured achieved occupancy (74.9%) can be the     
          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   
          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle      6966.70
    Total DRAM Elapsed Cycles        cycle     20870784
    Average L1 Active Cycles         cycle    319500.94
    Total L1 Elapsed Cycles          cycle     39649358
    Average L2 Active Cycles         cycle    321385.17
    Total L2 Elapsed Cycles          cycle     28131840
    Average SM Active Cycles         cycle    319500.94
    Total SM Elapsed Cycles          cycle     39649358
    Average SMSP Active Cycles       cycle    319890.02
    Total SMSP Elapsed Cycles        cycle    158597432
    -------------------------- ----------- ------------

    OPT   Est. Speedup: 10.78%                                                                                          
          One or more SMs have a much lower number of active cycles than the average number of active cycles. Maximum   
          instance value is 12.39% above the average, while the minimum instance value is 16.11% below the average.     
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 10.83%                                                                                          
          One or more SMSPs have a much lower number of active cycles than the average number of active cycles. Maximum 
          instance value is 12.43% above the average, while the minimum instance value is 15.78% below the average.     
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 10.78%                                                                                          
          One or more L1 Slices have a much lower number of active cycles than the average number of active cycles.     
          Maximum instance value is 12.39% above the average, while the minimum instance value is 16.11% below the      
          average.                                                                                                      

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.03
    Branch Instructions              inst      3162112
    Branch Efficiency                   %          100
    Avg. Divergent Branches                          0
    ------------------------- ----------- ------------

  hgemm_tensor_core(const __half *, const __half *, float *, int, int) (8, 128, 1)x(32, 1, 1), Context 1, Stream 19, Device 0, CC 8.0
    Section: GPU Speed Of Light Throughput
    ----------------------- ----------- ------------
    Metric Name             Metric Unit Metric Value
    ----------------------- ----------- ------------
    DRAM Frequency                  Ghz         1.51
    SM Frequency                    Ghz         1.06
    Elapsed Cycles                cycle       506365
    Memory Throughput                 %        89.00
    DRAM Throughput                   %         0.97
    Duration                         us       475.49
    L1/TEX Cache Throughput           %        93.40
    L2 Cache Throughput               %         6.65
    SM Active Cycles              cycle    482501.76
    Compute (SM) Throughput           %        15.83
    ----------------------- ----------- ------------

    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing L1 in the Memory Workload Analysis section.                                                

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved 0% of  
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         4.19
    Dropped Samples                sample            0
    Maximum Sampling Interval       cycle        20000
    # Pass Groups                                    4
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         0.38
    Executed Ipc Elapsed  inst/cycle         0.36
    Issue Slots Busy               %         9.56
    Issued Ipc Active     inst/cycle         0.38
    SM Busy                        %         9.56
    -------------------- ----------- ------------

    OPT   Est. Local Speedup: 94.98%                                                                                    
          All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps   
          per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.             

    Section: Memory Workload Analysis
    --------------------------- ----------- ------------
    Metric Name                 Metric Unit Metric Value
    --------------------------- ----------- ------------
    Memory Throughput               Gbyte/s        18.76
    Mem Busy                              %        89.00
    Max Bandwidth                         %        15.83
    L1/TEX Hit Rate                       %        93.61
    L2 Compression Success Rate           %            0
    L2 Compression Ratio                               0
    L2 Hit Rate                           %        86.59
    Mem Pipes Busy                        %        15.83
    --------------------------- ----------- ------------

    Section: Memory Workload Analysis Tables
    OPT   Est. Speedup: 78.53%                                                                                          
          The memory access pattern for global loads from L1TEX might not be optimal. On average, only 3.8 of the 32    
          bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between   
          threads. Check the Source Counters section for uncoalesced global loads.                                      
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 46.7%                                                                                           
          The memory access pattern for shared loads might not be optimal and causes on average a 8.0 - way bank        
          conflict across all 262144 shared load requests.This results in 1048576 bank conflicts,  which represent      
          50.00% of the overall 2097254 wavefronts for shared loads. Check the Source Counters section for uncoalesced  
          shared loads.                                                                                                 
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 56.04%                                                                                          
          The memory access pattern for shared stores might not be optimal and causes on average a 2.5 - way bank       
          conflict across all 4194304 shared store requests.This results in 6291456 bank conflicts,  which represent    
          60.00% of the overall 10485760 wavefronts for shared stores. Check the Source Counters section for            
          uncoalesced shared stores.                                                                                    

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %         9.79
    Issued Warp Per Scheduler                        0.10
    No Eligible                            %        90.21
    Active Warps Per Scheduler          warp         2.36
    Eligible Warps Per Scheduler        warp         0.10
    ---------------------------- ----------- ------------

    OPT   Est. Local Speedup: 11%                                                                                       
          Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 10.2 cycles. This might leave hardware resources underutilized and may lead to    
          less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of   
          2.36 active warps per scheduler, but only an average of 0.10 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, reduce the time the active warps are stalled by inspecting the top stall reasons on the Warp  
          State Statistics and Source Counters sections.                                                                

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        24.10
    Warp Cycles Per Executed Instruction           cycle        24.11
    Avg. Active Threads Per Warp                                17.84
    Avg. Not Predicated Off Threads Per Warp                    17.73
    ---------------------------------------- ----------- ------------

    OPT   Est. Speedup: 11%                                                                                             
          On average, each warp of this kernel spends 16.8 cycles being stalled waiting for a scoreboard dependency on  
          a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited     
          upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the        
          memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by        
          increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently     
          used data to shared memory. This stall type represents about 69.8% of the total average of 24.1 cycles        
          between issuing two instructions.                                                                             
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on         
          sampling data. The Kernel Profiling Guide                                                                     
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details    
          on each stall reason.                                                                                         
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 7.061%                                                                                          
          Instructions are executed in warps, which are groups of 32 threads. Optimal instruction throughput is         
          achieved if all 32 threads of a warp execute the same instruction. The chosen launch configuration, early     
          thread completion, and divergent flow control can significantly lower the number of active threads in a warp  
          per cycle. This kernel achieves an average of 17.8 threads being active per cycle. This is further reduced    
          to 17.7 threads per warp due to predication. The compiler may use predication to avoid an actual branch.      
          Instead, all instructions are scheduled, but a per-thread condition code or predicate controls which threads  
          execute the instructions. Try to avoid different execution paths within a warp when possible.                 

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst     46108.44
    Executed Instructions                           inst     19918848
    Avg. Issued Instructions Per Scheduler          inst     46120.81
    Issued Instructions                             inst     19924190
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                    32
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                   1024
    Registers Per Thread             register/thread              32
    Shared Memory Configuration Size           Kbyte          102.40
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block       Kbyte/block            2.05
    # SMs                                         SM             108
    Threads                                   thread           32768
    Uses Green Context                                             0
    Waves Per SM                                                0.30
    -------------------------------- --------------- ---------------

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           32
    Block Limit Registers                 block           64
    Block Limit Shared Mem                block           33
    Block Limit Warps                     block           64
    Theoretical Active Warps per SM        warp           32
    Theoretical Occupancy                     %           50
    Achieved Occupancy                        %        14.40
    Achieved Active Warps Per SM           warp         9.22
    ------------------------------- ----------- ------------

    OPT   Est. Speedup: 11%                                                                                             
          The difference between calculated theoretical (50.0%) and measured achieved occupancy (14.4%) can be the      
          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   
          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 11%                                                                                             
          The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 16. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that   
          can fit on the SM.                                                                                            

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle      6970.30
    Total DRAM Elapsed Cycles        cycle     28753920
    Average L1 Active Cycles         cycle    482501.76
    Total L1 Elapsed Cycles          cycle     54686830
    Average L2 Active Cycles         cycle    430709.06
    Total L2 Elapsed Cycles          cycle     38797760
    Average SM Active Cycles         cycle    482501.76
    Total SM Elapsed Cycles          cycle     54686830
    Average SMSP Active Cycles       cycle    470976.72
    Total SMSP Elapsed Cycles        cycle    218747320
    -------------------------- ----------- ------------

    OPT   Est. Speedup: 6.166%                                                                                          
          One or more SMSPs have a much higher number of active cycles than the average number of active cycles.        
          Maximum instance value is 6.63% above the average, while the minimum instance value is 4.27% below the        
          average.                                                                                                      

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.03
    Branch Instructions              inst       528384
    Branch Efficiency                   %        50.19
    Avg. Divergent Branches                     303.41
    ------------------------- ----------- ------------

    OPT   Est. Speedup: 78.29%                                                                                          
          This kernel has uncoalesced global accesses resulting in a total of 31457280 excessive sectors (88% of the    
          total 35684352 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source       
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional      
          information on reducing uncoalesced device memory accesses.                                                   
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 55.58%                                                                                          
          This kernel has uncoalesced shared accesses resulting in a total of 7340032 excessive wavefronts (58% of the  
          total 12582912 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.  
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -ab) has an example on optimizing shared memory accesses.                                                     

  hgemm_normal(const __half *, const __half *, float *, int, int, unsigned long, unsigned long, unsigned long) (128, 8, 1)x(16, 16, 1), Context 1, Stream 20, Device 0, CC 8.0
    Section: GPU Speed Of Light Throughput
    ----------------------- ----------- ------------
    Metric Name             Metric Unit Metric Value
    ----------------------- ----------- ------------
    DRAM Frequency                  Ghz         1.51
    SM Frequency                    Ghz         1.06
    Elapsed Cycles                cycle       367673
    Memory Throughput                 %        70.87
    DRAM Throughput                   %         1.33
    Duration                         us       345.44
    L1/TEX Cache Throughput           %        81.56
    L2 Cache Throughput               %        12.72
    SM Active Cycles              cycle    319287.81
    Compute (SM) Throughput           %        63.47
    ----------------------- ----------- ------------

    INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. 
          Check both the Compute Workload Analysis and Memory Workload Analysis sections.                               

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved 21% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         3.93
    Dropped Samples                sample            0
    Maximum Sampling Interval       cycle        40000
    # Pass Groups                                    4
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         2.84
    Executed Ipc Elapsed  inst/cycle         2.46
    Issue Slots Busy               %        70.96
    Issued Ipc Active     inst/cycle         2.84
    SM Busy                        %        70.96
    -------------------- ----------- ------------

    INF   FMA is the highest-utilized pipeline (27.5%) based on active cycles, taking into account the rates of its     
          different instructions. It executes 32-bit floating point (FADD, FMUL, FMAD, ...) and integer (IMUL, IMAD)    
          operations. It is well-utilized, but should not be a bottleneck.                                              

    Section: Memory Workload Analysis
    --------------------------- ----------- ------------
    Metric Name                 Metric Unit Metric Value
    --------------------------- ----------- ------------
    Memory Throughput               Gbyte/s        25.81
    Mem Busy                              %        70.87
    Max Bandwidth                         %        63.47
    L1/TEX Hit Rate                       %        19.22
    L2 Compression Success Rate           %            0
    L2 Compression Ratio                               0
    L2 Hit Rate                           %        91.70
    Mem Pipes Busy                        %        63.47
    --------------------------- ----------- ------------

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %        71.10
    Issued Warp Per Scheduler                        0.71
    No Eligible                            %        28.90
    Active Warps Per Scheduler          warp        12.01
    Eligible Warps Per Scheduler        warp         3.67
    ---------------------------- ----------- ------------

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        16.89
    Warp Cycles Per Executed Instruction           cycle        16.90
    Avg. Active Threads Per Warp                                   32
    Avg. Not Predicated Off Threads Per Warp                    31.65
    ---------------------------------------- ----------- ------------

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst    226417.78
    Executed Instructions                           inst     97812480
    Avg. Issued Instructions Per Scheduler          inst    226550.98
    Issued Instructions                             inst     97870022
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                   256
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                   1024
    Registers Per Thread             register/thread              30
    Shared Memory Configuration Size           Kbyte           32.77
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block       Kbyte/block            1.02
    # SMs                                         SM             108
    Threads                                   thread          262144
    Uses Green Context                                             0
    Waves Per SM                                                1.19
    -------------------------------- --------------- ---------------

    OPT   Est. Speedup: 50%                                                                                             
          A wave of thread blocks is defined as the maximum number of blocks that can be executed in parallel on the    
          target GPU. The number of blocks in a wave depends on the number of multiprocessors and the theoretical       
          occupancy of the kernel. This kernel launch results in 1 full waves and a partial wave of 159 thread blocks.  
          Under the assumption of a uniform execution duration of all thread blocks, the partial wave may account for   
          up to 50.0% of the total kernel runtime with a lower occupancy of 25.1%. Try launching a grid with no         
          partial wave. The overall impact of this tail effect also lessens with the number of full waves executed for  
          a grid. See the Hardware Model                                                                                
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      
          details on launch configurations.                                                                             

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           32
    Block Limit Registers                 block            8
    Block Limit Shared Mem                block           16
    Block Limit Warps                     block            8
    Theoretical Active Warps per SM        warp           64
    Theoretical Occupancy                     %          100
    Achieved Occupancy                        %        74.89
    Achieved Active Warps Per SM           warp        47.93
    ------------------------------- ----------- ------------

    OPT   Est. Local Speedup: 25.11%                                                                                    
          The difference between calculated theoretical (100.0%) and measured achieved occupancy (74.9%) can be the     
          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   
          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle      6966.70
    Total DRAM Elapsed Cycles        cycle     20889088
    Average L1 Active Cycles         cycle    319287.81
    Total L1 Elapsed Cycles          cycle     39686782
    Average L2 Active Cycles         cycle    320040.39
    Total L2 Elapsed Cycles          cycle     28156960
    Average SM Active Cycles         cycle    319287.81
    Total SM Elapsed Cycles          cycle     39686782
    Average SMSP Active Cycles       cycle    318636.24
    Total SMSP Elapsed Cycles        cycle    158747128
    -------------------------- ----------- ------------

    OPT   Est. Speedup: 10.88%                                                                                          
          One or more SMs have a much lower number of active cycles than the average number of active cycles. Maximum   
          instance value is 12.52% above the average, while the minimum instance value is 15.89% below the average.     
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 10.93%                                                                                          
          One or more SMSPs have a much lower number of active cycles than the average number of active cycles. Maximum 
          instance value is 12.61% above the average, while the minimum instance value is 15.87% below the average.     
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 10.88%                                                                                          
          One or more L1 Slices have a much lower number of active cycles than the average number of active cycles.     
          Maximum instance value is 12.52% above the average, while the minimum instance value is 15.89% below the      
          average.                                                                                                      

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.03
    Branch Instructions              inst      3162112
    Branch Efficiency                   %          100
    Avg. Divergent Branches                          0
    ------------------------- ----------- ------------

  hgemm_tensor_core(const __half *, const __half *, float *, int, int) (8, 128, 1)x(32, 1, 1), Context 1, Stream 21, Device 0, CC 8.0
    Section: GPU Speed Of Light Throughput
    ----------------------- ----------- ------------
    Metric Name             Metric Unit Metric Value
    ----------------------- ----------- ------------
    DRAM Frequency                  Ghz         1.51
    SM Frequency                    Ghz         1.06
    Elapsed Cycles                cycle       505804
    Memory Throughput                 %        89.10
    DRAM Throughput                   %         0.97
    Duration                         us       474.98
    L1/TEX Cache Throughput           %        93.52
    L2 Cache Throughput               %         6.55
    SM Active Cycles              cycle    481884.02
    Compute (SM) Throughput           %        15.85
    ----------------------- ----------- ------------

    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing L1 in the Memory Workload Analysis section.                                                

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved 0% of  
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         4.19
    Dropped Samples                sample            0
    Maximum Sampling Interval       cycle        20000
    # Pass Groups                                    4
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         0.38
    Executed Ipc Elapsed  inst/cycle         0.36
    Issue Slots Busy               %         9.57
    Issued Ipc Active     inst/cycle         0.38
    SM Busy                        %         9.57
    -------------------- ----------- ------------

    OPT   Est. Local Speedup: 94.98%                                                                                    
          All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps   
          per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.             

    Section: Memory Workload Analysis
    --------------------------- ----------- ------------
    Metric Name                 Metric Unit Metric Value
    --------------------------- ----------- ------------
    Memory Throughput               Gbyte/s        18.78
    Mem Busy                              %        89.10
    Max Bandwidth                         %        15.85
    L1/TEX Hit Rate                       %        93.15
    L2 Compression Success Rate           %            0
    L2 Compression Ratio                               0
    L2 Hit Rate                           %        84.92
    Mem Pipes Busy                        %        15.85
    --------------------------- ----------- ------------

    Section: Memory Workload Analysis Tables
    OPT   Est. Speedup: 78.62%                                                                                          
          The memory access pattern for global loads from L1TEX might not be optimal. On average, only 3.8 of the 32    
          bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between   
          threads. Check the Source Counters section for uncoalesced global loads.                                      
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 46.76%                                                                                          
          The memory access pattern for shared loads might not be optimal and causes on average a 8.0 - way bank        
          conflict across all 262144 shared load requests.This results in 1048576 bank conflicts,  which represent      
          50.00% of the overall 2097269 wavefronts for shared loads. Check the Source Counters section for uncoalesced  
          shared loads.                                                                                                 
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 56.11%                                                                                          
          The memory access pattern for shared stores might not be optimal and causes on average a 2.5 - way bank       
          conflict across all 4194304 shared store requests.This results in 6291456 bank conflicts,  which represent    
          60.00% of the overall 10485760 wavefronts for shared stores. Check the Source Counters section for            
          uncoalesced shared stores.                                                                                    

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %         9.79
    Issued Warp Per Scheduler                        0.10
    No Eligible                            %        90.21
    Active Warps Per Scheduler          warp         2.36
    Eligible Warps Per Scheduler        warp         0.10
    ---------------------------- ----------- ------------

    OPT   Est. Local Speedup: 10.9%                                                                                     
          Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 10.2 cycles. This might leave hardware resources underutilized and may lead to    
          less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of   
          2.36 active warps per scheduler, but only an average of 0.10 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, reduce the time the active warps are stalled by inspecting the top stall reasons on the Warp  
          State Statistics and Source Counters sections.                                                                

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        24.11
    Warp Cycles Per Executed Instruction           cycle        24.12
    Avg. Active Threads Per Warp                                17.84
    Avg. Not Predicated Off Threads Per Warp                    17.73
    ---------------------------------------- ----------- ------------

    OPT   Est. Speedup: 10.9%                                                                                           
          On average, each warp of this kernel spends 16.8 cycles being stalled waiting for a scoreboard dependency on  
          a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited     
          upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the        
          memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by        
          increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently     
          used data to shared memory. This stall type represents about 69.6% of the total average of 24.1 cycles        
          between issuing two instructions.                                                                             
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on         
          sampling data. The Kernel Profiling Guide                                                                     
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details    
          on each stall reason.                                                                                         
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 7.069%                                                                                          
          Instructions are executed in warps, which are groups of 32 threads. Optimal instruction throughput is         
          achieved if all 32 threads of a warp execute the same instruction. The chosen launch configuration, early     
          thread completion, and divergent flow control can significantly lower the number of active threads in a warp  
          per cycle. This kernel achieves an average of 17.8 threads being active per cycle. This is further reduced    
          to 17.7 threads per warp due to predication. The compiler may use predication to avoid an actual branch.      
          Instead, all instructions are scheduled, but a per-thread condition code or predicate controls which threads  
          execute the instructions. Try to avoid different execution paths within a warp when possible.                 

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst     46108.44
    Executed Instructions                           inst     19918848
    Avg. Issued Instructions Per Scheduler          inst     46120.86
    Issued Instructions                             inst     19924213
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                    32
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                   1024
    Registers Per Thread             register/thread              32
    Shared Memory Configuration Size           Kbyte          102.40
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block       Kbyte/block            2.05
    # SMs                                         SM             108
    Threads                                   thread           32768
    Uses Green Context                                             0
    Waves Per SM                                                0.30
    -------------------------------- --------------- ---------------

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           32
    Block Limit Registers                 block           64
    Block Limit Shared Mem                block           33
    Block Limit Warps                     block           64
    Theoretical Active Warps per SM        warp           32
    Theoretical Occupancy                     %           50
    Achieved Occupancy                        %        14.42
    Achieved Active Warps Per SM           warp         9.23
    ------------------------------- ----------- ------------

    OPT   Est. Speedup: 10.9%                                                                                           
          The difference between calculated theoretical (50.0%) and measured achieved occupancy (14.4%) can be the      
          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   
          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 10.9%                                                                                           
          The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 16. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that   
          can fit on the SM.                                                                                            

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle      6968.80
    Total DRAM Elapsed Cycles        cycle     28723200
    Average L1 Active Cycles         cycle    481884.02
    Total L1 Elapsed Cycles          cycle     54626316
    Average L2 Active Cycles         cycle    431273.99
    Total L2 Elapsed Cycles          cycle     38754640
    Average SM Active Cycles         cycle    481884.02
    Total SM Elapsed Cycles          cycle     54626316
    Average SMSP Active Cycles       cycle    471168.86
    Total SMSP Elapsed Cycles        cycle    218505264
    -------------------------- ----------- ------------

    OPT   Est. Speedup: 5.989%                                                                                          
          One or more SMSPs have a much higher number of active cycles than the average number of active cycles.        
          Maximum instance value is 6.43% above the average, while the minimum instance value is 4.34% below the        
          average.                                                                                                      

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.03
    Branch Instructions              inst       528384
    Branch Efficiency                   %        50.19
    Avg. Divergent Branches                     303.41
    ------------------------- ----------- ------------

    OPT   Est. Speedup: 78.48%                                                                                          
          This kernel has uncoalesced global accesses resulting in a total of 31457280 excessive sectors (88% of the    
          total 35684352 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source       
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional      
          information on reducing uncoalesced device memory accesses.                                                   
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 55.58%                                                                                          
          This kernel has uncoalesced shared accesses resulting in a total of 7340032 excessive wavefronts (58% of the  
          total 12582912 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.  
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -ab) has an example on optimizing shared memory accesses.                                                     

  hgemm_normal(const __half *, const __half *, float *, int, int, unsigned long, unsigned long, unsigned long) (128, 8, 1)x(16, 16, 1), Context 1, Stream 14, Device 0, CC 8.0
    Section: GPU Speed Of Light Throughput
    ----------------------- ----------- ------------
    Metric Name             Metric Unit Metric Value
    ----------------------- ----------- ------------
    DRAM Frequency                  Ghz         1.51
    SM Frequency                    Ghz         1.06
    Elapsed Cycles                cycle       368213
    Memory Throughput                 %        70.77
    DRAM Throughput                   %         1.33
    Duration                         us       345.92
    L1/TEX Cache Throughput           %        81.53
    L2 Cache Throughput               %        12.69
    SM Active Cycles              cycle    319398.94
    Compute (SM) Throughput           %        63.38
    ----------------------- ----------- ------------

    INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. 
          Check both the Compute Workload Analysis and Memory Workload Analysis sections.                               

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved 21% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         3.93
    Dropped Samples                sample            0
    Maximum Sampling Interval       cycle        40000
    # Pass Groups                                    4
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         2.84
    Executed Ipc Elapsed  inst/cycle         2.46
    Issue Slots Busy               %        70.93
    Issued Ipc Active     inst/cycle         2.84
    SM Busy                        %        70.93
    -------------------- ----------- ------------

    INF   FMA is the highest-utilized pipeline (27.5%) based on active cycles, taking into account the rates of its     
          different instructions. It executes 32-bit floating point (FADD, FMUL, FMAD, ...) and integer (IMUL, IMAD)    
          operations. It is well-utilized, but should not be a bottleneck.                                              

    Section: Memory Workload Analysis
    --------------------------- ----------- ------------
    Metric Name                 Metric Unit Metric Value
    --------------------------- ----------- ------------
    Memory Throughput               Gbyte/s        25.79
    Mem Busy                              %        70.77
    Max Bandwidth                         %        63.38
    L1/TEX Hit Rate                       %        19.17
    L2 Compression Success Rate           %            0
    L2 Compression Ratio                               0
    L2 Hit Rate                           %        91.47
    Mem Pipes Busy                        %        63.38
    --------------------------- ----------- ------------

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %        71.00
    Issued Warp Per Scheduler                        0.71
    No Eligible                            %        29.00
    Active Warps Per Scheduler          warp        12.00
    Eligible Warps Per Scheduler        warp         3.67
    ---------------------------- ----------- ------------

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        16.90
    Warp Cycles Per Executed Instruction           cycle        16.91
    Avg. Active Threads Per Warp                                   32
    Avg. Not Predicated Off Threads Per Warp                    31.65
    ---------------------------------------- ----------- ------------

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst    226417.78
    Executed Instructions                           inst     97812480
    Avg. Issued Instructions Per Scheduler          inst    226551.05
    Issued Instructions                             inst     97870052
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                   256
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                   1024
    Registers Per Thread             register/thread              30
    Shared Memory Configuration Size           Kbyte           32.77
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block       Kbyte/block            1.02
    # SMs                                         SM             108
    Threads                                   thread          262144
    Uses Green Context                                             0
    Waves Per SM                                                1.19
    -------------------------------- --------------- ---------------

    OPT   Est. Speedup: 50%                                                                                             
          A wave of thread blocks is defined as the maximum number of blocks that can be executed in parallel on the    
          target GPU. The number of blocks in a wave depends on the number of multiprocessors and the theoretical       
          occupancy of the kernel. This kernel launch results in 1 full waves and a partial wave of 159 thread blocks.  
          Under the assumption of a uniform execution duration of all thread blocks, the partial wave may account for   
          up to 50.0% of the total kernel runtime with a lower occupancy of 25.1%. Try launching a grid with no         
          partial wave. The overall impact of this tail effect also lessens with the number of full waves executed for  
          a grid. See the Hardware Model                                                                                
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      
          details on launch configurations.                                                                             

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           32
    Block Limit Registers                 block            8
    Block Limit Shared Mem                block           16
    Block Limit Warps                     block            8
    Theoretical Active Warps per SM        warp           64
    Theoretical Occupancy                     %          100
    Achieved Occupancy                        %        74.91
    Achieved Active Warps Per SM           warp        47.94
    ------------------------------- ----------- ------------

    OPT   Est. Local Speedup: 25.09%                                                                                    
          The difference between calculated theoretical (100.0%) and measured achieved occupancy (74.9%) can be the     
          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   
          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle      6969.60
    Total DRAM Elapsed Cycles        cycle     20918784
    Average L1 Active Cycles         cycle    319398.94
    Total L1 Elapsed Cycles          cycle     39743538
    Average L2 Active Cycles         cycle    321058.78
    Total L2 Elapsed Cycles          cycle     28197040
    Average SM Active Cycles         cycle    319398.94
    Total SM Elapsed Cycles          cycle     39743538
    Average SMSP Active Cycles       cycle    319103.91
    Total SMSP Elapsed Cycles        cycle    158974152
    -------------------------- ----------- ------------

    OPT   Est. Speedup: 10.92%                                                                                          
          One or more SMs have a much lower number of active cycles than the average number of active cycles. Maximum   
          instance value is 12.58% above the average, while the minimum instance value is 16.03% below the average.     
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 10.84%                                                                                          
          One or more SMSPs have a much lower number of active cycles than the average number of active cycles. Maximum 
          instance value is 12.50% above the average, while the minimum instance value is 15.81% below the average.     
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 10.92%                                                                                          
          One or more L1 Slices have a much lower number of active cycles than the average number of active cycles.     
          Maximum instance value is 12.58% above the average, while the minimum instance value is 16.03% below the      
          average.                                                                                                      

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.03
    Branch Instructions              inst      3162112
    Branch Efficiency                   %          100
    Avg. Divergent Branches                          0
    ------------------------- ----------- ------------

  hgemm_tensor_core(const __half *, const __half *, float *, int, int) (8, 128, 1)x(32, 1, 1), Context 1, Stream 15, Device 0, CC 8.0
    Section: GPU Speed Of Light Throughput
    ----------------------- ----------- ------------
    Metric Name             Metric Unit Metric Value
    ----------------------- ----------- ------------
    DRAM Frequency                  Ghz         1.51
    SM Frequency                    Ghz         1.06
    Elapsed Cycles                cycle       505824
    Memory Throughput                 %        89.10
    DRAM Throughput                   %         0.97
    Duration                         us       475.01
    L1/TEX Cache Throughput           %        93.56
    L2 Cache Throughput               %         6.89
    SM Active Cycles              cycle    481684.18
    Compute (SM) Throughput           %        15.85
    ----------------------- ----------- ------------

    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing L1 in the Memory Workload Analysis section.                                                

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved 0% of  
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         4.19
    Dropped Samples                sample            0
    Maximum Sampling Interval       cycle        20000
    # Pass Groups                                    4
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         0.38
    Executed Ipc Elapsed  inst/cycle         0.36
    Issue Slots Busy               %         9.57
    Issued Ipc Active     inst/cycle         0.38
    SM Busy                        %         9.57
    -------------------- ----------- ------------

    OPT   Est. Local Speedup: 94.97%                                                                                    
          All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps   
          per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.             

    Section: Memory Workload Analysis
    --------------------------- ----------- ------------
    Metric Name                 Metric Unit Metric Value
    --------------------------- ----------- ------------
    Memory Throughput               Gbyte/s        18.78
    Mem Busy                              %        89.10
    Max Bandwidth                         %        15.85
    L1/TEX Hit Rate                       %        94.08
    L2 Compression Success Rate           %            0
    L2 Compression Ratio                               0
    L2 Hit Rate                           %        91.96
    Mem Pipes Busy                        %        15.85
    --------------------------- ----------- ------------

    Section: Memory Workload Analysis Tables
    OPT   Est. Speedup: 78.62%                                                                                          
          The memory access pattern for global loads from L1TEX might not be optimal. On average, only 3.8 of the 32    
          bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between   
          threads. Check the Source Counters section for uncoalesced global loads.                                      
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 46.78%                                                                                          
          The memory access pattern for shared loads might not be optimal and causes on average a 8.0 - way bank        
          conflict across all 262144 shared load requests.This results in 1048576 bank conflicts,  which represent      
          50.00% of the overall 2097241 wavefronts for shared loads. Check the Source Counters section for uncoalesced  
          shared loads.                                                                                                 
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 56.14%                                                                                          
          The memory access pattern for shared stores might not be optimal and causes on average a 2.5 - way bank       
          conflict across all 4194304 shared store requests.This results in 6291456 bank conflicts,  which represent    
          60.00% of the overall 10485760 wavefronts for shared stores. Check the Source Counters section for            
          uncoalesced shared stores.                                                                                    

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %         9.78
    Issued Warp Per Scheduler                        0.10
    No Eligible                            %        90.22
    Active Warps Per Scheduler          warp         2.36
    Eligible Warps Per Scheduler        warp         0.10
    ---------------------------- ----------- ------------

    OPT   Est. Local Speedup: 10.9%                                                                                     
          Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 10.2 cycles. This might leave hardware resources underutilized and may lead to    
          less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of   
          2.36 active warps per scheduler, but only an average of 0.10 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, reduce the time the active warps are stalled by inspecting the top stall reasons on the Warp  
          State Statistics and Source Counters sections.                                                                

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        24.12
    Warp Cycles Per Executed Instruction           cycle        24.12
    Avg. Active Threads Per Warp                                17.84
    Avg. Not Predicated Off Threads Per Warp                    17.73
    ---------------------------------------- ----------- ------------

    OPT   Est. Speedup: 10.9%                                                                                           
          On average, each warp of this kernel spends 16.8 cycles being stalled waiting for a scoreboard dependency on  
          a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited     
          upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the        
          memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by        
          increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently     
          used data to shared memory. This stall type represents about 69.6% of the total average of 24.1 cycles        
          between issuing two instructions.                                                                             
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on         
          sampling data. The Kernel Profiling Guide                                                                     
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details    
          on each stall reason.                                                                                         
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 7.068%                                                                                          
          Instructions are executed in warps, which are groups of 32 threads. Optimal instruction throughput is         
          achieved if all 32 threads of a warp execute the same instruction. The chosen launch configuration, early     
          thread completion, and divergent flow control can significantly lower the number of active threads in a warp  
          per cycle. This kernel achieves an average of 17.8 threads being active per cycle. This is further reduced    
          to 17.7 threads per warp due to predication. The compiler may use predication to avoid an actual branch.      
          Instead, all instructions are scheduled, but a per-thread condition code or predicate controls which threads  
          execute the instructions. Try to avoid different execution paths within a warp when possible.                 

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst     46108.44
    Executed Instructions                           inst     19918848
    Avg. Issued Instructions Per Scheduler          inst     46120.77
    Issued Instructions                             inst     19924173
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                    32
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                   1024
    Registers Per Thread             register/thread              32
    Shared Memory Configuration Size           Kbyte          102.40
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block       Kbyte/block            2.05
    # SMs                                         SM             108
    Threads                                   thread           32768
    Uses Green Context                                             0
    Waves Per SM                                                0.30
    -------------------------------- --------------- ---------------

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           32
    Block Limit Registers                 block           64
    Block Limit Shared Mem                block           33
    Block Limit Warps                     block           64
    Theoretical Active Warps per SM        warp           32
    Theoretical Occupancy                     %           50
    Achieved Occupancy                        %        14.43
    Achieved Active Warps Per SM           warp         9.24
    ------------------------------- ----------- ------------

    OPT   Est. Speedup: 10.9%                                                                                           
          The difference between calculated theoretical (50.0%) and measured achieved occupancy (14.4%) can be the      
          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   
          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 10.9%                                                                                           
          The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 16. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that   
          can fit on the SM.                                                                                            

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle      6968.70
    Total DRAM Elapsed Cycles        cycle     28723200
    Average L1 Active Cycles         cycle    481684.18
    Total L1 Elapsed Cycles          cycle     54628356
    Average L2 Active Cycles         cycle    430089.26
    Total L2 Elapsed Cycles          cycle     38756320
    Average SM Active Cycles         cycle    481684.18
    Total SM Elapsed Cycles          cycle     54628356
    Average SMSP Active Cycles       cycle    471397.31
    Total SMSP Elapsed Cycles        cycle    218513424
    -------------------------- ----------- ------------

    OPT   Est. Speedup: 5.966%                                                                                          
          One or more SMSPs have a much higher number of active cycles than the average number of active cycles.        
          Maximum instance value is 6.40% above the average, while the minimum instance value is 4.28% below the        
          average.                                                                                                      

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.03
    Branch Instructions              inst       528384
    Branch Efficiency                   %        50.19
    Avg. Divergent Branches                     303.41
    ------------------------- ----------- ------------

    OPT   Est. Speedup: 78.26%                                                                                          
          This kernel has uncoalesced global accesses resulting in a total of 31457280 excessive sectors (88% of the    
          total 35684352 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source       
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional      
          information on reducing uncoalesced device memory accesses.                                                   
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 55.55%                                                                                          
          This kernel has uncoalesced shared accesses resulting in a total of 7340032 excessive wavefronts (58% of the  
          total 12582912 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.  
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -ab) has an example on optimizing shared memory accesses.                                                     

  hgemm_normal(const __half *, const __half *, float *, int, int, unsigned long, unsigned long, unsigned long) (128, 8, 1)x(16, 16, 1), Context 1, Stream 16, Device 0, CC 8.0
    Section: GPU Speed Of Light Throughput
    ----------------------- ----------- ------------
    Metric Name             Metric Unit Metric Value
    ----------------------- ----------- ------------
    DRAM Frequency                  Ghz         1.51
    SM Frequency                    Ghz         1.06
    Elapsed Cycles                cycle       367870
    Memory Throughput                 %        70.83
    DRAM Throughput                   %         1.33
    Duration                         us       345.60
    L1/TEX Cache Throughput           %        81.42
    L2 Cache Throughput               %        12.71
    SM Active Cycles              cycle    319856.56
    Compute (SM) Throughput           %        63.44
    ----------------------- ----------- ------------

    INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. 
          Check both the Compute Workload Analysis and Memory Workload Analysis sections.                               

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved 21% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         3.93
    Dropped Samples                sample            0
    Maximum Sampling Interval       cycle        40000
    # Pass Groups                                    4
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         2.83
    Executed Ipc Elapsed  inst/cycle         2.46
    Issue Slots Busy               %        70.83
    Issued Ipc Active     inst/cycle         2.83
    SM Busy                        %        70.83
    -------------------- ----------- ------------

    INF   FMA is the highest-utilized pipeline (27.4%) based on active cycles, taking into account the rates of its     
          different instructions. It executes 32-bit floating point (FADD, FMUL, FMAD, ...) and integer (IMUL, IMAD)    
          operations. It is well-utilized, but should not be a bottleneck.                                              

    Section: Memory Workload Analysis
    --------------------------- ----------- ------------
    Metric Name                 Metric Unit Metric Value
    --------------------------- ----------- ------------
    Memory Throughput               Gbyte/s        25.80
    Mem Busy                              %        70.83
    Max Bandwidth                         %        63.44
    L1/TEX Hit Rate                       %        19.22
    L2 Compression Success Rate           %            0
    L2 Compression Ratio                               0
    L2 Hit Rate                           %        91.53
    Mem Pipes Busy                        %        63.44
    --------------------------- ----------- ------------

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %        71.11
    Issued Warp Per Scheduler                        0.71
    No Eligible                            %        28.89
    Active Warps Per Scheduler          warp        12.00
    Eligible Warps Per Scheduler        warp         3.67
    ---------------------------- ----------- ------------

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        16.88
    Warp Cycles Per Executed Instruction           cycle        16.89
    Avg. Active Threads Per Warp                                   32
    Avg. Not Predicated Off Threads Per Warp                    31.65
    ---------------------------------------- ----------- ------------

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst    226417.78
    Executed Instructions                           inst     97812480
    Avg. Issued Instructions Per Scheduler          inst    226552.20
    Issued Instructions                             inst     97870550
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                   256
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                   1024
    Registers Per Thread             register/thread              30
    Shared Memory Configuration Size           Kbyte           32.77
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block       Kbyte/block            1.02
    # SMs                                         SM             108
    Threads                                   thread          262144
    Uses Green Context                                             0
    Waves Per SM                                                1.19
    -------------------------------- --------------- ---------------

    OPT   Est. Speedup: 50%                                                                                             
          A wave of thread blocks is defined as the maximum number of blocks that can be executed in parallel on the    
          target GPU. The number of blocks in a wave depends on the number of multiprocessors and the theoretical       
          occupancy of the kernel. This kernel launch results in 1 full waves and a partial wave of 159 thread blocks.  
          Under the assumption of a uniform execution duration of all thread blocks, the partial wave may account for   
          up to 50.0% of the total kernel runtime with a lower occupancy of 25.3%. Try launching a grid with no         
          partial wave. The overall impact of this tail effect also lessens with the number of full waves executed for  
          a grid. See the Hardware Model                                                                                
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      
          details on launch configurations.                                                                             

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           32
    Block Limit Registers                 block            8
    Block Limit Shared Mem                block           16
    Block Limit Warps                     block            8
    Theoretical Active Warps per SM        warp           64
    Theoretical Occupancy                     %          100
    Achieved Occupancy                        %        74.71
    Achieved Active Warps Per SM           warp        47.81
    ------------------------------- ----------- ------------

    OPT   Est. Local Speedup: 25.29%                                                                                    
          The difference between calculated theoretical (100.0%) and measured achieved occupancy (74.7%) can be the     
          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   
          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle      6966.70
    Total DRAM Elapsed Cycles        cycle     20899328
    Average L1 Active Cycles         cycle    319856.56
    Total L1 Elapsed Cycles          cycle     39706882
    Average L2 Active Cycles         cycle    318587.45
    Total L2 Elapsed Cycles          cycle     28168640
    Average SM Active Cycles         cycle    319856.56
    Total SM Elapsed Cycles          cycle     39706882
    Average SMSP Active Cycles       cycle    318586.43
    Total SMSP Elapsed Cycles        cycle    158827528
    -------------------------- ----------- ------------

    OPT   Est. Speedup: 10.77%                                                                                          
          One or more SMs have a much lower number of active cycles than the average number of active cycles. Maximum   
          instance value is 12.38% above the average, while the minimum instance value is 15.93% below the average.     
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 10.94%                                                                                          
          One or more SMSPs have a much lower number of active cycles than the average number of active cycles. Maximum 
          instance value is 12.63% above the average, while the minimum instance value is 16.00% below the average.     
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 10.77%                                                                                          
          One or more L1 Slices have a much lower number of active cycles than the average number of active cycles.     
          Maximum instance value is 12.38% above the average, while the minimum instance value is 15.93% below the      
          average.                                                                                                      

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.03
    Branch Instructions              inst      3162112
    Branch Efficiency                   %          100
    Avg. Divergent Branches                          0
    ------------------------- ----------- ------------

  hgemm_tensor_core(const __half *, const __half *, float *, int, int) (8, 128, 1)x(32, 1, 1), Context 1, Stream 17, Device 0, CC 8.0
    Section: GPU Speed Of Light Throughput
    ----------------------- ----------- ------------
    Metric Name             Metric Unit Metric Value
    ----------------------- ----------- ------------
    DRAM Frequency                  Ghz         1.51
    SM Frequency                    Ghz         1.06
    Elapsed Cycles                cycle       507016
    Memory Throughput                 %        88.89
    DRAM Throughput                   %         0.97
    Duration                         us       476.13
    L1/TEX Cache Throughput           %        93.42
    L2 Cache Throughput               %         6.06
    SM Active Cycles              cycle    482426.82
    Compute (SM) Throughput           %        15.81
    ----------------------- ----------- ------------

    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing L1 in the Memory Workload Analysis section.                                                

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved 0% of  
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         4.19
    Dropped Samples                sample            0
    Maximum Sampling Interval       cycle        20000
    # Pass Groups                                    4
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         0.38
    Executed Ipc Elapsed  inst/cycle         0.36
    Issue Slots Busy               %         9.56
    Issued Ipc Active     inst/cycle         0.38
    SM Busy                        %         9.56
    -------------------- ----------- ------------

    OPT   Est. Local Speedup: 94.98%                                                                                    
          All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps   
          per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.             

    Section: Memory Workload Analysis
    --------------------------- ----------- ------------
    Metric Name                 Metric Unit Metric Value
    --------------------------- ----------- ------------
    Memory Throughput               Gbyte/s        18.73
    Mem Busy                              %        88.89
    Max Bandwidth                         %        15.81
    L1/TEX Hit Rate                       %        93.67
    L2 Compression Success Rate           %            0
    L2 Compression Ratio                               0
    L2 Hit Rate                           %        89.16
    Mem Pipes Busy                        %        15.81
    --------------------------- ----------- ------------

    Section: Memory Workload Analysis Tables
    OPT   Est. Speedup: 78.43%                                                                                          
          The memory access pattern for global loads from L1TEX might not be optimal. On average, only 3.8 of the 32    
          bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between   
          threads. Check the Source Counters section for uncoalesced global loads.                                      
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 46.71%                                                                                          
          The memory access pattern for shared loads might not be optimal and causes on average a 8.0 - way bank        
          conflict across all 262144 shared load requests.This results in 1048576 bank conflicts,  which represent      
          50.00% of the overall 2097266 wavefronts for shared loads. Check the Source Counters section for uncoalesced  
          shared loads.                                                                                                 
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 56.05%                                                                                          
          The memory access pattern for shared stores might not be optimal and causes on average a 2.5 - way bank       
          conflict across all 4194304 shared store requests.This results in 6291456 bank conflicts,  which represent    
          60.00% of the overall 10485760 wavefronts for shared stores. Check the Source Counters section for            
          uncoalesced shared stores.                                                                                    

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %         9.79
    Issued Warp Per Scheduler                        0.10
    No Eligible                            %        90.21
    Active Warps Per Scheduler          warp         2.36
    Eligible Warps Per Scheduler        warp         0.10
    ---------------------------- ----------- ------------

    OPT   Est. Local Speedup: 11.11%                                                                                    
          Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 10.2 cycles. This might leave hardware resources underutilized and may lead to    
          less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of   
          2.36 active warps per scheduler, but only an average of 0.10 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, reduce the time the active warps are stalled by inspecting the top stall reasons on the Warp  
          State Statistics and Source Counters sections.                                                                

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        24.11
    Warp Cycles Per Executed Instruction           cycle        24.11
    Avg. Active Threads Per Warp                                17.84
    Avg. Not Predicated Off Threads Per Warp                    17.73
    ---------------------------------------- ----------- ------------

    OPT   Est. Speedup: 11.11%                                                                                          
          On average, each warp of this kernel spends 16.7 cycles being stalled waiting for a scoreboard dependency on  
          a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited     
          upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the        
          memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by        
          increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently     
          used data to shared memory. This stall type represents about 69.4% of the total average of 24.1 cycles        
          between issuing two instructions.                                                                             
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on         
          sampling data. The Kernel Profiling Guide                                                                     
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details    
          on each stall reason.                                                                                         
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 7.052%                                                                                          
          Instructions are executed in warps, which are groups of 32 threads. Optimal instruction throughput is         
          achieved if all 32 threads of a warp execute the same instruction. The chosen launch configuration, early     
          thread completion, and divergent flow control can significantly lower the number of active threads in a warp  
          per cycle. This kernel achieves an average of 17.8 threads being active per cycle. This is further reduced    
          to 17.7 threads per warp due to predication. The compiler may use predication to avoid an actual branch.      
          Instead, all instructions are scheduled, but a per-thread condition code or predicate controls which threads  
          execute the instructions. Try to avoid different execution paths within a warp when possible.                 

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst     46108.44
    Executed Instructions                           inst     19918848
    Avg. Issued Instructions Per Scheduler          inst     46120.79
    Issued Instructions                             inst     19924181
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                    32
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                   1024
    Registers Per Thread             register/thread              32
    Shared Memory Configuration Size           Kbyte          102.40
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block       Kbyte/block            2.05
    # SMs                                         SM             108
    Threads                                   thread           32768
    Uses Green Context                                             0
    Waves Per SM                                                0.30
    -------------------------------- --------------- ---------------

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           32
    Block Limit Registers                 block           64
    Block Limit Shared Mem                block           33
    Block Limit Warps                     block           64
    Theoretical Active Warps per SM        warp           32
    Theoretical Occupancy                     %           50
    Achieved Occupancy                        %        14.40
    Achieved Active Warps Per SM           warp         9.22
    ------------------------------- ----------- ------------

    OPT   Est. Speedup: 11.11%                                                                                          
          The difference between calculated theoretical (50.0%) and measured achieved occupancy (14.4%) can be the      
          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   
          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 11.11%                                                                                          
          The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 16. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that   
          can fit on the SM.                                                                                            

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle      6968.70
    Total DRAM Elapsed Cycles        cycle     28793728
    Average L1 Active Cycles         cycle    482426.82
    Total L1 Elapsed Cycles          cycle     54757114
    Average L2 Active Cycles         cycle    434056.60
    Total L2 Elapsed Cycles          cycle     38847680
    Average SM Active Cycles         cycle    482426.82
    Total SM Elapsed Cycles          cycle     54757114
    Average SMSP Active Cycles       cycle    470982.72
    Total SMSP Elapsed Cycles        cycle    219028456
    -------------------------- ----------- ------------

    OPT   Est. Speedup: 5.945%                                                                                          
          One or more SMSPs have a much higher number of active cycles than the average number of active cycles.        
          Maximum instance value is 6.40% above the average, while the minimum instance value is 4.33% below the        
          average.                                                                                                      

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.03
    Branch Instructions              inst       528384
    Branch Efficiency                   %        50.19
    Avg. Divergent Branches                     303.41
    ------------------------- ----------- ------------

    OPT   Est. Speedup: 78.8%                                                                                           
          This kernel has uncoalesced global accesses resulting in a total of 31457280 excessive sectors (88% of the    
          total 35684352 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source       
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional      
          information on reducing uncoalesced device memory accesses.                                                   
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 55.5%                                                                                           
          This kernel has uncoalesced shared accesses resulting in a total of 7340032 excessive wavefronts (58% of the  
          total 12582912 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.  
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -ab) has an example on optimizing shared memory accesses.                                                     

  hgemm_normal(const __half *, const __half *, float *, int, int, unsigned long, unsigned long, unsigned long) (128, 8, 1)x(16, 16, 1), Context 1, Stream 18, Device 0, CC 8.0
    Section: GPU Speed Of Light Throughput
    ----------------------- ----------- ------------
    Metric Name             Metric Unit Metric Value
    ----------------------- ----------- ------------
    DRAM Frequency                  Ghz         1.51
    SM Frequency                    Ghz         1.06
    Elapsed Cycles                cycle       367276
    Memory Throughput                 %        70.95
    DRAM Throughput                   %         1.34
    Duration                         us       345.09
    L1/TEX Cache Throughput           %        81.55
    L2 Cache Throughput               %        12.72
    SM Active Cycles              cycle    319317.19
    Compute (SM) Throughput           %        63.55
    ----------------------- ----------- ------------

    INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. 
          Check both the Compute Workload Analysis and Memory Workload Analysis sections.                               

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved 21% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         3.93
    Dropped Samples                sample            0
    Maximum Sampling Interval       cycle        40000
    # Pass Groups                                    4
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         2.84
    Executed Ipc Elapsed  inst/cycle         2.47
    Issue Slots Busy               %        70.95
    Issued Ipc Active     inst/cycle         2.84
    SM Busy                        %        70.95
    -------------------- ----------- ------------

    INF   FMA is the highest-utilized pipeline (27.5%) based on active cycles, taking into account the rates of its     
          different instructions. It executes 32-bit floating point (FADD, FMUL, FMAD, ...) and integer (IMUL, IMAD)    
          operations. It is well-utilized, but should not be a bottleneck.                                              

    Section: Memory Workload Analysis
    --------------------------- ----------- ------------
    Metric Name                 Metric Unit Metric Value
    --------------------------- ----------- ------------
    Memory Throughput               Gbyte/s        25.84
    Mem Busy                              %        70.95
    Max Bandwidth                         %        63.55
    L1/TEX Hit Rate                       %        19.16
    L2 Compression Success Rate           %            0
    L2 Compression Ratio                               0
    L2 Hit Rate                           %        91.04
    Mem Pipes Busy                        %        63.55
    --------------------------- ----------- ------------

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %        71.00
    Issued Warp Per Scheduler                        0.71
    No Eligible                            %        29.00
    Active Warps Per Scheduler          warp        12.00
    Eligible Warps Per Scheduler        warp         3.67
    ---------------------------- ----------- ------------

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        16.90
    Warp Cycles Per Executed Instruction           cycle        16.91
    Avg. Active Threads Per Warp                                   32
    Avg. Not Predicated Off Threads Per Warp                    31.65
    ---------------------------------------- ----------- ------------

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst    226417.78
    Executed Instructions                           inst     97812480
    Avg. Issued Instructions Per Scheduler          inst    226550.87
    Issued Instructions                             inst     97869975
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                   256
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                   1024
    Registers Per Thread             register/thread              30
    Shared Memory Configuration Size           Kbyte           32.77
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block       Kbyte/block            1.02
    # SMs                                         SM             108
    Threads                                   thread          262144
    Uses Green Context                                             0
    Waves Per SM                                                1.19
    -------------------------------- --------------- ---------------

    OPT   Est. Speedup: 50%                                                                                             
          A wave of thread blocks is defined as the maximum number of blocks that can be executed in parallel on the    
          target GPU. The number of blocks in a wave depends on the number of multiprocessors and the theoretical       
          occupancy of the kernel. This kernel launch results in 1 full waves and a partial wave of 159 thread blocks.  
          Under the assumption of a uniform execution duration of all thread blocks, the partial wave may account for   
          up to 50.0% of the total kernel runtime with a lower occupancy of 25.1%. Try launching a grid with no         
          partial wave. The overall impact of this tail effect also lessens with the number of full waves executed for  
          a grid. See the Hardware Model                                                                                
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      
          details on launch configurations.                                                                             

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           32
    Block Limit Registers                 block            8
    Block Limit Shared Mem                block           16
    Block Limit Warps                     block            8
    Theoretical Active Warps per SM        warp           64
    Theoretical Occupancy                     %          100
    Achieved Occupancy                        %        74.94
    Achieved Active Warps Per SM           warp        47.96
    ------------------------------- ----------- ------------

    OPT   Est. Local Speedup: 25.06%                                                                                    
          The difference between calculated theoretical (100.0%) and measured achieved occupancy (74.9%) can be the     
          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   
          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle      6967.60
    Total DRAM Elapsed Cycles        cycle     20866560
    Average L1 Active Cycles         cycle    319317.19
    Total L1 Elapsed Cycles          cycle     39641010
    Average L2 Active Cycles         cycle    320123.03
    Total L2 Elapsed Cycles          cycle     28125440
    Average SM Active Cycles         cycle    319317.19
    Total SM Elapsed Cycles          cycle     39641010
    Average SMSP Active Cycles       cycle    319073.85
    Total SMSP Elapsed Cycles        cycle    158564040
    -------------------------- ----------- ------------

    OPT   Est. Speedup: 10.77%                                                                                          
          One or more SMs have a much lower number of active cycles than the average number of active cycles. Maximum   
          instance value is 12.38% above the average, while the minimum instance value is 16.11% below the average.     
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 10.8%                                                                                           
          One or more SMSPs have a much lower number of active cycles than the average number of active cycles. Maximum 
          instance value is 12.42% above the average, while the minimum instance value is 15.74% below the average.     
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 10.77%                                                                                          
          One or more L1 Slices have a much lower number of active cycles than the average number of active cycles.     
          Maximum instance value is 12.38% above the average, while the minimum instance value is 16.11% below the      
          average.                                                                                                      

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.03
    Branch Instructions              inst      3162112
    Branch Efficiency                   %          100
    Avg. Divergent Branches                          0
    ------------------------- ----------- ------------

  hgemm_tensor_core(const __half *, const __half *, float *, int, int) (8, 128, 1)x(32, 1, 1), Context 1, Stream 19, Device 0, CC 8.0
    Section: GPU Speed Of Light Throughput
    ----------------------- ----------- ------------
    Metric Name             Metric Unit Metric Value
    ----------------------- ----------- ------------
    DRAM Frequency                  Ghz         1.51
    SM Frequency                    Ghz         1.06
    Elapsed Cycles                cycle       506691
    Memory Throughput                 %        88.95
    DRAM Throughput                   %         0.97
    Duration                         us       475.81
    L1/TEX Cache Throughput           %        93.39
    L2 Cache Throughput               %         6.40
    SM Active Cycles              cycle    482546.61
    Compute (SM) Throughput           %        15.82
    ----------------------- ----------- ------------

    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing L1 in the Memory Workload Analysis section.                                                

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved 0% of  
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         4.19
    Dropped Samples                sample            0
    Maximum Sampling Interval       cycle        20000
    # Pass Groups                                    4
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         0.38
    Executed Ipc Elapsed  inst/cycle         0.36
    Issue Slots Busy               %         9.56
    Issued Ipc Active     inst/cycle         0.38
    SM Busy                        %         9.56
    -------------------- ----------- ------------

    OPT   Est. Local Speedup: 94.98%                                                                                    
          All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps   
          per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.             

    Section: Memory Workload Analysis
    --------------------------- ----------- ------------
    Metric Name                 Metric Unit Metric Value
    --------------------------- ----------- ------------
    Memory Throughput               Gbyte/s        18.75
    Mem Busy                              %        88.95
    Max Bandwidth                         %        15.82
    L1/TEX Hit Rate                       %        93.32
    L2 Compression Success Rate           %            0
    L2 Compression Ratio                               0
    L2 Hit Rate                           %        83.26
    Mem Pipes Busy                        %        15.82
    --------------------------- ----------- ------------

    Section: Memory Workload Analysis Tables
    OPT   Est. Speedup: 78.48%                                                                                          
          The memory access pattern for global loads from L1TEX might not be optimal. On average, only 3.8 of the 32    
          bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between   
          threads. Check the Source Counters section for uncoalesced global loads.                                      
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 46.7%                                                                                           
          The memory access pattern for shared loads might not be optimal and causes on average a 8.0 - way bank        
          conflict across all 262144 shared load requests.This results in 1048576 bank conflicts,  which represent      
          50.00% of the overall 2097247 wavefronts for shared loads. Check the Source Counters section for uncoalesced  
          shared loads.                                                                                                 
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 56.04%                                                                                          
          The memory access pattern for shared stores might not be optimal and causes on average a 2.5 - way bank       
          conflict across all 4194304 shared store requests.This results in 6291456 bank conflicts,  which represent    
          60.00% of the overall 10485760 wavefronts for shared stores. Check the Source Counters section for            
          uncoalesced shared stores.                                                                                    

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %         9.78
    Issued Warp Per Scheduler                        0.10
    No Eligible                            %        90.22
    Active Warps Per Scheduler          warp         2.36
    Eligible Warps Per Scheduler        warp         0.10
    ---------------------------- ----------- ------------

    OPT   Est. Local Speedup: 11.05%                                                                                    
          Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 10.2 cycles. This might leave hardware resources underutilized and may lead to    
          less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of   
          2.36 active warps per scheduler, but only an average of 0.10 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, reduce the time the active warps are stalled by inspecting the top stall reasons on the Warp  
          State Statistics and Source Counters sections.                                                                

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        24.14
    Warp Cycles Per Executed Instruction           cycle        24.14
    Avg. Active Threads Per Warp                                17.84
    Avg. Not Predicated Off Threads Per Warp                    17.73
    ---------------------------------------- ----------- ------------

    OPT   Est. Speedup: 11.05%                                                                                          
          On average, each warp of this kernel spends 16.8 cycles being stalled waiting for a scoreboard dependency on  
          a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited     
          upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the        
          memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by        
          increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently     
          used data to shared memory. This stall type represents about 69.6% of the total average of 24.1 cycles        
          between issuing two instructions.                                                                             
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on         
          sampling data. The Kernel Profiling Guide                                                                     
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details    
          on each stall reason.                                                                                         
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 7.056%                                                                                          
          Instructions are executed in warps, which are groups of 32 threads. Optimal instruction throughput is         
          achieved if all 32 threads of a warp execute the same instruction. The chosen launch configuration, early     
          thread completion, and divergent flow control can significantly lower the number of active threads in a warp  
          per cycle. This kernel achieves an average of 17.8 threads being active per cycle. This is further reduced    
          to 17.7 threads per warp due to predication. The compiler may use predication to avoid an actual branch.      
          Instead, all instructions are scheduled, but a per-thread condition code or predicate controls which threads  
          execute the instructions. Try to avoid different execution paths within a warp when possible.                 

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst     46108.44
    Executed Instructions                           inst     19918848
    Avg. Issued Instructions Per Scheduler          inst     46120.84
    Issued Instructions                             inst     19924205
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                    32
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                   1024
    Registers Per Thread             register/thread              32
    Shared Memory Configuration Size           Kbyte          102.40
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block       Kbyte/block            2.05
    # SMs                                         SM             108
    Threads                                   thread           32768
    Uses Green Context                                             0
    Waves Per SM                                                0.30
    -------------------------------- --------------- ---------------

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           32
    Block Limit Registers                 block           64
    Block Limit Shared Mem                block           33
    Block Limit Warps                     block           64
    Theoretical Active Warps per SM        warp           32
    Theoretical Occupancy                     %           50
    Achieved Occupancy                        %        14.42
    Achieved Active Warps Per SM           warp         9.23
    ------------------------------- ----------- ------------

    OPT   Est. Speedup: 11.05%                                                                                          
          The difference between calculated theoretical (50.0%) and measured achieved occupancy (14.4%) can be the      
          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   
          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 11.05%                                                                                          
          The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 16. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that   
          can fit on the SM.                                                                                            

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle      6968.70
    Total DRAM Elapsed Cycles        cycle     28773888
    Average L1 Active Cycles         cycle    482546.61
    Total L1 Elapsed Cycles          cycle     54721968
    Average L2 Active Cycles         cycle    434016.47
    Total L2 Elapsed Cycles          cycle     38822480
    Average SM Active Cycles         cycle    482546.61
    Total SM Elapsed Cycles          cycle     54721968
    Average SMSP Active Cycles       cycle    471743.52
    Total SMSP Elapsed Cycles        cycle    218887872
    -------------------------- ----------- ------------

    OPT   Est. Speedup: 5.721%                                                                                          
          One or more SMSPs have a much higher number of active cycles than the average number of active cycles.        
          Maximum instance value is 6.14% above the average, while the minimum instance value is 4.35% below the        
          average.                                                                                                      

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.03
    Branch Instructions              inst       528384
    Branch Efficiency                   %        50.19
    Avg. Divergent Branches                     303.41
    ------------------------- ----------- ------------

    OPT   Est. Speedup: 78.84%                                                                                          
          This kernel has uncoalesced global accesses resulting in a total of 31457280 excessive sectors (88% of the    
          total 35684352 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source       
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional      
          information on reducing uncoalesced device memory accesses.                                                   
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 55.55%                                                                                          
          This kernel has uncoalesced shared accesses resulting in a total of 7340032 excessive wavefronts (58% of the  
          total 12582912 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.  
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -ab) has an example on optimizing shared memory accesses.                                                     

  hgemm_normal(const __half *, const __half *, float *, int, int, unsigned long, unsigned long, unsigned long) (128, 8, 1)x(16, 16, 1), Context 1, Stream 20, Device 0, CC 8.0
    Section: GPU Speed Of Light Throughput
    ----------------------- ----------- ------------
    Metric Name             Metric Unit Metric Value
    ----------------------- ----------- ------------
    DRAM Frequency                  Ghz         1.51
    SM Frequency                    Ghz         1.06
    Elapsed Cycles                cycle       367652
    Memory Throughput                 %        70.87
    DRAM Throughput                   %         1.33
    Duration                         us       345.41
    L1/TEX Cache Throughput           %        81.67
    L2 Cache Throughput               %        12.76
    SM Active Cycles              cycle    318880.03
    Compute (SM) Throughput           %        63.48
    ----------------------- ----------- ------------

    INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. 
          Check both the Compute Workload Analysis and Memory Workload Analysis sections.                               

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved 21% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         3.93
    Dropped Samples                sample            0
    Maximum Sampling Interval       cycle        40000
    # Pass Groups                                    4
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         2.84
    Executed Ipc Elapsed  inst/cycle         2.46
    Issue Slots Busy               %        71.05
    Issued Ipc Active     inst/cycle         2.84
    SM Busy                        %        71.05
    -------------------- ----------- ------------

    INF   FMA is the highest-utilized pipeline (27.5%) based on active cycles, taking into account the rates of its     
          different instructions. It executes 32-bit floating point (FADD, FMUL, FMAD, ...) and integer (IMUL, IMAD)    
          operations. It is well-utilized, but should not be a bottleneck.                                              

    Section: Memory Workload Analysis
    --------------------------- ----------- ------------
    Metric Name                 Metric Unit Metric Value
    --------------------------- ----------- ------------
    Memory Throughput               Gbyte/s        25.82
    Mem Busy                              %        70.87
    Max Bandwidth                         %        63.48
    L1/TEX Hit Rate                       %        18.84
    L2 Compression Success Rate           %            0
    L2 Compression Ratio                               0
    L2 Hit Rate                           %        91.72
    Mem Pipes Busy                        %        63.48
    --------------------------- ----------- ------------

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %        71.08
    Issued Warp Per Scheduler                        0.71
    No Eligible                            %        28.92
    Active Warps Per Scheduler          warp        12.01
    Eligible Warps Per Scheduler        warp         3.68
    ---------------------------- ----------- ------------

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        16.90
    Warp Cycles Per Executed Instruction           cycle        16.91
    Avg. Active Threads Per Warp                                   32
    Avg. Not Predicated Off Threads Per Warp                    31.65
    ---------------------------------------- ----------- ------------

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst    226417.78
    Executed Instructions                           inst     97812480
    Avg. Issued Instructions Per Scheduler          inst    226550.88
    Issued Instructions                             inst     97869981
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                   256
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                   1024
    Registers Per Thread             register/thread              30
    Shared Memory Configuration Size           Kbyte           32.77
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block       Kbyte/block            1.02
    # SMs                                         SM             108
    Threads                                   thread          262144
    Uses Green Context                                             0
    Waves Per SM                                                1.19
    -------------------------------- --------------- ---------------

    OPT   Est. Speedup: 50%                                                                                             
          A wave of thread blocks is defined as the maximum number of blocks that can be executed in parallel on the    
          target GPU. The number of blocks in a wave depends on the number of multiprocessors and the theoretical       
          occupancy of the kernel. This kernel launch results in 1 full waves and a partial wave of 159 thread blocks.  
          Under the assumption of a uniform execution duration of all thread blocks, the partial wave may account for   
          up to 50.0% of the total kernel runtime with a lower occupancy of 25.0%. Try launching a grid with no         
          partial wave. The overall impact of this tail effect also lessens with the number of full waves executed for  
          a grid. See the Hardware Model                                                                                
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      
          details on launch configurations.                                                                             

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           32
    Block Limit Registers                 block            8
    Block Limit Shared Mem                block           16
    Block Limit Warps                     block            8
    Theoretical Active Warps per SM        warp           64
    Theoretical Occupancy                     %          100
    Achieved Occupancy                        %        75.05
    Achieved Active Warps Per SM           warp        48.03
    ------------------------------- ----------- ------------

    OPT   Est. Local Speedup: 24.95%                                                                                    
          The difference between calculated theoretical (100.0%) and measured achieved occupancy (75.0%) can be the     
          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   
          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle      6966.70
    Total DRAM Elapsed Cycles        cycle     20887040
    Average L1 Active Cycles         cycle    318880.03
    Total L1 Elapsed Cycles          cycle     39683934
    Average L2 Active Cycles         cycle    320591.65
    Total L2 Elapsed Cycles          cycle     28155120
    Average SM Active Cycles         cycle    318880.03
    Total SM Elapsed Cycles          cycle     39683934
    Average SMSP Active Cycles       cycle    318730.06
    Total SMSP Elapsed Cycles        cycle    158735736
    -------------------------- ----------- ------------

    OPT   Est. Speedup: 10.96%                                                                                          
          One or more SMs have a much lower number of active cycles than the average number of active cycles. Maximum   
          instance value is 12.63% above the average, while the minimum instance value is 15.74% below the average.     
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 11.23%                                                                                          
          One or more SMSPs have a much lower number of active cycles than the average number of active cycles. Maximum 
          instance value is 12.94% above the average, while the minimum instance value is 15.47% below the average.     
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 10.96%                                                                                          
          One or more L1 Slices have a much lower number of active cycles than the average number of active cycles.     
          Maximum instance value is 12.63% above the average, while the minimum instance value is 15.74% below the      
          average.                                                                                                      

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.03
    Branch Instructions              inst      3162112
    Branch Efficiency                   %          100
    Avg. Divergent Branches                          0
    ------------------------- ----------- ------------

  hgemm_tensor_core(const __half *, const __half *, float *, int, int) (8, 128, 1)x(32, 1, 1), Context 1, Stream 21, Device 0, CC 8.0
    Section: GPU Speed Of Light Throughput
    ----------------------- ----------- ------------
    Metric Name             Metric Unit Metric Value
    ----------------------- ----------- ------------
    DRAM Frequency                  Ghz         1.51
    SM Frequency                    Ghz         1.06
    Elapsed Cycles                cycle       506693
    Memory Throughput                 %        88.95
    DRAM Throughput                   %         0.97
    Duration                         us       475.81
    L1/TEX Cache Throughput           %        93.33
    L2 Cache Throughput               %         6.84
    SM Active Cycles              cycle    482887.18
    Compute (SM) Throughput           %        15.82
    ----------------------- ----------- ------------

    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing L1 in the Memory Workload Analysis section.                                                

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved 0% of  
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         4.19
    Dropped Samples                sample            0
    Maximum Sampling Interval       cycle        20000
    # Pass Groups                                    4
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         0.38
    Executed Ipc Elapsed  inst/cycle         0.36
    Issue Slots Busy               %         9.55
    Issued Ipc Active     inst/cycle         0.38
    SM Busy                        %         9.55
    -------------------- ----------- ------------

    OPT   Est. Local Speedup: 94.99%                                                                                    
          All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps   
          per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.             

    Section: Memory Workload Analysis
    --------------------------- ----------- ------------
    Metric Name                 Metric Unit Metric Value
    --------------------------- ----------- ------------
    Memory Throughput               Gbyte/s        18.75
    Mem Busy                              %        88.95
    Max Bandwidth                         %        15.82
    L1/TEX Hit Rate                       %        93.31
    L2 Compression Success Rate           %            0
    L2 Compression Ratio                               0
    L2 Hit Rate                           %        81.72
    Mem Pipes Busy                        %        15.82
    --------------------------- ----------- ------------

    Section: Memory Workload Analysis Tables
    OPT   Est. Speedup: 78.48%                                                                                          
          The memory access pattern for global loads from L1TEX might not be optimal. On average, only 3.8 of the 32    
          bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between   
          threads. Check the Source Counters section for uncoalesced global loads.                                      
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 46.66%                                                                                          
          The memory access pattern for shared loads might not be optimal and causes on average a 8.0 - way bank        
          conflict across all 262144 shared load requests.This results in 1048576 bank conflicts,  which represent      
          50.00% of the overall 2097253 wavefronts for shared loads. Check the Source Counters section for uncoalesced  
          shared loads.                                                                                                 
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 56%                                                                                             
          The memory access pattern for shared stores might not be optimal and causes on average a 2.5 - way bank       
          conflict across all 4194304 shared store requests.This results in 6291456 bank conflicts,  which represent    
          60.00% of the overall 10485760 wavefronts for shared stores. Check the Source Counters section for            
          uncoalesced shared stores.                                                                                    

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %         9.79
    Issued Warp Per Scheduler                        0.10
    No Eligible                            %        90.21
    Active Warps Per Scheduler          warp         2.36
    Eligible Warps Per Scheduler        warp         0.10
    ---------------------------- ----------- ------------

    OPT   Est. Local Speedup: 11.05%                                                                                    
          Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 10.2 cycles. This might leave hardware resources underutilized and may lead to    
          less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of   
          2.36 active warps per scheduler, but only an average of 0.10 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, reduce the time the active warps are stalled by inspecting the top stall reasons on the Warp  
          State Statistics and Source Counters sections.                                                                

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        24.10
    Warp Cycles Per Executed Instruction           cycle        24.11
    Avg. Active Threads Per Warp                                17.84
    Avg. Not Predicated Off Threads Per Warp                    17.73
    ---------------------------------------- ----------- ------------

    OPT   Est. Speedup: 11.05%                                                                                          
          On average, each warp of this kernel spends 16.7 cycles being stalled waiting for a scoreboard dependency on  
          a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited     
          upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the        
          memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by        
          increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently     
          used data to shared memory. This stall type represents about 69.4% of the total average of 24.1 cycles        
          between issuing two instructions.                                                                             
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on         
          sampling data. The Kernel Profiling Guide                                                                     
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details    
          on each stall reason.                                                                                         
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 7.056%                                                                                          
          Instructions are executed in warps, which are groups of 32 threads. Optimal instruction throughput is         
          achieved if all 32 threads of a warp execute the same instruction. The chosen launch configuration, early     
          thread completion, and divergent flow control can significantly lower the number of active threads in a warp  
          per cycle. This kernel achieves an average of 17.8 threads being active per cycle. This is further reduced    
          to 17.7 threads per warp due to predication. The compiler may use predication to avoid an actual branch.      
          Instead, all instructions are scheduled, but a per-thread condition code or predicate controls which threads  
          execute the instructions. Try to avoid different execution paths within a warp when possible.                 

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst     46108.44
    Executed Instructions                           inst     19918848
    Avg. Issued Instructions Per Scheduler          inst     46120.77
    Issued Instructions                             inst     19924174
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                    32
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                   1024
    Registers Per Thread             register/thread              32
    Shared Memory Configuration Size           Kbyte          102.40
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block       Kbyte/block            2.05
    # SMs                                         SM             108
    Threads                                   thread           32768
    Uses Green Context                                             0
    Waves Per SM                                                0.30
    -------------------------------- --------------- ---------------

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           32
    Block Limit Registers                 block           64
    Block Limit Shared Mem                block           33
    Block Limit Warps                     block           64
    Theoretical Active Warps per SM        warp           32
    Theoretical Occupancy                     %           50
    Achieved Occupancy                        %        14.39
    Achieved Active Warps Per SM           warp         9.21
    ------------------------------- ----------- ------------

    OPT   Est. Speedup: 11.05%                                                                                          
          The difference between calculated theoretical (50.0%) and measured achieved occupancy (14.4%) can be the      
          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   
          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 11.05%                                                                                          
          The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 16. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that   
          can fit on the SM.                                                                                            

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle      6968.70
    Total DRAM Elapsed Cycles        cycle     28772992
    Average L1 Active Cycles         cycle    482887.18
    Total L1 Elapsed Cycles          cycle     54722130
    Average L2 Active Cycles         cycle    435190.70
    Total L2 Elapsed Cycles          cycle     38822960
    Average SM Active Cycles         cycle    482887.18
    Total SM Elapsed Cycles          cycle     54722130
    Average SMSP Active Cycles       cycle    471139.99
    Total SMSP Elapsed Cycles        cycle    218888520
    -------------------------- ----------- ------------

    OPT   Est. Speedup: 5.966%                                                                                          
          One or more SMSPs have a much higher number of active cycles than the average number of active cycles.        
          Maximum instance value is 6.42% above the average, while the minimum instance value is 4.55% below the        
          average.                                                                                                      

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.03
    Branch Instructions              inst       528384
    Branch Efficiency                   %        50.19
    Avg. Divergent Branches                     303.41
    ------------------------- ----------- ------------

    OPT   Est. Speedup: 79.05%                                                                                          
          This kernel has uncoalesced global accesses resulting in a total of 31457280 excessive sectors (88% of the    
          total 35684352 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source       
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional      
          information on reducing uncoalesced device memory accesses.                                                   
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 55.59%                                                                                          
          This kernel has uncoalesced shared accesses resulting in a total of 7340032 excessive wavefronts (58% of the  
          total 12582912 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.  
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -ab) has an example on optimizing shared memory accesses.                                                     

  hgemm_normal(const __half *, const __half *, float *, int, int, unsigned long, unsigned long, unsigned long) (128, 8, 1)x(16, 16, 1), Context 1, Stream 14, Device 0, CC 8.0
    Section: GPU Speed Of Light Throughput
    ----------------------- ----------- ------------
    Metric Name             Metric Unit Metric Value
    ----------------------- ----------- ------------
    DRAM Frequency                  Ghz         1.51
    SM Frequency                    Ghz         1.06
    Elapsed Cycles                cycle       367582
    Memory Throughput                 %        70.88
    DRAM Throughput                   %         1.33
    Duration                         us       345.34
    L1/TEX Cache Throughput           %        81.48
    L2 Cache Throughput               %        12.71
    SM Active Cycles              cycle    319592.69
    Compute (SM) Throughput           %        63.49
    ----------------------- ----------- ------------

    INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. 
          Check both the Compute Workload Analysis and Memory Workload Analysis sections.                               

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved 21% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         3.93
    Dropped Samples                sample            0
    Maximum Sampling Interval       cycle        40000
    # Pass Groups                                    4
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         2.83
    Executed Ipc Elapsed  inst/cycle         2.47
    Issue Slots Busy               %        70.89
    Issued Ipc Active     inst/cycle         2.84
    SM Busy                        %        70.89
    -------------------- ----------- ------------

    INF   FMA is the highest-utilized pipeline (27.4%) based on active cycles, taking into account the rates of its     
          different instructions. It executes 32-bit floating point (FADD, FMUL, FMAD, ...) and integer (IMUL, IMAD)    
          operations. It is well-utilized, but should not be a bottleneck.                                              

    Section: Memory Workload Analysis
    --------------------------- ----------- ------------
    Metric Name                 Metric Unit Metric Value
    --------------------------- ----------- ------------
    Memory Throughput               Gbyte/s        25.82
    Mem Busy                              %        70.88
    Max Bandwidth                         %        63.49
    L1/TEX Hit Rate                       %        18.87
    L2 Compression Success Rate           %            0
    L2 Compression Ratio                               0
    L2 Hit Rate                           %        91.44
    Mem Pipes Busy                        %        63.49
    --------------------------- ----------- ------------

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %        71.00
    Issued Warp Per Scheduler                        0.71
    No Eligible                            %        29.00
    Active Warps Per Scheduler          warp        11.98
    Eligible Warps Per Scheduler        warp         3.68
    ---------------------------- ----------- ------------

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        16.87
    Warp Cycles Per Executed Instruction           cycle        16.88
    Avg. Active Threads Per Warp                                   32
    Avg. Not Predicated Off Threads Per Warp                    31.65
    ---------------------------------------- ----------- ------------

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst    226417.78
    Executed Instructions                           inst     97812480
    Avg. Issued Instructions Per Scheduler          inst    226549.96
    Issued Instructions                             inst     97869582
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                   256
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                   1024
    Registers Per Thread             register/thread              30
    Shared Memory Configuration Size           Kbyte           32.77
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block       Kbyte/block            1.02
    # SMs                                         SM             108
    Threads                                   thread          262144
    Uses Green Context                                             0
    Waves Per SM                                                1.19
    -------------------------------- --------------- ---------------

    OPT   Est. Speedup: 50%                                                                                             
          A wave of thread blocks is defined as the maximum number of blocks that can be executed in parallel on the    
          target GPU. The number of blocks in a wave depends on the number of multiprocessors and the theoretical       
          occupancy of the kernel. This kernel launch results in 1 full waves and a partial wave of 159 thread blocks.  
          Under the assumption of a uniform execution duration of all thread blocks, the partial wave may account for   
          up to 50.0% of the total kernel runtime with a lower occupancy of 25.2%. Try launching a grid with no         
          partial wave. The overall impact of this tail effect also lessens with the number of full waves executed for  
          a grid. See the Hardware Model                                                                                
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      
          details on launch configurations.                                                                             

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           32
    Block Limit Registers                 block            8
    Block Limit Shared Mem                block           16
    Block Limit Warps                     block            8
    Theoretical Active Warps per SM        warp           64
    Theoretical Occupancy                     %          100
    Achieved Occupancy                        %        74.75
    Achieved Active Warps Per SM           warp        47.84
    ------------------------------- ----------- ------------

    OPT   Est. Local Speedup: 25.25%                                                                                    
          The difference between calculated theoretical (100.0%) and measured achieved occupancy (74.8%) can be the     
          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   
          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle      6966.70
    Total DRAM Elapsed Cycles        cycle     20884480
    Average L1 Active Cycles         cycle    319592.69
    Total L1 Elapsed Cycles          cycle     39678336
    Average L2 Active Cycles         cycle    322113.45
    Total L2 Elapsed Cycles          cycle     28152320
    Average SM Active Cycles         cycle    319592.69
    Total SM Elapsed Cycles          cycle     39678336
    Average SMSP Active Cycles       cycle    319086.93
    Total SMSP Elapsed Cycles        cycle    158713344
    -------------------------- ----------- ------------

    OPT   Est. Speedup: 10.78%                                                                                          
          One or more SMs have a much lower number of active cycles than the average number of active cycles. Maximum   
          instance value is 12.40% above the average, while the minimum instance value is 16.17% below the average.     
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 10.86%                                                                                          
          One or more SMSPs have a much lower number of active cycles than the average number of active cycles. Maximum 
          instance value is 12.51% above the average, while the minimum instance value is 15.93% below the average.     
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 10.78%                                                                                          
          One or more L1 Slices have a much lower number of active cycles than the average number of active cycles.     
          Maximum instance value is 12.40% above the average, while the minimum instance value is 16.17% below the      
          average.                                                                                                      

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.03
    Branch Instructions              inst      3162112
    Branch Efficiency                   %          100
    Avg. Divergent Branches                          0
    ------------------------- ----------- ------------

  hgemm_tensor_core(const __half *, const __half *, float *, int, int) (8, 128, 1)x(32, 1, 1), Context 1, Stream 15, Device 0, CC 8.0
    Section: GPU Speed Of Light Throughput
    ----------------------- ----------- ------------
    Metric Name             Metric Unit Metric Value
    ----------------------- ----------- ------------
    DRAM Frequency                  Ghz         1.51
    SM Frequency                    Ghz         1.06
    Elapsed Cycles                cycle       505805
    Memory Throughput                 %        89.10
    DRAM Throughput                   %         0.97
    Duration                         us       474.98
    L1/TEX Cache Throughput           %        93.57
    L2 Cache Throughput               %         6.45
    SM Active Cycles              cycle    481635.81
    Compute (SM) Throughput           %        15.85
    ----------------------- ----------- ------------

    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing L1 in the Memory Workload Analysis section.                                                

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved 0% of  
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         4.19
    Dropped Samples                sample            0
    Maximum Sampling Interval       cycle        20000
    # Pass Groups                                    4
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         0.38
    Executed Ipc Elapsed  inst/cycle         0.36
    Issue Slots Busy               %         9.58
    Issued Ipc Active     inst/cycle         0.38
    SM Busy                        %         9.58
    -------------------- ----------- ------------

    OPT   Est. Local Speedup: 94.97%                                                                                    
          All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps   
          per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.             

    Section: Memory Workload Analysis
    --------------------------- ----------- ------------
    Metric Name                 Metric Unit Metric Value
    --------------------------- ----------- ------------
    Memory Throughput               Gbyte/s        18.78
    Mem Busy                              %        89.10
    Max Bandwidth                         %        15.85
    L1/TEX Hit Rate                       %        93.17
    L2 Compression Success Rate           %            0
    L2 Compression Ratio                               0
    L2 Hit Rate                           %        82.27
    Mem Pipes Busy                        %        15.85
    --------------------------- ----------- ------------

    Section: Memory Workload Analysis Tables
    OPT   Est. Speedup: 78.62%                                                                                          
          The memory access pattern for global loads from L1TEX might not be optimal. On average, only 3.8 of the 32    
          bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between   
          threads. Check the Source Counters section for uncoalesced global loads.                                      
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 46.78%                                                                                          
          The memory access pattern for shared loads might not be optimal and causes on average a 8.0 - way bank        
          conflict across all 262144 shared load requests.This results in 1048576 bank conflicts,  which represent      
          50.00% of the overall 2097260 wavefronts for shared loads. Check the Source Counters section for uncoalesced  
          shared loads.                                                                                                 
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 56.14%                                                                                          
          The memory access pattern for shared stores might not be optimal and causes on average a 2.5 - way bank       
          conflict across all 4194304 shared store requests.This results in 6291456 bank conflicts,  which represent    
          60.00% of the overall 10485760 wavefronts for shared stores. Check the Source Counters section for            
          uncoalesced shared stores.                                                                                    

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %         9.79
    Issued Warp Per Scheduler                        0.10
    No Eligible                            %        90.21
    Active Warps Per Scheduler          warp         2.36
    Eligible Warps Per Scheduler        warp         0.10
    ---------------------------- ----------- ------------

    OPT   Est. Local Speedup: 10.9%                                                                                     
          Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 10.2 cycles. This might leave hardware resources underutilized and may lead to    
          less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of   
          2.36 active warps per scheduler, but only an average of 0.10 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, reduce the time the active warps are stalled by inspecting the top stall reasons on the Warp  
          State Statistics and Source Counters sections.                                                                

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        24.12
    Warp Cycles Per Executed Instruction           cycle        24.13
    Avg. Active Threads Per Warp                                17.84
    Avg. Not Predicated Off Threads Per Warp                    17.73
    ---------------------------------------- ----------- ------------

    OPT   Est. Speedup: 10.9%                                                                                           
          On average, each warp of this kernel spends 16.8 cycles being stalled waiting for a scoreboard dependency on  
          a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited     
          upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the        
          memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by        
          increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently     
          used data to shared memory. This stall type represents about 69.5% of the total average of 24.1 cycles        
          between issuing two instructions.                                                                             
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on         
          sampling data. The Kernel Profiling Guide                                                                     
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details    
          on each stall reason.                                                                                         
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 7.069%                                                                                          
          Instructions are executed in warps, which are groups of 32 threads. Optimal instruction throughput is         
          achieved if all 32 threads of a warp execute the same instruction. The chosen launch configuration, early     
          thread completion, and divergent flow control can significantly lower the number of active threads in a warp  
          per cycle. This kernel achieves an average of 17.8 threads being active per cycle. This is further reduced    
          to 17.7 threads per warp due to predication. The compiler may use predication to avoid an actual branch.      
          Instead, all instructions are scheduled, but a per-thread condition code or predicate controls which threads  
          execute the instructions. Try to avoid different execution paths within a warp when possible.                 

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst     46108.44
    Executed Instructions                           inst     19918848
    Avg. Issued Instructions Per Scheduler          inst     46120.86
    Issued Instructions                             inst     19924213
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                    32
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                   1024
    Registers Per Thread             register/thread              32
    Shared Memory Configuration Size           Kbyte          102.40
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block       Kbyte/block            2.05
    # SMs                                         SM             108
    Threads                                   thread           32768
    Uses Green Context                                             0
    Waves Per SM                                                0.30
    -------------------------------- --------------- ---------------

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           32
    Block Limit Registers                 block           64
    Block Limit Shared Mem                block           33
    Block Limit Warps                     block           64
    Theoretical Active Warps per SM        warp           32
    Theoretical Occupancy                     %           50
    Achieved Occupancy                        %        14.44
    Achieved Active Warps Per SM           warp         9.24
    ------------------------------- ----------- ------------

    OPT   Est. Speedup: 10.9%                                                                                           
          The difference between calculated theoretical (50.0%) and measured achieved occupancy (14.4%) can be the      
          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   
          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 10.9%                                                                                           
          The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 16. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that   
          can fit on the SM.                                                                                            

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle      6968.70
    Total DRAM Elapsed Cycles        cycle     28723200
    Average L1 Active Cycles         cycle    481635.81
    Total L1 Elapsed Cycles          cycle     54626370
    Average L2 Active Cycles         cycle    441316.81
    Total L2 Elapsed Cycles          cycle     38754800
    Average SM Active Cycles         cycle    481635.81
    Total SM Elapsed Cycles          cycle     54626370
    Average SMSP Active Cycles       cycle    471271.22
    Total SMSP Elapsed Cycles        cycle    218505480
    -------------------------- ----------- ------------

    OPT   Est. Speedup: 6.077%                                                                                          
          One or more SMSPs have a much higher number of active cycles than the average number of active cycles.        
          Maximum instance value is 6.52% above the average, while the minimum instance value is 4.35% below the        
          average.                                                                                                      

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.03
    Branch Instructions              inst       528384
    Branch Efficiency                   %        50.19
    Avg. Divergent Branches                     303.41
    ------------------------- ----------- ------------

    OPT   Est. Speedup: 80.31%                                                                                          
          This kernel has uncoalesced global accesses resulting in a total of 31457280 excessive sectors (88% of the    
          total 35684352 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source       
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional      
          information on reducing uncoalesced device memory accesses.                                                   
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 55.55%                                                                                          
          This kernel has uncoalesced shared accesses resulting in a total of 7340032 excessive wavefronts (58% of the  
          total 12582912 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.  
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -ab) has an example on optimizing shared memory accesses.                                                     

  hgemm_normal(const __half *, const __half *, float *, int, int, unsigned long, unsigned long, unsigned long) (128, 8, 1)x(16, 16, 1), Context 1, Stream 16, Device 0, CC 8.0
    Section: GPU Speed Of Light Throughput
    ----------------------- ----------- ------------
    Metric Name             Metric Unit Metric Value
    ----------------------- ----------- ------------
    DRAM Frequency                  Ghz         1.51
    SM Frequency                    Ghz         1.06
    Elapsed Cycles                cycle       367959
    Memory Throughput                 %        70.82
    DRAM Throughput                   %         1.33
    Duration                         us       345.70
    L1/TEX Cache Throughput           %        81.61
    L2 Cache Throughput               %        12.73
    SM Active Cycles              cycle    319106.51
    Compute (SM) Throughput           %        63.43
    ----------------------- ----------- ------------

    INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. 
          Check both the Compute Workload Analysis and Memory Workload Analysis sections.                               

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved 21% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         3.93
    Dropped Samples                sample            0
    Maximum Sampling Interval       cycle        40000
    # Pass Groups                                    4
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         2.84
    Executed Ipc Elapsed  inst/cycle         2.46
    Issue Slots Busy               %        71.00
    Issued Ipc Active     inst/cycle         2.84
    SM Busy                        %        71.00
    -------------------- ----------- ------------

    INF   FMA is the highest-utilized pipeline (27.5%) based on active cycles, taking into account the rates of its     
          different instructions. It executes 32-bit floating point (FADD, FMUL, FMAD, ...) and integer (IMUL, IMAD)    
          operations. It is well-utilized, but should not be a bottleneck.                                              

    Section: Memory Workload Analysis
    --------------------------- ----------- ------------
    Metric Name                 Metric Unit Metric Value
    --------------------------- ----------- ------------
    Memory Throughput               Gbyte/s        25.80
    Mem Busy                              %        70.82
    Max Bandwidth                         %        63.43
    L1/TEX Hit Rate                       %        19.31
    L2 Compression Success Rate           %            0
    L2 Compression Ratio                               0
    L2 Hit Rate                           %        91.01
    Mem Pipes Busy                        %        63.43
    --------------------------- ----------- ------------

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %        70.99
    Issued Warp Per Scheduler                        0.71
    No Eligible                            %        29.01
    Active Warps Per Scheduler          warp        12.01
    Eligible Warps Per Scheduler        warp         3.67
    ---------------------------- ----------- ------------

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        16.92
    Warp Cycles Per Executed Instruction           cycle        16.93
    Avg. Active Threads Per Warp                                   32
    Avg. Not Predicated Off Threads Per Warp                    31.65
    ---------------------------------------- ----------- ------------

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst    226417.78
    Executed Instructions                           inst     97812480
    Avg. Issued Instructions Per Scheduler          inst    226551.38
    Issued Instructions                             inst     97870195
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                   256
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                   1024
    Registers Per Thread             register/thread              30
    Shared Memory Configuration Size           Kbyte           32.77
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block       Kbyte/block            1.02
    # SMs                                         SM             108
    Threads                                   thread          262144
    Uses Green Context                                             0
    Waves Per SM                                                1.19
    -------------------------------- --------------- ---------------

    OPT   Est. Speedup: 50%                                                                                             
          A wave of thread blocks is defined as the maximum number of blocks that can be executed in parallel on the    
          target GPU. The number of blocks in a wave depends on the number of multiprocessors and the theoretical       
          occupancy of the kernel. This kernel launch results in 1 full waves and a partial wave of 159 thread blocks.  
          Under the assumption of a uniform execution duration of all thread blocks, the partial wave may account for   
          up to 50.0% of the total kernel runtime with a lower occupancy of 24.9%. Try launching a grid with no         
          partial wave. The overall impact of this tail effect also lessens with the number of full waves executed for  
          a grid. See the Hardware Model                                                                                
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      
          details on launch configurations.                                                                             

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           32
    Block Limit Registers                 block            8
    Block Limit Shared Mem                block           16
    Block Limit Warps                     block            8
    Theoretical Active Warps per SM        warp           64
    Theoretical Occupancy                     %          100
    Achieved Occupancy                        %        75.09
    Achieved Active Warps Per SM           warp        48.06
    ------------------------------- ----------- ------------

    OPT   Est. Local Speedup: 24.91%                                                                                    
          The difference between calculated theoretical (100.0%) and measured achieved occupancy (75.1%) can be the     
          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   
          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle      6966.70
    Total DRAM Elapsed Cycles        cycle     20904448
    Average L1 Active Cycles         cycle    319106.51
    Total L1 Elapsed Cycles          cycle     39715200
    Average L2 Active Cycles         cycle    320580.49
    Total L2 Elapsed Cycles          cycle     28178800
    Average SM Active Cycles         cycle    319106.51
    Total SM Elapsed Cycles          cycle     39715200
    Average SMSP Active Cycles       cycle    319114.02
    Total SMSP Elapsed Cycles        cycle    158860800
    -------------------------- ----------- ------------

    OPT   Est. Speedup: 10.92%                                                                                          
          One or more SMs have a much lower number of active cycles than the average number of active cycles. Maximum   
          instance value is 12.59% above the average, while the minimum instance value is 15.71% below the average.     
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 10.85%                                                                                          
          One or more SMSPs have a much lower number of active cycles than the average number of active cycles. Maximum 
          instance value is 12.50% above the average, while the minimum instance value is 15.91% below the average.     
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 10.92%                                                                                          
          One or more L1 Slices have a much lower number of active cycles than the average number of active cycles.     
          Maximum instance value is 12.59% above the average, while the minimum instance value is 15.71% below the      
          average.                                                                                                      

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.03
    Branch Instructions              inst      3162112
    Branch Efficiency                   %          100
    Avg. Divergent Branches                          0
    ------------------------- ----------- ------------

  hgemm_tensor_core(const __half *, const __half *, float *, int, int) (8, 128, 1)x(32, 1, 1), Context 1, Stream 17, Device 0, CC 8.0
    Section: GPU Speed Of Light Throughput
    ----------------------- ----------- ------------
    Metric Name             Metric Unit Metric Value
    ----------------------- ----------- ------------
    DRAM Frequency                  Ghz         1.51
    SM Frequency                    Ghz         1.06
    Elapsed Cycles                cycle       506220
    Memory Throughput                 %        89.03
    DRAM Throughput                   %         0.97
    Duration                         us       475.36
    L1/TEX Cache Throughput           %        93.55
    L2 Cache Throughput               %         6.70
    SM Active Cycles              cycle    481773.07
    Compute (SM) Throughput           %        15.84
    ----------------------- ----------- ------------

    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing L1 in the Memory Workload Analysis section.                                                

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved 0% of  
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         4.19
    Dropped Samples                sample            0
    Maximum Sampling Interval       cycle        20000
    # Pass Groups                                    4
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         0.38
    Executed Ipc Elapsed  inst/cycle         0.36
    Issue Slots Busy               %         9.57
    Issued Ipc Active     inst/cycle         0.38
    SM Busy                        %         9.57
    -------------------- ----------- ------------

    OPT   Est. Local Speedup: 94.98%                                                                                    
          All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps   
          per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.             

    Section: Memory Workload Analysis
    --------------------------- ----------- ------------
    Metric Name                 Metric Unit Metric Value
    --------------------------- ----------- ------------
    Memory Throughput               Gbyte/s        18.76
    Mem Busy                              %        89.03
    Max Bandwidth                         %        15.84
    L1/TEX Hit Rate                       %        93.64
    L2 Compression Success Rate           %            0
    L2 Compression Ratio                               0
    L2 Hit Rate                           %        86.93
    Mem Pipes Busy                        %        15.84
    --------------------------- ----------- ------------

    Section: Memory Workload Analysis Tables
    OPT   Est. Speedup: 78.55%                                                                                          
          The memory access pattern for global loads from L1TEX might not be optimal. On average, only 3.8 of the 32    
          bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between   
          threads. Check the Source Counters section for uncoalesced global loads.                                      
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 46.77%                                                                                          
          The memory access pattern for shared loads might not be optimal and causes on average a 8.0 - way bank        
          conflict across all 262144 shared load requests.This results in 1048576 bank conflicts,  which represent      
          50.00% of the overall 2097241 wavefronts for shared loads. Check the Source Counters section for uncoalesced  
          shared loads.                                                                                                 
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 56.13%                                                                                          
          The memory access pattern for shared stores might not be optimal and causes on average a 2.5 - way bank       
          conflict across all 4194304 shared store requests.This results in 6291456 bank conflicts,  which represent    
          60.00% of the overall 10485760 wavefronts for shared stores. Check the Source Counters section for            
          uncoalesced shared stores.                                                                                    

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %         9.79
    Issued Warp Per Scheduler                        0.10
    No Eligible                            %        90.21
    Active Warps Per Scheduler          warp         2.36
    Eligible Warps Per Scheduler        warp         0.10
    ---------------------------- ----------- ------------

    OPT   Est. Local Speedup: 10.97%                                                                                    
          Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 10.2 cycles. This might leave hardware resources underutilized and may lead to    
          less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of   
          2.36 active warps per scheduler, but only an average of 0.10 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, reduce the time the active warps are stalled by inspecting the top stall reasons on the Warp  
          State Statistics and Source Counters sections.                                                                

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        24.11
    Warp Cycles Per Executed Instruction           cycle        24.12
    Avg. Active Threads Per Warp                                17.84
    Avg. Not Predicated Off Threads Per Warp                    17.73
    ---------------------------------------- ----------- ------------

    OPT   Est. Speedup: 10.97%                                                                                          
          On average, each warp of this kernel spends 16.7 cycles being stalled waiting for a scoreboard dependency on  
          a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited     
          upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the        
          memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by        
          increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently     
          used data to shared memory. This stall type represents about 69.3% of the total average of 24.1 cycles        
          between issuing two instructions.                                                                             
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on         
          sampling data. The Kernel Profiling Guide                                                                     
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details    
          on each stall reason.                                                                                         
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 7.063%                                                                                          
          Instructions are executed in warps, which are groups of 32 threads. Optimal instruction throughput is         
          achieved if all 32 threads of a warp execute the same instruction. The chosen launch configuration, early     
          thread completion, and divergent flow control can significantly lower the number of active threads in a warp  
          per cycle. This kernel achieves an average of 17.8 threads being active per cycle. This is further reduced    
          to 17.7 threads per warp due to predication. The compiler may use predication to avoid an actual branch.      
          Instead, all instructions are scheduled, but a per-thread condition code or predicate controls which threads  
          execute the instructions. Try to avoid different execution paths within a warp when possible.                 

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst     46108.44
    Executed Instructions                           inst     19918848
    Avg. Issued Instructions Per Scheduler          inst     46120.78
    Issued Instructions                             inst     19924176
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                    32
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                   1024
    Registers Per Thread             register/thread              32
    Shared Memory Configuration Size           Kbyte          102.40
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block       Kbyte/block            2.05
    # SMs                                         SM             108
    Threads                                   thread           32768
    Uses Green Context                                             0
    Waves Per SM                                                0.30
    -------------------------------- --------------- ---------------

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           32
    Block Limit Registers                 block           64
    Block Limit Shared Mem                block           33
    Block Limit Warps                     block           64
    Theoretical Active Warps per SM        warp           32
    Theoretical Occupancy                     %           50
    Achieved Occupancy                        %        14.43
    Achieved Active Warps Per SM           warp         9.23
    ------------------------------- ----------- ------------

    OPT   Est. Speedup: 10.97%                                                                                          
          The difference between calculated theoretical (50.0%) and measured achieved occupancy (14.4%) can be the      
          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   
          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 10.97%                                                                                          
          The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 16. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that   
          can fit on the SM.                                                                                            

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle      6968.70
    Total DRAM Elapsed Cycles        cycle     28746752
    Average L1 Active Cycles         cycle    481773.07
    Total L1 Elapsed Cycles          cycle     54671176
    Average L2 Active Cycles         cycle    431132.19
    Total L2 Elapsed Cycles          cycle     38786560
    Average SM Active Cycles         cycle    481773.07
    Total SM Elapsed Cycles          cycle     54671176
    Average SMSP Active Cycles       cycle    471088.16
    Total SMSP Elapsed Cycles        cycle    218684704
    -------------------------- ----------- ------------

    OPT   Est. Speedup: 6.13%                                                                                           
          One or more SMSPs have a much higher number of active cycles than the average number of active cycles.        
          Maximum instance value is 6.59% above the average, while the minimum instance value is 4.28% below the        
          average.                                                                                                      

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.03
    Branch Instructions              inst       528384
    Branch Efficiency                   %        50.19
    Avg. Divergent Branches                     303.41
    ------------------------- ----------- ------------

    OPT   Est. Speedup: 78.39%                                                                                          
          This kernel has uncoalesced global accesses resulting in a total of 31457280 excessive sectors (88% of the    
          total 35684352 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source       
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional      
          information on reducing uncoalesced device memory accesses.                                                   
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 55.52%                                                                                          
          This kernel has uncoalesced shared accesses resulting in a total of 7340032 excessive wavefronts (58% of the  
          total 12582912 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.  
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -ab) has an example on optimizing shared memory accesses.                                                     

  hgemm_normal(const __half *, const __half *, float *, int, int, unsigned long, unsigned long, unsigned long) (128, 8, 1)x(16, 16, 1), Context 1, Stream 18, Device 0, CC 8.0
    Section: GPU Speed Of Light Throughput
    ----------------------- ----------- ------------
    Metric Name             Metric Unit Metric Value
    ----------------------- ----------- ------------
    DRAM Frequency                  Ghz         1.51
    SM Frequency                    Ghz         1.06
    Elapsed Cycles                cycle       368054
    Memory Throughput                 %        70.79
    DRAM Throughput                   %         1.33
    Duration                         us       345.82
    L1/TEX Cache Throughput           %        81.40
    L2 Cache Throughput               %        12.70
    SM Active Cycles              cycle    319914.90
    Compute (SM) Throughput           %        63.40
    ----------------------- ----------- ------------

    INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. 
          Check both the Compute Workload Analysis and Memory Workload Analysis sections.                               

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved 21% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         3.93
    Dropped Samples                sample            0
    Maximum Sampling Interval       cycle        40000
    # Pass Groups                                    4
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         2.83
    Executed Ipc Elapsed  inst/cycle         2.46
    Issue Slots Busy               %        70.82
    Issued Ipc Active     inst/cycle         2.83
    SM Busy                        %        70.82
    -------------------- ----------- ------------

    INF   FMA is the highest-utilized pipeline (27.4%) based on active cycles, taking into account the rates of its     
          different instructions. It executes 32-bit floating point (FADD, FMUL, FMAD, ...) and integer (IMUL, IMAD)    
          operations. It is well-utilized, but should not be a bottleneck.                                              

    Section: Memory Workload Analysis
    --------------------------- ----------- ------------
    Metric Name                 Metric Unit Metric Value
    --------------------------- ----------- ------------
    Memory Throughput               Gbyte/s        25.79
    Mem Busy                              %        70.79
    Max Bandwidth                         %        63.40
    L1/TEX Hit Rate                       %        19.26
    L2 Compression Success Rate           %            0
    L2 Compression Ratio                               0
    L2 Hit Rate                           %        91.44
    Mem Pipes Busy                        %        63.40
    --------------------------- ----------- ------------

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %        70.95
    Issued Warp Per Scheduler                        0.71
    No Eligible                            %        29.05
    Active Warps Per Scheduler          warp        11.98
    Eligible Warps Per Scheduler        warp         3.67
    ---------------------------- ----------- ------------

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        16.89
    Warp Cycles Per Executed Instruction           cycle        16.90
    Avg. Active Threads Per Warp                                   32
    Avg. Not Predicated Off Threads Per Warp                    31.65
    ---------------------------------------- ----------- ------------

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst    226417.78
    Executed Instructions                           inst     97812480
    Avg. Issued Instructions Per Scheduler          inst    226549.48
    Issued Instructions                             inst     97869374
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                   256
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                   1024
    Registers Per Thread             register/thread              30
    Shared Memory Configuration Size           Kbyte           32.77
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block       Kbyte/block            1.02
    # SMs                                         SM             108
    Threads                                   thread          262144
    Uses Green Context                                             0
    Waves Per SM                                                1.19
    -------------------------------- --------------- ---------------

    OPT   Est. Speedup: 50%                                                                                             
          A wave of thread blocks is defined as the maximum number of blocks that can be executed in parallel on the    
          target GPU. The number of blocks in a wave depends on the number of multiprocessors and the theoretical       
          occupancy of the kernel. This kernel launch results in 1 full waves and a partial wave of 159 thread blocks.  
          Under the assumption of a uniform execution duration of all thread blocks, the partial wave may account for   
          up to 50.0% of the total kernel runtime with a lower occupancy of 25.2%. Try launching a grid with no         
          partial wave. The overall impact of this tail effect also lessens with the number of full waves executed for  
          a grid. See the Hardware Model                                                                                
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      
          details on launch configurations.                                                                             

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           32
    Block Limit Registers                 block            8
    Block Limit Shared Mem                block           16
    Block Limit Warps                     block            8
    Theoretical Active Warps per SM        warp           64
    Theoretical Occupancy                     %          100
    Achieved Occupancy                        %        74.76
    Achieved Active Warps Per SM           warp        47.85
    ------------------------------- ----------- ------------

    OPT   Est. Local Speedup: 25.24%                                                                                    
          The difference between calculated theoretical (100.0%) and measured achieved occupancy (74.8%) can be the     
          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   
          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle      6966.70
    Total DRAM Elapsed Cycles        cycle     20912640
    Average L1 Active Cycles         cycle    319914.90
    Total L1 Elapsed Cycles          cycle     39729874
    Average L2 Active Cycles         cycle    321380.15
    Total L2 Elapsed Cycles          cycle     28186400
    Average SM Active Cycles         cycle    319914.90
    Total SM Elapsed Cycles          cycle     39729874
    Average SMSP Active Cycles       cycle    319318.17
    Total SMSP Elapsed Cycles        cycle    158919496
    -------------------------- ----------- ------------

    OPT   Est. Speedup: 10.86%                                                                                          
          One or more SMs have a much lower number of active cycles than the average number of active cycles. Maximum   
          instance value is 12.49% above the average, while the minimum instance value is 15.92% below the average.     
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 10.87%                                                                                          
          One or more SMSPs have a much lower number of active cycles than the average number of active cycles. Maximum 
          instance value is 12.53% above the average, while the minimum instance value is 16.09% below the average.     
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 10.86%                                                                                          
          One or more L1 Slices have a much lower number of active cycles than the average number of active cycles.     
          Maximum instance value is 12.49% above the average, while the minimum instance value is 15.92% below the      
          average.                                                                                                      

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.03
    Branch Instructions              inst      3162112
    Branch Efficiency                   %          100
    Avg. Divergent Branches                          0
    ------------------------- ----------- ------------

  hgemm_tensor_core(const __half *, const __half *, float *, int, int) (8, 128, 1)x(32, 1, 1), Context 1, Stream 19, Device 0, CC 8.0
    Section: GPU Speed Of Light Throughput
    ----------------------- ----------- ------------
    Metric Name             Metric Unit Metric Value
    ----------------------- ----------- ------------
    DRAM Frequency                  Ghz         1.51
    SM Frequency                    Ghz         1.06
    Elapsed Cycles                cycle       506505
    Memory Throughput                 %        88.98
    DRAM Throughput                   %         0.97
    Duration                         us       475.62
    L1/TEX Cache Throughput           %        93.53
    L2 Cache Throughput               %         6.76
    SM Active Cycles              cycle    481847.04
    Compute (SM) Throughput           %        15.83
    ----------------------- ----------- ------------

    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing L1 in the Memory Workload Analysis section.                                                

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved 0% of  
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         4.19
    Dropped Samples                sample            0
    Maximum Sampling Interval       cycle        20000
    # Pass Groups                                    4
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         0.38
    Executed Ipc Elapsed  inst/cycle         0.36
    Issue Slots Busy               %         9.57
    Issued Ipc Active     inst/cycle         0.38
    SM Busy                        %         9.57
    -------------------- ----------- ------------

    OPT   Est. Local Speedup: 94.98%                                                                                    
          All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps   
          per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.             

    Section: Memory Workload Analysis
    --------------------------- ----------- ------------
    Metric Name                 Metric Unit Metric Value
    --------------------------- ----------- ------------
    Memory Throughput               Gbyte/s        18.75
    Mem Busy                              %        88.98
    Max Bandwidth                         %        15.83
    L1/TEX Hit Rate                       %        93.12
    L2 Compression Success Rate           %            0
    L2 Compression Ratio                               0
    L2 Hit Rate                           %        84.99
    Mem Pipes Busy                        %        15.83
    --------------------------- ----------- ------------

    Section: Memory Workload Analysis Tables
    OPT   Est. Speedup: 78.51%                                                                                          
          The memory access pattern for global loads from L1TEX might not be optimal. On average, only 3.8 of the 32    
          bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between   
          threads. Check the Source Counters section for uncoalesced global loads.                                      
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 46.76%                                                                                          
          The memory access pattern for shared loads might not be optimal and causes on average a 8.0 - way bank        
          conflict across all 262144 shared load requests.This results in 1048576 bank conflicts,  which represent      
          50.00% of the overall 2097270 wavefronts for shared loads. Check the Source Counters section for uncoalesced  
          shared loads.                                                                                                 
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 56.12%                                                                                          
          The memory access pattern for shared stores might not be optimal and causes on average a 2.5 - way bank       
          conflict across all 4194304 shared store requests.This results in 6291456 bank conflicts,  which represent    
          60.00% of the overall 10485760 wavefronts for shared stores. Check the Source Counters section for            
          uncoalesced shared stores.                                                                                    

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %         9.77
    Issued Warp Per Scheduler                        0.10
    No Eligible                            %        90.23
    Active Warps Per Scheduler          warp         2.36
    Eligible Warps Per Scheduler        warp         0.10
    ---------------------------- ----------- ------------

    OPT   Est. Local Speedup: 11.02%                                                                                    
          Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 10.2 cycles. This might leave hardware resources underutilized and may lead to    
          less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of   
          2.36 active warps per scheduler, but only an average of 0.10 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, reduce the time the active warps are stalled by inspecting the top stall reasons on the Warp  
          State Statistics and Source Counters sections.                                                                

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        24.14
    Warp Cycles Per Executed Instruction           cycle        24.14
    Avg. Active Threads Per Warp                                17.84
    Avg. Not Predicated Off Threads Per Warp                    17.73
    ---------------------------------------- ----------- ------------

    OPT   Est. Speedup: 11.02%                                                                                          
          On average, each warp of this kernel spends 16.8 cycles being stalled waiting for a scoreboard dependency on  
          a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited     
          upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the        
          memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by        
          increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently     
          used data to shared memory. This stall type represents about 69.7% of the total average of 24.1 cycles        
          between issuing two instructions.                                                                             
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on         
          sampling data. The Kernel Profiling Guide                                                                     
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details    
          on each stall reason.                                                                                         
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 7.059%                                                                                          
          Instructions are executed in warps, which are groups of 32 threads. Optimal instruction throughput is         
          achieved if all 32 threads of a warp execute the same instruction. The chosen launch configuration, early     
          thread completion, and divergent flow control can significantly lower the number of active threads in a warp  
          per cycle. This kernel achieves an average of 17.8 threads being active per cycle. This is further reduced    
          to 17.7 threads per warp due to predication. The compiler may use predication to avoid an actual branch.      
          Instead, all instructions are scheduled, but a per-thread condition code or predicate controls which threads  
          execute the instructions. Try to avoid different execution paths within a warp when possible.                 

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst     46108.44
    Executed Instructions                           inst     19918848
    Avg. Issued Instructions Per Scheduler          inst     46120.81
    Issued Instructions                             inst     19924188
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                    32
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                   1024
    Registers Per Thread             register/thread              32
    Shared Memory Configuration Size           Kbyte          102.40
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block       Kbyte/block            2.05
    # SMs                                         SM             108
    Threads                                   thread           32768
    Uses Green Context                                             0
    Waves Per SM                                                0.30
    -------------------------------- --------------- ---------------

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           32
    Block Limit Registers                 block           64
    Block Limit Shared Mem                block           33
    Block Limit Warps                     block           64
    Theoretical Active Warps per SM        warp           32
    Theoretical Occupancy                     %           50
    Achieved Occupancy                        %        14.44
    Achieved Active Warps Per SM           warp         9.24
    ------------------------------- ----------- ------------

    OPT   Est. Speedup: 11.02%                                                                                          
          The difference between calculated theoretical (50.0%) and measured achieved occupancy (14.4%) can be the      
          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   
          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 11.02%                                                                                          
          The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 16. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that   
          can fit on the SM.                                                                                            

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle      6968.70
    Total DRAM Elapsed Cycles        cycle     28763648
    Average L1 Active Cycles         cycle    481847.04
    Total L1 Elapsed Cycles          cycle     54702116
    Average L2 Active Cycles         cycle    437938.01
    Total L2 Elapsed Cycles          cycle     38808400
    Average SM Active Cycles         cycle    481847.04
    Total SM Elapsed Cycles          cycle     54702116
    Average SMSP Active Cycles       cycle    471898.58
    Total SMSP Elapsed Cycles        cycle    218808464
    -------------------------- ----------- ------------

    OPT   Est. Speedup: 5.852%                                                                                          
          One or more SMSPs have a much higher number of active cycles than the average number of active cycles.        
          Maximum instance value is 6.28% above the average, while the minimum instance value is 4.37% below the        
          average.                                                                                                      

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.03
    Branch Instructions              inst       528384
    Branch Efficiency                   %        50.19
    Avg. Divergent Branches                     303.41
    ------------------------- ----------- ------------

    OPT   Est. Speedup: 79.58%                                                                                          
          This kernel has uncoalesced global accesses resulting in a total of 31457280 excessive sectors (88% of the    
          total 35684352 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source       
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional      
          information on reducing uncoalesced device memory accesses.                                                   
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 55.49%                                                                                          
          This kernel has uncoalesced shared accesses resulting in a total of 7340032 excessive wavefronts (58% of the  
          total 12582912 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.  
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -ab) has an example on optimizing shared memory accesses.                                                     

  hgemm_normal(const __half *, const __half *, float *, int, int, unsigned long, unsigned long, unsigned long) (128, 8, 1)x(16, 16, 1), Context 1, Stream 20, Device 0, CC 8.0
    Section: GPU Speed Of Light Throughput
    ----------------------- ----------- ------------
    Metric Name             Metric Unit Metric Value
    ----------------------- ----------- ------------
    DRAM Frequency                  Ghz         1.51
    SM Frequency                    Ghz         1.06
    Elapsed Cycles                cycle       369548
    Memory Throughput                 %        70.50
    DRAM Throughput                   %         1.33
    Duration                         us       347.20
    L1/TEX Cache Throughput           %        81.45
    L2 Cache Throughput               %        12.66
    SM Active Cycles              cycle    319706.09
    Compute (SM) Throughput           %        63.15
    ----------------------- ----------- ------------

    INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. 
          Check both the Compute Workload Analysis and Memory Workload Analysis sections.                               

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved 21% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         3.93
    Dropped Samples                sample            0
    Maximum Sampling Interval       cycle        40000
    # Pass Groups                                    4
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         2.83
    Executed Ipc Elapsed  inst/cycle         2.45
    Issue Slots Busy               %        70.86
    Issued Ipc Active     inst/cycle         2.83
    SM Busy                        %        70.86
    -------------------- ----------- ------------

    INF   FMA is the highest-utilized pipeline (27.4%) based on active cycles, taking into account the rates of its     
          different instructions. It executes 32-bit floating point (FADD, FMUL, FMAD, ...) and integer (IMUL, IMAD)    
          operations. It is well-utilized, but should not be a bottleneck.                                              

    Section: Memory Workload Analysis
    --------------------------- ----------- ------------
    Metric Name                 Metric Unit Metric Value
    --------------------------- ----------- ------------
    Memory Throughput               Gbyte/s        25.68
    Mem Busy                              %        70.50
    Max Bandwidth                         %        63.15
    L1/TEX Hit Rate                       %        18.89
    L2 Compression Success Rate           %            0
    L2 Compression Ratio                               0
    L2 Hit Rate                           %        91.65
    Mem Pipes Busy                        %        63.15
    --------------------------- ----------- ------------

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %        71.14
    Issued Warp Per Scheduler                        0.71
    No Eligible                            %        28.86
    Active Warps Per Scheduler          warp        12.02
    Eligible Warps Per Scheduler        warp         3.68
    ---------------------------- ----------- ------------

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        16.90
    Warp Cycles Per Executed Instruction           cycle        16.91
    Avg. Active Threads Per Warp                                   32
    Avg. Not Predicated Off Threads Per Warp                    31.65
    ---------------------------------------- ----------- ------------

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst    226417.78
    Executed Instructions                           inst     97812480
    Avg. Issued Instructions Per Scheduler          inst    226550.52
    Issued Instructions                             inst     97869824
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                   256
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                   1024
    Registers Per Thread             register/thread              30
    Shared Memory Configuration Size           Kbyte           32.77
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block       Kbyte/block            1.02
    # SMs                                         SM             108
    Threads                                   thread          262144
    Uses Green Context                                             0
    Waves Per SM                                                1.19
    -------------------------------- --------------- ---------------

    OPT   Est. Speedup: 50%                                                                                             
          A wave of thread blocks is defined as the maximum number of blocks that can be executed in parallel on the    
          target GPU. The number of blocks in a wave depends on the number of multiprocessors and the theoretical       
          occupancy of the kernel. This kernel launch results in 1 full waves and a partial wave of 159 thread blocks.  
          Under the assumption of a uniform execution duration of all thread blocks, the partial wave may account for   
          up to 50.0% of the total kernel runtime with a lower occupancy of 25.1%. Try launching a grid with no         
          partial wave. The overall impact of this tail effect also lessens with the number of full waves executed for  
          a grid. See the Hardware Model                                                                                
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      
          details on launch configurations.                                                                             

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           32
    Block Limit Registers                 block            8
    Block Limit Shared Mem                block           16
    Block Limit Warps                     block            8
    Theoretical Active Warps per SM        warp           64
    Theoretical Occupancy                     %          100
    Achieved Occupancy                        %        74.86
    Achieved Active Warps Per SM           warp        47.91
    ------------------------------- ----------- ------------

    OPT   Est. Local Speedup: 25.14%                                                                                    
          The difference between calculated theoretical (100.0%) and measured achieved occupancy (74.9%) can be the     
          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   
          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle      6966.70
    Total DRAM Elapsed Cycles        cycle     20996608
    Average L1 Active Cycles         cycle    319706.09
    Total L1 Elapsed Cycles          cycle     39889638
    Average L2 Active Cycles         cycle    320880.67
    Total L2 Elapsed Cycles          cycle     28299280
    Average SM Active Cycles         cycle    319706.09
    Total SM Elapsed Cycles          cycle     39889638
    Average SMSP Active Cycles       cycle    318469.80
    Total SMSP Elapsed Cycles        cycle    159558552
    -------------------------- ----------- ------------

    OPT   Est. Speedup: 11.15%                                                                                          
          One or more SMs have a much lower number of active cycles than the average number of active cycles. Maximum   
          instance value is 12.88% above the average, while the minimum instance value is 16.19% below the average.     
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 10.96%                                                                                          
          One or more SMSPs have a much lower number of active cycles than the average number of active cycles. Maximum 
          instance value is 12.71% above the average, while the minimum instance value is 15.59% below the average.     
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 11.15%                                                                                          
          One or more L1 Slices have a much lower number of active cycles than the average number of active cycles.     
          Maximum instance value is 12.88% above the average, while the minimum instance value is 16.19% below the      
          average.                                                                                                      

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.03
    Branch Instructions              inst      3162112
    Branch Efficiency                   %          100
    Avg. Divergent Branches                          0
    ------------------------- ----------- ------------

  hgemm_tensor_core(const __half *, const __half *, float *, int, int) (8, 128, 1)x(32, 1, 1), Context 1, Stream 21, Device 0, CC 8.0
    Section: GPU Speed Of Light Throughput
    ----------------------- ----------- ------------
    Metric Name             Metric Unit Metric Value
    ----------------------- ----------- ------------
    DRAM Frequency                  Ghz         1.51
    SM Frequency                    Ghz         1.06
    Elapsed Cycles                cycle       505842
    Memory Throughput                 %        89.10
    DRAM Throughput                   %         0.97
    Duration                         us       475.01
    L1/TEX Cache Throughput           %        93.48
    L2 Cache Throughput               %         6.43
    SM Active Cycles              cycle    482106.43
    Compute (SM) Throughput           %        15.85
    ----------------------- ----------- ------------

    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing L1 in the Memory Workload Analysis section.                                                

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved 0% of  
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         4.19
    Dropped Samples                sample            0
    Maximum Sampling Interval       cycle        20000
    # Pass Groups                                    4
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         0.38
    Executed Ipc Elapsed  inst/cycle         0.36
    Issue Slots Busy               %         9.57
    Issued Ipc Active     inst/cycle         0.38
    SM Busy                        %         9.57
    -------------------- ----------- ------------

    OPT   Est. Local Speedup: 94.98%                                                                                    
          All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps   
          per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.             

    Section: Memory Workload Analysis
    --------------------------- ----------- ------------
    Metric Name                 Metric Unit Metric Value
    --------------------------- ----------- ------------
    Memory Throughput               Gbyte/s        18.78
    Mem Busy                              %        89.10
    Max Bandwidth                         %        15.85
    L1/TEX Hit Rate                       %        93.58
    L2 Compression Success Rate           %            0
    L2 Compression Ratio                               0
    L2 Hit Rate                           %        94.56
    Mem Pipes Busy                        %        15.85
    --------------------------- ----------- ------------

    Section: Memory Workload Analysis Tables
    OPT   Est. Speedup: 78.61%                                                                                          
          The memory access pattern for global loads from L1TEX might not be optimal. On average, only 3.8 of the 32    
          bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between   
          threads. Check the Source Counters section for uncoalesced global loads.                                      
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 46.74%                                                                                          
          The memory access pattern for shared loads might not be optimal and causes on average a 8.0 - way bank        
          conflict across all 262144 shared load requests.This results in 1048576 bank conflicts,  which represent      
          50.00% of the overall 2097252 wavefronts for shared loads. Check the Source Counters section for uncoalesced  
          shared loads.                                                                                                 
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 56.09%                                                                                          
          The memory access pattern for shared stores might not be optimal and causes on average a 2.5 - way bank       
          conflict across all 4194304 shared store requests.This results in 6291456 bank conflicts,  which represent    
          60.00% of the overall 10485760 wavefronts for shared stores. Check the Source Counters section for            
          uncoalesced shared stores.                                                                                    

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %         9.76
    Issued Warp Per Scheduler                        0.10
    No Eligible                            %        90.24
    Active Warps Per Scheduler          warp         2.36
    Eligible Warps Per Scheduler        warp         0.10
    ---------------------------- ----------- ------------

    OPT   Est. Local Speedup: 10.9%                                                                                     
          Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 10.2 cycles. This might leave hardware resources underutilized and may lead to    
          less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of   
          2.36 active warps per scheduler, but only an average of 0.10 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, reduce the time the active warps are stalled by inspecting the top stall reasons on the Warp  
          State Statistics and Source Counters sections.                                                                

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        24.16
    Warp Cycles Per Executed Instruction           cycle        24.17
    Avg. Active Threads Per Warp                                17.84
    Avg. Not Predicated Off Threads Per Warp                    17.73
    ---------------------------------------- ----------- ------------

    OPT   Est. Speedup: 10.9%                                                                                           
          On average, each warp of this kernel spends 16.8 cycles being stalled waiting for a scoreboard dependency on  
          a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited     
          upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the        
          memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by        
          increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently     
          used data to shared memory. This stall type represents about 69.5% of the total average of 24.2 cycles        
          between issuing two instructions.                                                                             
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on         
          sampling data. The Kernel Profiling Guide                                                                     
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details    
          on each stall reason.                                                                                         
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 7.068%                                                                                          
          Instructions are executed in warps, which are groups of 32 threads. Optimal instruction throughput is         
          achieved if all 32 threads of a warp execute the same instruction. The chosen launch configuration, early     
          thread completion, and divergent flow control can significantly lower the number of active threads in a warp  
          per cycle. This kernel achieves an average of 17.8 threads being active per cycle. This is further reduced    
          to 17.7 threads per warp due to predication. The compiler may use predication to avoid an actual branch.      
          Instead, all instructions are scheduled, but a per-thread condition code or predicate controls which threads  
          execute the instructions. Try to avoid different execution paths within a warp when possible.                 

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst     46108.44
    Executed Instructions                           inst     19918848
    Avg. Issued Instructions Per Scheduler          inst     46120.81
    Issued Instructions                             inst     19924191
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                    32
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                   1024
    Registers Per Thread             register/thread              32
    Shared Memory Configuration Size           Kbyte          102.40
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block       Kbyte/block            2.05
    # SMs                                         SM             108
    Threads                                   thread           32768
    Uses Green Context                                             0
    Waves Per SM                                                0.30
    -------------------------------- --------------- ---------------

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           32
    Block Limit Registers                 block           64
    Block Limit Shared Mem                block           33
    Block Limit Warps                     block           64
    Theoretical Active Warps per SM        warp           32
    Theoretical Occupancy                     %           50
    Achieved Occupancy                        %        14.45
    Achieved Active Warps Per SM           warp         9.25
    ------------------------------- ----------- ------------

    OPT   Est. Speedup: 10.9%                                                                                           
          The difference between calculated theoretical (50.0%) and measured achieved occupancy (14.4%) can be the      
          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   
          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 10.9%                                                                                           
          The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 16. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that   
          can fit on the SM.                                                                                            

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle      6968.70
    Total DRAM Elapsed Cycles        cycle     28726272
    Average L1 Active Cycles         cycle    482106.43
    Total L1 Elapsed Cycles          cycle     54629862
    Average L2 Active Cycles         cycle    435287.74
    Total L2 Elapsed Cycles          cycle     38757520
    Average SM Active Cycles         cycle    482106.43
    Total SM Elapsed Cycles          cycle     54629862
    Average SMSP Active Cycles       cycle    472314.25
    Total SMSP Elapsed Cycles        cycle    218519448
    -------------------------- ----------- ------------

    OPT   Est. Speedup: 5.986%                                                                                          
          One or more SMSPs have a much higher number of active cycles than the average number of active cycles.        
          Maximum instance value is 6.41% above the average, while the minimum instance value is 4.29% below the        
          average.                                                                                                      

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.03
    Branch Instructions              inst       528384
    Branch Efficiency                   %        50.19
    Avg. Divergent Branches                     303.41
    ------------------------- ----------- ------------

    OPT   Est. Speedup: 79.21%                                                                                          
          This kernel has uncoalesced global accesses resulting in a total of 31457280 excessive sectors (88% of the    
          total 35684352 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source       
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional      
          information on reducing uncoalesced device memory accesses.                                                   
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 55.6%                                                                                           
          This kernel has uncoalesced shared accesses resulting in a total of 7340032 excessive wavefronts (58% of the  
          total 12582912 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.  
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -ab) has an example on optimizing shared memory accesses.                                                     

