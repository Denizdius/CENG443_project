==PROF== Connected to process 4014 (/home/dilaygulhan/cuda_code/CENG443_project/src/hgemm_stream_sm86)
==PROF== Profiling "hgemm_normal" - 0: 0%....50%....100% - 38 passes
==PROF== Profiling "hgemm_tensor_core" - 1: 0%....50%....100% - 38 passes
==PROF== Profiling "hgemm_normal" - 2: 0%....50%....100% - 37 passes
==PROF== Profiling "hgemm_tensor_core" - 3: 0%....50%....100% - 38 passes
==PROF== Profiling "hgemm_normal" - 4: 0%....50%....100% - 38 passes
==PROF== Profiling "hgemm_tensor_core" - 5: 0%....50%....100% - 37 passes
==PROF== Profiling "hgemm_normal" - 6: 0%....50%....100% - 38 passes
==PROF== Profiling "hgemm_tensor_core" - 7: 0%....50%....100% - 38 passes
==PROF== Profiling "hgemm_normal" - 8: 0%....50%....100% - 38 passes
==PROF== Profiling "hgemm_tensor_core" - 9: 0%....50%....100% - 37 passes
==PROF== Profiling "hgemm_normal" - 10: 0%....50%....100% - 38 passes
==PROF== Profiling "hgemm_tensor_core" - 11: 0%....50%....100% - 38 passes
==PROF== Profiling "hgemm_normal" - 12: 0%....50%....100% - 38 passes
==PROF== Profiling "hgemm_tensor_core" - 13: 0%....50%....100% - 38 passes
==PROF== Profiling "hgemm_normal" - 14: 0%....50%....100% - 37 passes
==PROF== Profiling "hgemm_tensor_core" - 15: 0%....50%....100% - 38 passes

=== Concurrent HGEMM Performance (Mixed Tensor + Normal) ===

=== Performance Results ===
Matrix size (Normal): 2048x2048
Matrix size (Tensor): 8192x8192
Number of streams: 2
Mixed version (concurrent tensor + normal) time: 39688.996 ms

=== Result Verification ===
C[0][0] = 8192
C[4096][0] = 8192
Expected value = 8192
==PROF== Disconnected from process 4014
[4014] hgemm_stream_sm86@127.0.0.1
  hgemm_normal(const __half *, const __half *, float *, int, int) (128, 16, 1)x(16, 16, 1), Context 1, Stream 13, Device 0, CC 8.6
    Section: GPU Speed Of Light Throughput
    ----------------------- ------------- ------------
    Metric Name               Metric Unit Metric Value
    ----------------------- ------------- ------------
    DRAM Frequency          cycle/nsecond         6.99
    SM Frequency            cycle/nsecond         1.21
    Elapsed Cycles                  cycle      3510032
    Memory Throughput                   %        95.60
    DRAM Throughput                     %        10.61
    Duration                      msecond         2.89
    L1/TEX Cache Throughput             %        97.23
    L2 Cache Throughput                 %         7.91
    SM Active Cycles                cycle   3453410.35
    Compute (SM) Throughput             %        95.60
    ----------------------- ------------- ------------

    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing workloads in the Compute Workload Analysis section.                                        

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved 6% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         2.42
    Dropped Samples                sample            0
    Maximum Sampling Interval     msecond         1.02
    # Pass Groups                                    2
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         1.42
    Executed Ipc Elapsed  inst/cycle         1.39
    Issue Slots Busy               %        35.38
    Issued Ipc Active     inst/cycle         1.42
    SM Busy                        %        35.38
    -------------------- ----------- ------------

    INF   FMA is the highest-utilized pipeline (20.5%) based on active cycles, taking into account the rates of its     
          different instructions. It executes 32-bit floating point (FADD, FMUL, FMAD, ...) and integer (IMUL, IMAD)    
          operations. It is well-utilized, but should not be a bottleneck.                                              

    Section: Memory Workload Analysis
    --------------------------- ------------ ------------
    Metric Name                  Metric Unit Metric Value
    --------------------------- ------------ ------------
    Memory Throughput           Gbyte/second        47.49
    Mem Busy                               %        71.72
    Max Bandwidth                          %        95.60
    L1/TEX Hit Rate                        %        91.74
    L2 Compression Success Rate            %            0
    L2 Compression Ratio                                0
    L2 Hit Rate                            %        49.88
    Mem Pipes Busy                         %        95.60
    --------------------------- ------------ ------------

    Section: Memory Workload Analysis Tables
    OPT   Est. Speedup: 59.75%                                                                                          
          The memory access pattern for global loads from L1TEX might not be optimal. On average, only 12.0 of the 32   
          bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between   
          threads. Check the Source Counters section for uncoalesced global loads.                                      

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %        35.38
    Issued Warp Per Scheduler                        0.35
    No Eligible                            %        64.62
    Active Warps Per Scheduler          warp        11.48
    Eligible Warps Per Scheduler        warp         1.83
    ---------------------------- ----------- ------------

    OPT   Est. Local Speedup: 4.401%                                                                                    
          Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 2.8 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of   
          11.48 active warps per scheduler, but only an average of 1.83 warps were eligible per cycle. Eligible warps   
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        32.44
    Warp Cycles Per Executed Instruction           cycle        32.44
    Avg. Active Threads Per Warp                                   32
    Avg. Not Predicated Off Threads Per Warp                    31.99
    ---------------------------------------- ----------- ------------

    OPT   Est. Speedup: 4.401%                                                                                          
          On average, each warp of this kernel spends 17.6 cycles being stalled waiting for the L1 instruction queue    
          for local and global (LG) memory operations to be not full. Typically, this stall occurs only when executing  
          local or global memory instructions extremely frequently. Avoid redundant global memory accesses. Try to      
          avoid using thread-local memory by checking if dynamically indexed arrays are declared in local scope, of if  
          the kernel has excessive register pressure causing by spills. If applicable, consider combining multiple      
          lower-width memory operations into fewer wider memory operations and try interleaving memory operations and   
          math instructions. This stall type represents about 54.2% of the total average of 32.4 cycles between         
          issuing two instructions.                                                                                     
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on         
          sampling data. The Kernel Profiling Guide                                                                     
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details    
          on each stall reason.                                                                                         

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst   1221836.80
    Executed Instructions                           inst    195493888
    Avg. Issued Instructions Per Scheduler          inst   1221925.29
    Issued Instructions                             inst    195508046
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                   256
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                   2048
    Registers Per Thread             register/thread              39
    Shared Memory Configuration Size           Kbyte            8.19
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block        byte/block               0
    # SMs                                         SM              40
    Threads                                   thread          524288
    Uses Green Context                                             0
    Waves Per SM                                                8.53
    -------------------------------- --------------- ---------------

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           16
    Block Limit Registers                 block            6
    Block Limit Shared Mem                block            8
    Block Limit Warps                     block            6
    Theoretical Active Warps per SM        warp           48
    Theoretical Occupancy                     %          100
    Achieved Occupancy                        %        95.67
    Achieved Active Warps Per SM           warp        45.92
    ------------------------------- ----------- ------------

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle      2143556
    Total DRAM Elapsed Cycles        cycle    161641472
    Average L1 Active Cycles         cycle   3453410.35
    Total L1 Elapsed Cycles          cycle    140499944
    Average L2 Active Cycles         cycle   3254766.06
    Total L2 Elapsed Cycles          cycle    105388224
    Average SM Active Cycles         cycle   3453410.35
    Total SM Elapsed Cycles          cycle    140499944
    Average SMSP Active Cycles       cycle   3453533.80
    Total SMSP Elapsed Cycles        cycle    561999776
    -------------------------- ----------- ------------

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.01
    Branch Instructions              inst      2129920
    Branch Efficiency                   %          100
    Avg. Divergent Branches                          0
    ------------------------- ----------- ------------

  hgemm_tensor_core(const __half *, const __half *, float *, int, int) (64, 512, 1)x(32, 1, 1), Context 1, Stream 14, Device 0, CC 8.6
    Section: GPU Speed Of Light Throughput
    ----------------------- ------------- ------------
    Metric Name               Metric Unit Metric Value
    ----------------------- ------------- ------------
    DRAM Frequency          cycle/nsecond         6.99
    SM Frequency            cycle/nsecond         1.21
    Elapsed Cycles                  cycle     29015949
    Memory Throughput                   %        98.17
    DRAM Throughput                     %         9.87
    Duration                      msecond        23.88
    L1/TEX Cache Throughput             %        99.48
    L2 Cache Throughput                 %        39.33
    SM Active Cycles                cycle  28756283.52
    Compute (SM) Throughput             %        34.76
    ----------------------- ------------- ------------

    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing L1 in the Memory Workload Analysis section.                                                

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved 0% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         3.41
    Dropped Samples                sample            0
    Maximum Sampling Interval     msecond         1.02
    # Pass Groups                                    2
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         0.42
    Executed Ipc Elapsed  inst/cycle         0.41
    Issue Slots Busy               %        10.46
    Issued Ipc Active     inst/cycle         0.42
    SM Busy                        %        11.74
    -------------------- ----------- ------------

    OPT   Est. Local Speedup: 88.33%                                                                                    
          All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps   
          per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.             

    Section: Memory Workload Analysis
    --------------------------- ------------ ------------
    Metric Name                  Metric Unit Metric Value
    --------------------------- ------------ ------------
    Memory Throughput           Gbyte/second        44.19
    Mem Busy                               %        98.17
    Max Bandwidth                          %        39.33
    L1/TEX Hit Rate                        %        67.97
    L2 Compression Success Rate            %            0
    L2 Compression Ratio                                0
    L2 Hit Rate                            %        91.44
    Mem Pipes Busy                         %        34.76
    --------------------------- ------------ ------------

    Section: Memory Workload Analysis Tables
    OPT   Est. Speedup: 49.09%                                                                                          
          The memory access pattern for global loads from L1TEX might not be optimal. On average, only 16.0 of the 32   
          bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between   
          threads. Check the Source Counters section for uncoalesced global loads.                                      

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %        10.47
    Issued Warp Per Scheduler                        0.10
    No Eligible                            %        89.53
    Active Warps Per Scheduler          warp         3.99
    Eligible Warps Per Scheduler        warp         0.11
    ---------------------------- ----------- ------------

    OPT   Est. Local Speedup: 1.827%                                                                                    
          Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 9.6 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of   
          3.99 active warps per scheduler, but only an average of 0.11 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        38.09
    Warp Cycles Per Executed Instruction           cycle        38.09
    Avg. Active Threads Per Warp                                   32
    Avg. Not Predicated Off Threads Per Warp                    31.93
    ---------------------------------------- ----------- ------------

    OPT   Est. Speedup: 1.827%                                                                                          
          On average, each warp of this kernel spends 33.8 cycles being stalled waiting for a scoreboard dependency on  
          a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited     
          upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the        
          memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by        
          increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently     
          used data to shared memory. This stall type represents about 88.8% of the total average of 38.1 cycles        
          between issuing two instructions.                                                                             
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on         
          sampling data. The Kernel Profiling Guide                                                                     
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details    
          on each stall reason.                                                                                         

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst   3008921.60
    Executed Instructions                           inst    481427456
    Avg. Issued Instructions Per Scheduler          inst   3009146.48
    Issued Instructions                             inst    481463436
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                    32
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                  32768
    Registers Per Thread             register/thread              40
    Shared Memory Configuration Size           Kbyte           16.38
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block        byte/block               0
    # SMs                                         SM              40
    Threads                                   thread         1048576
    Uses Green Context                                             0
    Waves Per SM                                               51.20
    -------------------------------- --------------- ---------------

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           16
    Block Limit Registers                 block           48
    Block Limit Shared Mem                block           16
    Block Limit Warps                     block           48
    Theoretical Active Warps per SM        warp           16
    Theoretical Occupancy                     %        33.33
    Achieved Occupancy                        %        33.22
    Achieved Active Warps Per SM           warp        15.94
    ------------------------------- ----------- ------------

    OPT   Est. Speedup: 1.827%                                                                                          
          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 12. This kernel's theoretical occupancy (33.3%) is limited by the number of blocks that   
          can fit on the SM. This kernel's theoretical occupancy (33.3%) is limited by the required amount of shared    
          memory.                                                                                                       

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle     16490832
    Total DRAM Elapsed Cycles        cycle   1336214528
    Average L1 Active Cycles         cycle  28756283.52
    Total L1 Elapsed Cycles          cycle   1165520684
    Average L2 Active Cycles         cycle  27554571.28
    Total L2 Elapsed Cycles          cycle    882657728
    Average SM Active Cycles         cycle  28756283.52
    Total SM Elapsed Cycles          cycle   1165520684
    Average SMSP Active Cycles       cycle  28746049.59
    Total SMSP Elapsed Cycles        cycle   4662082736
    -------------------------- ----------- ------------

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.01
    Branch Instructions              inst      3211264
    Branch Efficiency                   %          100
    Avg. Divergent Branches                          0
    ------------------------- ----------- ------------

    OPT   Est. Speedup: 49.9%                                                                                           
          This kernel has uncoalesced global accesses resulting in a total of 536870912 excessive sectors (50% of the   
          total 1074790400 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source     
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional      
          information on reducing uncoalesced device memory accesses.                                                   

  hgemm_normal(const __half *, const __half *, float *, int, int) (128, 16, 1)x(16, 16, 1), Context 1, Stream 15, Device 0, CC 8.6
    Section: GPU Speed Of Light Throughput
    ----------------------- ------------- ------------
    Metric Name               Metric Unit Metric Value
    ----------------------- ------------- ------------
    DRAM Frequency          cycle/nsecond         6.99
    SM Frequency            cycle/nsecond         1.21
    Elapsed Cycles                  cycle      3512650
    Memory Throughput                   %        95.65
    DRAM Throughput                     %        10.54
    Duration                      msecond         2.89
    L1/TEX Cache Throughput             %        97.23
    L2 Cache Throughput                 %         7.81
    SM Active Cycles                cycle   3453696.30
    Compute (SM) Throughput             %        95.65
    ----------------------- ------------- ------------

    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing workloads in the Compute Workload Analysis section.                                        

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved 6% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         2.42
    Dropped Samples                sample            0
    Maximum Sampling Interval     msecond         1.02
    # Pass Groups                                    2
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         1.42
    Executed Ipc Elapsed  inst/cycle         1.39
    Issue Slots Busy               %        35.38
    Issued Ipc Active     inst/cycle         1.42
    SM Busy                        %        35.38
    -------------------- ----------- ------------

    INF   FMA is the highest-utilized pipeline (20.5%) based on active cycles, taking into account the rates of its     
          different instructions. It executes 32-bit floating point (FADD, FMUL, FMAD, ...) and integer (IMUL, IMAD)    
          operations. It is well-utilized, but should not be a bottleneck.                                              

    Section: Memory Workload Analysis
    --------------------------- ------------ ------------
    Metric Name                  Metric Unit Metric Value
    --------------------------- ------------ ------------
    Memory Throughput           Gbyte/second        47.17
    Mem Busy                               %        71.76
    Max Bandwidth                          %        95.65
    L1/TEX Hit Rate                        %        91.74
    L2 Compression Success Rate            %            0
    L2 Compression Ratio                                0
    L2 Hit Rate                            %        49.85
    Mem Pipes Busy                         %        95.65
    --------------------------- ------------ ------------

    Section: Memory Workload Analysis Tables
    OPT   Est. Speedup: 59.78%                                                                                          
          The memory access pattern for global loads from L1TEX might not be optimal. On average, only 12.0 of the 32   
          bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between   
          threads. Check the Source Counters section for uncoalesced global loads.                                      

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %        35.39
    Issued Warp Per Scheduler                        0.35
    No Eligible                            %        64.61
    Active Warps Per Scheduler          warp        11.48
    Eligible Warps Per Scheduler        warp         1.84
    ---------------------------- ----------- ------------

    OPT   Est. Local Speedup: 4.346%                                                                                    
          Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 2.8 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of   
          11.48 active warps per scheduler, but only an average of 1.84 warps were eligible per cycle. Eligible warps   
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        32.44
    Warp Cycles Per Executed Instruction           cycle        32.44
    Avg. Active Threads Per Warp                                   32
    Avg. Not Predicated Off Threads Per Warp                    31.99
    ---------------------------------------- ----------- ------------

    OPT   Est. Speedup: 4.346%                                                                                          
          On average, each warp of this kernel spends 17.6 cycles being stalled waiting for the L1 instruction queue    
          for local and global (LG) memory operations to be not full. Typically, this stall occurs only when executing  
          local or global memory instructions extremely frequently. Avoid redundant global memory accesses. Try to      
          avoid using thread-local memory by checking if dynamically indexed arrays are declared in local scope, of if  
          the kernel has excessive register pressure causing by spills. If applicable, consider combining multiple      
          lower-width memory operations into fewer wider memory operations and try interleaving memory operations and   
          math instructions. This stall type represents about 54.3% of the total average of 32.4 cycles between         
          issuing two instructions.                                                                                     
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on         
          sampling data. The Kernel Profiling Guide                                                                     
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details    
          on each stall reason.                                                                                         

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst   1221836.80
    Executed Instructions                           inst    195493888
    Avg. Issued Instructions Per Scheduler          inst   1221924.50
    Issued Instructions                             inst    195507920
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                   256
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                   2048
    Registers Per Thread             register/thread              39
    Shared Memory Configuration Size           Kbyte            8.19
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block        byte/block               0
    # SMs                                         SM              40
    Threads                                   thread          524288
    Uses Green Context                                             0
    Waves Per SM                                                8.53
    -------------------------------- --------------- ---------------

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           16
    Block Limit Registers                 block            6
    Block Limit Shared Mem                block            8
    Block Limit Warps                     block            6
    Theoretical Active Warps per SM        warp           48
    Theoretical Occupancy                     %          100
    Achieved Occupancy                        %        95.64
    Achieved Active Warps Per SM           warp        45.91
    ------------------------------- ----------- ------------

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle      2130704
    Total DRAM Elapsed Cycles        cycle    161761280
    Average L1 Active Cycles         cycle   3453696.30
    Total L1 Elapsed Cycles          cycle    140419038
    Average L2 Active Cycles         cycle   3296816.75
    Total L2 Elapsed Cycles          cycle    106853824
    Average SM Active Cycles         cycle   3453696.30
    Total SM Elapsed Cycles          cycle    140419038
    Average SMSP Active Cycles       cycle   3452877.39
    Total SMSP Elapsed Cycles        cycle    561676152
    -------------------------- ----------- ------------

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.01
    Branch Instructions              inst      2129920
    Branch Efficiency                   %          100
    Avg. Divergent Branches                          0
    ------------------------- ----------- ------------

  hgemm_tensor_core(const __half *, const __half *, float *, int, int) (64, 512, 1)x(32, 1, 1), Context 1, Stream 16, Device 0, CC 8.6
    Section: GPU Speed Of Light Throughput
    ----------------------- ------------- ------------
    Metric Name               Metric Unit Metric Value
    ----------------------- ------------- ------------
    DRAM Frequency          cycle/nsecond         6.99
    SM Frequency            cycle/nsecond         1.21
    Elapsed Cycles                  cycle     28897491
    Memory Throughput                   %        98.65
    DRAM Throughput                     %         9.83
    Duration                      msecond        23.78
    L1/TEX Cache Throughput             %        99.47
    L2 Cache Throughput                 %        39.59
    SM Active Cycles                cycle     28758398
    Compute (SM) Throughput             %        34.92
    ----------------------- ------------- ------------

    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing L1 in the Memory Workload Analysis section.                                                

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved 0% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         2.42
    Dropped Samples                sample            0
    Maximum Sampling Interval     usecond           64
    # Pass Groups                                    2
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         0.42
    Executed Ipc Elapsed  inst/cycle         0.42
    Issue Slots Busy               %        10.46
    Issued Ipc Active     inst/cycle         0.42
    SM Busy                        %        11.74
    -------------------- ----------- ------------

    OPT   Est. Local Speedup: 88.33%                                                                                    
          All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps   
          per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.             

    Section: Memory Workload Analysis
    --------------------------- ------------ ------------
    Metric Name                  Metric Unit Metric Value
    --------------------------- ------------ ------------
    Memory Throughput           Gbyte/second        43.98
    Mem Busy                               %        98.65
    Max Bandwidth                          %        39.32
    L1/TEX Hit Rate                        %        68.02
    L2 Compression Success Rate            %            0
    L2 Compression Ratio                                0
    L2 Hit Rate                            %        91.04
    Mem Pipes Busy                         %        34.92
    --------------------------- ------------ ------------

    Section: Memory Workload Analysis Tables
    OPT   Est. Speedup: 49.32%                                                                                          
          The memory access pattern for global loads from L1TEX might not be optimal. On average, only 16.0 of the 32   
          bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between   
          threads. Check the Source Counters section for uncoalesced global loads.                                      

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %        10.47
    Issued Warp Per Scheduler                        0.10
    No Eligible                            %        89.53
    Active Warps Per Scheduler          warp         3.99
    Eligible Warps Per Scheduler        warp         0.11
    ---------------------------- ----------- ------------

    OPT   Est. Local Speedup: 1.35%                                                                                     
          Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 9.6 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of   
          3.99 active warps per scheduler, but only an average of 0.11 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        38.08
    Warp Cycles Per Executed Instruction           cycle        38.08
    Avg. Active Threads Per Warp                                   32
    Avg. Not Predicated Off Threads Per Warp                    31.93
    ---------------------------------------- ----------- ------------

    OPT   Est. Speedup: 1.35%                                                                                           
          On average, each warp of this kernel spends 33.8 cycles being stalled waiting for a scoreboard dependency on  
          a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited     
          upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the        
          memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by        
          increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently     
          used data to shared memory. This stall type represents about 88.8% of the total average of 38.1 cycles        
          between issuing two instructions.                                                                             
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on         
          sampling data. The Kernel Profiling Guide                                                                     
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details    
          on each stall reason.                                                                                         

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst   3008921.60
    Executed Instructions                           inst    481427456
    Avg. Issued Instructions Per Scheduler          inst   3009146.23
    Issued Instructions                             inst    481463397
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                    32
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                  32768
    Registers Per Thread             register/thread              40
    Shared Memory Configuration Size           Kbyte           16.38
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block        byte/block               0
    # SMs                                         SM              40
    Threads                                   thread         1048576
    Uses Green Context                                             0
    Waves Per SM                                               51.20
    -------------------------------- --------------- ---------------

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           16
    Block Limit Registers                 block           48
    Block Limit Shared Mem                block           16
    Block Limit Warps                     block           48
    Theoretical Active Warps per SM        warp           16
    Theoretical Occupancy                     %        33.33
    Achieved Occupancy                        %        33.21
    Achieved Active Warps Per SM           warp        15.94
    ------------------------------- ----------- ------------

    OPT   Est. Speedup: 1.35%                                                                                           
          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 12. This kernel's theoretical occupancy (33.3%) is limited by the number of blocks that   
          can fit on the SM. This kernel's theoretical occupancy (33.3%) is limited by the required amount of shared    
          memory.                                                                                                       

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle     16344360
    Total DRAM Elapsed Cycles        cycle   1330758656
    Average L1 Active Cycles         cycle     28758398
    Total L1 Elapsed Cycles          cycle   1159885148
    Average L2 Active Cycles         cycle  27464937.25
    Total L2 Elapsed Cycles          cycle    879054528
    Average SM Active Cycles         cycle     28758398
    Total SM Elapsed Cycles          cycle   1159885148
    Average SMSP Active Cycles       cycle  28746890.75
    Total SMSP Elapsed Cycles        cycle   4639540592
    -------------------------- ----------- ------------

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.01
    Branch Instructions              inst      3211264
    Branch Efficiency                   %          100
    Avg. Divergent Branches                          0
    ------------------------- ----------- ------------

    OPT   Est. Speedup: 49.94%                                                                                          
          This kernel has uncoalesced global accesses resulting in a total of 536870912 excessive sectors (50% of the   
          total 1074790400 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source     
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional      
          information on reducing uncoalesced device memory accesses.                                                   

  hgemm_normal(const __half *, const __half *, float *, int, int) (128, 16, 1)x(16, 16, 1), Context 1, Stream 13, Device 0, CC 8.6
    Section: GPU Speed Of Light Throughput
    ----------------------- ------------- ------------
    Metric Name               Metric Unit Metric Value
    ----------------------- ------------- ------------
    DRAM Frequency          cycle/nsecond         6.99
    SM Frequency            cycle/nsecond         1.21
    Elapsed Cycles                  cycle      3512037
    Memory Throughput                   %        95.65
    DRAM Throughput                     %        10.53
    Duration                      msecond         2.89
    L1/TEX Cache Throughput             %        97.25
    L2 Cache Throughput                 %         7.81
    SM Active Cycles                cycle   3452870.45
    Compute (SM) Throughput             %        95.65
    ----------------------- ------------- ------------

    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing workloads in the Compute Workload Analysis section.                                        

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved 6% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         2.42
    Dropped Samples                sample            0
    Maximum Sampling Interval     usecond            8
    # Pass Groups                                    2
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         1.42
    Executed Ipc Elapsed  inst/cycle         1.39
    Issue Slots Busy               %        35.39
    Issued Ipc Active     inst/cycle         1.42
    SM Busy                        %        35.39
    -------------------- ----------- ------------

    INF   FMA is the highest-utilized pipeline (20.5%) based on active cycles, taking into account the rates of its     
          different instructions. It executes 32-bit floating point (FADD, FMUL, FMAD, ...) and integer (IMUL, IMAD)    
          operations. It is well-utilized, but should not be a bottleneck.                                              

    Section: Memory Workload Analysis
    --------------------------- ------------ ------------
    Metric Name                  Metric Unit Metric Value
    --------------------------- ------------ ------------
    Memory Throughput           Gbyte/second        47.12
    Mem Busy                               %        71.76
    Max Bandwidth                          %        95.65
    L1/TEX Hit Rate                        %        91.74
    L2 Compression Success Rate            %            0
    L2 Compression Ratio                                0
    L2 Hit Rate                            %        49.78
    Mem Pipes Busy                         %        95.65
    --------------------------- ------------ ------------

    Section: Memory Workload Analysis Tables
    OPT   Est. Speedup: 59.78%                                                                                          
          The memory access pattern for global loads from L1TEX might not be optimal. On average, only 12.0 of the 32   
          bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between   
          threads. Check the Source Counters section for uncoalesced global loads.                                      

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %        35.40
    Issued Warp Per Scheduler                        0.35
    No Eligible                            %        64.60
    Active Warps Per Scheduler          warp        11.48
    Eligible Warps Per Scheduler        warp         1.84
    ---------------------------- ----------- ------------

    OPT   Est. Local Speedup: 4.346%                                                                                    
          Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 2.8 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of   
          11.48 active warps per scheduler, but only an average of 1.84 warps were eligible per cycle. Eligible warps   
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        32.44
    Warp Cycles Per Executed Instruction           cycle        32.44
    Avg. Active Threads Per Warp                                   32
    Avg. Not Predicated Off Threads Per Warp                    31.99
    ---------------------------------------- ----------- ------------

    OPT   Est. Speedup: 4.346%                                                                                          
          On average, each warp of this kernel spends 17.6 cycles being stalled waiting for the L1 instruction queue    
          for local and global (LG) memory operations to be not full. Typically, this stall occurs only when executing  
          local or global memory instructions extremely frequently. Avoid redundant global memory accesses. Try to      
          avoid using thread-local memory by checking if dynamically indexed arrays are declared in local scope, of if  
          the kernel has excessive register pressure causing by spills. If applicable, consider combining multiple      
          lower-width memory operations into fewer wider memory operations and try interleaving memory operations and   
          math instructions. This stall type represents about 54.3% of the total average of 32.4 cycles between         
          issuing two instructions.                                                                                     
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on         
          sampling data. The Kernel Profiling Guide                                                                     
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details    
          on each stall reason.                                                                                         

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst   1221836.80
    Executed Instructions                           inst    195493888
    Avg. Issued Instructions Per Scheduler          inst   1221926.26
    Issued Instructions                             inst    195508202
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                   256
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                   2048
    Registers Per Thread             register/thread              39
    Shared Memory Configuration Size           Kbyte            8.19
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block        byte/block               0
    # SMs                                         SM              40
    Threads                                   thread          524288
    Uses Green Context                                             0
    Waves Per SM                                                8.53
    -------------------------------- --------------- ---------------

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           16
    Block Limit Registers                 block            6
    Block Limit Shared Mem                block            8
    Block Limit Warps                     block            6
    Theoretical Active Warps per SM        warp           48
    Theoretical Occupancy                     %          100
    Achieved Occupancy                        %        95.67
    Achieved Active Warps Per SM           warp        45.92
    ------------------------------- ----------- ------------

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle      2128080
    Total DRAM Elapsed Cycles        cycle    161732608
    Average L1 Active Cycles         cycle   3452870.45
    Total L1 Elapsed Cycles          cycle    140419206
    Average L2 Active Cycles         cycle   3297311.53
    Total L2 Elapsed Cycles          cycle    106835040
    Average SM Active Cycles         cycle   3452870.45
    Total SM Elapsed Cycles          cycle    140419206
    Average SMSP Active Cycles       cycle   3452091.19
    Total SMSP Elapsed Cycles        cycle    561676824
    -------------------------- ----------- ------------

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.01
    Branch Instructions              inst      2129920
    Branch Efficiency                   %          100
    Avg. Divergent Branches                          0
    ------------------------- ----------- ------------

  hgemm_tensor_core(const __half *, const __half *, float *, int, int) (64, 512, 1)x(32, 1, 1), Context 1, Stream 14, Device 0, CC 8.6
    Section: GPU Speed Of Light Throughput
    ----------------------- ------------- ------------
    Metric Name               Metric Unit Metric Value
    ----------------------- ------------- ------------
    DRAM Frequency          cycle/nsecond         6.99
    SM Frequency            cycle/nsecond         1.21
    Elapsed Cycles                  cycle     28959587
    Memory Throughput                   %        98.67
    DRAM Throughput                     %         9.79
    Duration                      msecond        23.84
    L1/TEX Cache Throughput             %        99.49
    L2 Cache Throughput                 %        39.12
    SM Active Cycles                cycle  28750755.70
    Compute (SM) Throughput             %        34.93
    ----------------------- ------------- ------------

    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing L1 in the Memory Workload Analysis section.                                                

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved 0% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         3.41
    Dropped Samples                sample            0
    Maximum Sampling Interval     msecond         1.02
    # Pass Groups                                    2
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         0.42
    Executed Ipc Elapsed  inst/cycle         0.42
    Issue Slots Busy               %        10.47
    Issued Ipc Active     inst/cycle         0.42
    SM Busy                        %        11.74
    -------------------- ----------- ------------

    OPT   Est. Local Speedup: 88.33%                                                                                    
          All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps   
          per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.             

    Section: Memory Workload Analysis
    --------------------------- ------------ ------------
    Metric Name                  Metric Unit Metric Value
    --------------------------- ------------ ------------
    Memory Throughput           Gbyte/second        43.82
    Mem Busy                               %        98.67
    Max Bandwidth                          %        39.07
    L1/TEX Hit Rate                        %        67.98
    L2 Compression Success Rate            %            0
    L2 Compression Ratio                                0
    L2 Hit Rate                            %        91.40
    Mem Pipes Busy                         %        34.93
    --------------------------- ------------ ------------

    Section: Memory Workload Analysis Tables
    OPT   Est. Speedup: 49.34%                                                                                          
          The memory access pattern for global loads from L1TEX might not be optimal. On average, only 16.0 of the 32   
          bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between   
          threads. Check the Source Counters section for uncoalesced global loads.                                      

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %        10.47
    Issued Warp Per Scheduler                        0.10
    No Eligible                            %        89.53
    Active Warps Per Scheduler          warp         3.99
    Eligible Warps Per Scheduler        warp         0.11
    ---------------------------- ----------- ------------

    OPT   Est. Local Speedup: 1.327%                                                                                    
          Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 9.6 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of   
          3.99 active warps per scheduler, but only an average of 0.11 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        38.08
    Warp Cycles Per Executed Instruction           cycle        38.08
    Avg. Active Threads Per Warp                                   32
    Avg. Not Predicated Off Threads Per Warp                    31.93
    ---------------------------------------- ----------- ------------

    OPT   Est. Speedup: 1.327%                                                                                          
          On average, each warp of this kernel spends 33.8 cycles being stalled waiting for a scoreboard dependency on  
          a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited     
          upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the        
          memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by        
          increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently     
          used data to shared memory. This stall type represents about 88.8% of the total average of 38.1 cycles        
          between issuing two instructions.                                                                             
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on         
          sampling data. The Kernel Profiling Guide                                                                     
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details    
          on each stall reason.                                                                                         

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst   3008921.60
    Executed Instructions                           inst    481427456
    Avg. Issued Instructions Per Scheduler          inst   3009146.34
    Issued Instructions                             inst    481463414
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                    32
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                  32768
    Registers Per Thread             register/thread              40
    Shared Memory Configuration Size           Kbyte           16.38
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block        byte/block               0
    # SMs                                         SM              40
    Threads                                   thread         1048576
    Uses Green Context                                             0
    Waves Per SM                                               51.20
    -------------------------------- --------------- ---------------

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           16
    Block Limit Registers                 block           48
    Block Limit Shared Mem                block           16
    Block Limit Warps                     block           48
    Theoretical Active Warps per SM        warp           16
    Theoretical Occupancy                     %        33.33
    Achieved Occupancy                        %        33.22
    Achieved Active Warps Per SM           warp        15.95
    ------------------------------- ----------- ------------

    OPT   Est. Speedup: 1.327%                                                                                          
          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 12. This kernel's theoretical occupancy (33.3%) is limited by the number of blocks that   
          can fit on the SM. This kernel's theoretical occupancy (33.3%) is limited by the required amount of shared    
          memory.                                                                                                       

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle     16319316
    Total DRAM Elapsed Cycles        cycle   1333618688
    Average L1 Active Cycles         cycle  28750755.70
    Total L1 Elapsed Cycles          cycle   1159605338
    Average L2 Active Cycles         cycle  27520685.50
    Total L2 Elapsed Cycles          cycle    880943040
    Average SM Active Cycles         cycle  28750755.70
    Total SM Elapsed Cycles          cycle   1159605338
    Average SMSP Active Cycles       cycle  28738182.18
    Total SMSP Elapsed Cycles        cycle   4638421352
    -------------------------- ----------- ------------

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.01
    Branch Instructions              inst      3211264
    Branch Efficiency                   %          100
    Avg. Divergent Branches                          0
    ------------------------- ----------- ------------

    OPT   Est. Speedup: 49.94%                                                                                          
          This kernel has uncoalesced global accesses resulting in a total of 536870912 excessive sectors (50% of the   
          total 1074790400 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source     
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional      
          information on reducing uncoalesced device memory accesses.                                                   

  hgemm_normal(const __half *, const __half *, float *, int, int) (128, 16, 1)x(16, 16, 1), Context 1, Stream 15, Device 0, CC 8.6
    Section: GPU Speed Of Light Throughput
    ----------------------- ------------- ------------
    Metric Name               Metric Unit Metric Value
    ----------------------- ------------- ------------
    DRAM Frequency          cycle/nsecond         6.99
    SM Frequency            cycle/nsecond         1.21
    Elapsed Cycles                  cycle      3510520
    Memory Throughput                   %        95.70
    DRAM Throughput                     %        10.54
    Duration                      msecond         2.89
    L1/TEX Cache Throughput             %        97.24
    L2 Cache Throughput                 %         7.81
    SM Active Cycles                cycle   3453084.65
    Compute (SM) Throughput             %        95.70
    ----------------------- ------------- ------------

    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing workloads in the Compute Workload Analysis section.                                        

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved 6% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         2.42
    Dropped Samples                sample            0
    Maximum Sampling Interval     usecond            8
    # Pass Groups                                    2
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         1.42
    Executed Ipc Elapsed  inst/cycle         1.39
    Issue Slots Busy               %        35.39
    Issued Ipc Active     inst/cycle         1.42
    SM Busy                        %        35.39
    -------------------- ----------- ------------

    INF   FMA is the highest-utilized pipeline (20.5%) based on active cycles, taking into account the rates of its     
          different instructions. It executes 32-bit floating point (FADD, FMUL, FMAD, ...) and integer (IMUL, IMAD)    
          operations. It is well-utilized, but should not be a bottleneck.                                              

    Section: Memory Workload Analysis
    --------------------------- ------------ ------------
    Metric Name                  Metric Unit Metric Value
    --------------------------- ------------ ------------
    Memory Throughput           Gbyte/second        47.16
    Mem Busy                               %        71.79
    Max Bandwidth                          %        95.70
    L1/TEX Hit Rate                        %        91.74
    L2 Compression Success Rate            %            0
    L2 Compression Ratio                                0
    L2 Hit Rate                            %        49.82
    Mem Pipes Busy                         %        95.70
    --------------------------- ------------ ------------

    Section: Memory Workload Analysis Tables
    OPT   Est. Speedup: 59.81%                                                                                          
          The memory access pattern for global loads from L1TEX might not be optimal. On average, only 12.0 of the 32   
          bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between   
          threads. Check the Source Counters section for uncoalesced global loads.                                      

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %        35.39
    Issued Warp Per Scheduler                        0.35
    No Eligible                            %        64.61
    Active Warps Per Scheduler          warp        11.48
    Eligible Warps Per Scheduler        warp         1.84
    ---------------------------- ----------- ------------

    OPT   Est. Local Speedup: 4.299%                                                                                    
          Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 2.8 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of   
          11.48 active warps per scheduler, but only an average of 1.84 warps were eligible per cycle. Eligible warps   
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        32.44
    Warp Cycles Per Executed Instruction           cycle        32.44
    Avg. Active Threads Per Warp                                   32
    Avg. Not Predicated Off Threads Per Warp                    31.99
    ---------------------------------------- ----------- ------------

    OPT   Est. Speedup: 4.299%                                                                                          
          On average, each warp of this kernel spends 17.6 cycles being stalled waiting for the L1 instruction queue    
          for local and global (LG) memory operations to be not full. Typically, this stall occurs only when executing  
          local or global memory instructions extremely frequently. Avoid redundant global memory accesses. Try to      
          avoid using thread-local memory by checking if dynamically indexed arrays are declared in local scope, of if  
          the kernel has excessive register pressure causing by spills. If applicable, consider combining multiple      
          lower-width memory operations into fewer wider memory operations and try interleaving memory operations and   
          math instructions. This stall type represents about 54.3% of the total average of 32.4 cycles between         
          issuing two instructions.                                                                                     
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on         
          sampling data. The Kernel Profiling Guide                                                                     
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details    
          on each stall reason.                                                                                         

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst   1221836.80
    Executed Instructions                           inst    195493888
    Avg. Issued Instructions Per Scheduler          inst   1221926.42
    Issued Instructions                             inst    195508227
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                   256
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                   2048
    Registers Per Thread             register/thread              39
    Shared Memory Configuration Size           Kbyte            8.19
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block        byte/block               0
    # SMs                                         SM              40
    Threads                                   thread          524288
    Uses Green Context                                             0
    Waves Per SM                                                8.53
    -------------------------------- --------------- ---------------

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           16
    Block Limit Registers                 block            6
    Block Limit Shared Mem                block            8
    Block Limit Warps                     block            6
    Theoretical Active Warps per SM        warp           48
    Theoretical Occupancy                     %          100
    Achieved Occupancy                        %        95.65
    Achieved Active Warps Per SM           warp        45.91
    ------------------------------- ----------- ------------

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle      2129078
    Total DRAM Elapsed Cycles        cycle    161662976
    Average L1 Active Cycles         cycle   3453084.65
    Total L1 Elapsed Cycles          cycle    140349570
    Average L2 Active Cycles         cycle   3296562.94
    Total L2 Elapsed Cycles          cycle    106789088
    Average SM Active Cycles         cycle   3453084.65
    Total SM Elapsed Cycles          cycle    140349570
    Average SMSP Active Cycles       cycle   3452643.52
    Total SMSP Elapsed Cycles        cycle    561398280
    -------------------------- ----------- ------------

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.01
    Branch Instructions              inst      2129920
    Branch Efficiency                   %          100
    Avg. Divergent Branches                          0
    ------------------------- ----------- ------------

  hgemm_tensor_core(const __half *, const __half *, float *, int, int) (64, 512, 1)x(32, 1, 1), Context 1, Stream 16, Device 0, CC 8.6
    Section: GPU Speed Of Light Throughput
    ----------------------- ------------- ------------
    Metric Name               Metric Unit Metric Value
    ----------------------- ------------- ------------
    DRAM Frequency          cycle/nsecond         6.99
    SM Frequency            cycle/nsecond         1.21
    Elapsed Cycles                  cycle     28924678
    Memory Throughput                   %        98.55
    DRAM Throughput                     %         9.85
    Duration                      msecond        23.81
    L1/TEX Cache Throughput             %        99.45
    L2 Cache Throughput                 %        39.56
    SM Active Cycles                cycle  28764794.57
    Compute (SM) Throughput             %        34.89
    ----------------------- ------------- ------------

    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing L1 in the Memory Workload Analysis section.                                                

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved 0% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         3.41
    Dropped Samples                sample            0
    Maximum Sampling Interval     msecond         1.02
    # Pass Groups                                    2
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         0.42
    Executed Ipc Elapsed  inst/cycle         0.41
    Issue Slots Busy               %        10.46
    Issued Ipc Active     inst/cycle         0.42
    SM Busy                        %        11.74
    -------------------- ----------- ------------

    OPT   Est. Local Speedup: 88.33%                                                                                    
          All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps   
          per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.             

    Section: Memory Workload Analysis
    --------------------------- ------------ ------------
    Metric Name                  Metric Unit Metric Value
    --------------------------- ------------ ------------
    Memory Throughput           Gbyte/second        44.10
    Mem Busy                               %        98.55
    Max Bandwidth                          %        39.51
    L1/TEX Hit Rate                        %        68.15
    L2 Compression Success Rate            %            0
    L2 Compression Ratio                                0
    L2 Hit Rate                            %        90.43
    Mem Pipes Busy                         %        34.89
    --------------------------- ------------ ------------

    Section: Memory Workload Analysis Tables
    OPT   Est. Speedup: 49.27%                                                                                          
          The memory access pattern for global loads from L1TEX might not be optimal. On average, only 16.0 of the 32   
          bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between   
          threads. Check the Source Counters section for uncoalesced global loads.                                      

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %        10.47
    Issued Warp Per Scheduler                        0.10
    No Eligible                            %        89.53
    Active Warps Per Scheduler          warp         3.99
    Eligible Warps Per Scheduler        warp         0.11
    ---------------------------- ----------- ------------

    OPT   Est. Local Speedup: 1.45%                                                                                     
          Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 9.6 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of   
          3.99 active warps per scheduler, but only an average of 0.11 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        38.10
    Warp Cycles Per Executed Instruction           cycle        38.10
    Avg. Active Threads Per Warp                                   32
    Avg. Not Predicated Off Threads Per Warp                    31.93
    ---------------------------------------- ----------- ------------

    OPT   Est. Speedup: 1.45%                                                                                           
          On average, each warp of this kernel spends 33.8 cycles being stalled waiting for a scoreboard dependency on  
          a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited     
          upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the        
          memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by        
          increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently     
          used data to shared memory. This stall type represents about 88.8% of the total average of 38.1 cycles        
          between issuing two instructions.                                                                             
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on         
          sampling data. The Kernel Profiling Guide                                                                     
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details    
          on each stall reason.                                                                                         

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst   3008921.60
    Executed Instructions                           inst    481427456
    Avg. Issued Instructions Per Scheduler          inst   3009146.34
    Issued Instructions                             inst    481463414
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                    32
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                  32768
    Registers Per Thread             register/thread              40
    Shared Memory Configuration Size           Kbyte           16.38
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block        byte/block               0
    # SMs                                         SM              40
    Threads                                   thread         1048576
    Uses Green Context                                             0
    Waves Per SM                                               51.20
    -------------------------------- --------------- ---------------

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           16
    Block Limit Registers                 block           48
    Block Limit Shared Mem                block           16
    Block Limit Warps                     block           48
    Theoretical Active Warps per SM        warp           16
    Theoretical Occupancy                     %        33.33
    Achieved Occupancy                        %        33.21
    Achieved Active Warps Per SM           warp        15.94
    ------------------------------- ----------- ------------

    OPT   Est. Speedup: 1.45%                                                                                           
          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 12. This kernel's theoretical occupancy (33.3%) is limited by the number of blocks that   
          can fit on the SM. This kernel's theoretical occupancy (33.3%) is limited by the required amount of shared    
          memory.                                                                                                       

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle     16403758
    Total DRAM Elapsed Cycles        cycle   1332011008
    Average L1 Active Cycles         cycle  28764794.57
    Total L1 Elapsed Cycles          cycle   1161060492
    Average L2 Active Cycles         cycle  27486072.28
    Total L2 Elapsed Cycles          cycle    879881248
    Average SM Active Cycles         cycle  28764794.57
    Total SM Elapsed Cycles          cycle   1161060492
    Average SMSP Active Cycles       cycle  28742052.75
    Total SMSP Elapsed Cycles        cycle   4644241968
    -------------------------- ----------- ------------

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.01
    Branch Instructions              inst      3211264
    Branch Efficiency                   %          100
    Avg. Divergent Branches                          0
    ------------------------- ----------- ------------

    OPT   Est. Speedup: 49.93%                                                                                          
          This kernel has uncoalesced global accesses resulting in a total of 536870912 excessive sectors (50% of the   
          total 1074790400 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source     
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional      
          information on reducing uncoalesced device memory accesses.                                                   

  hgemm_normal(const __half *, const __half *, float *, int, int) (128, 16, 1)x(16, 16, 1), Context 1, Stream 13, Device 0, CC 8.6
    Section: GPU Speed Of Light Throughput
    ----------------------- ------------- ------------
    Metric Name               Metric Unit Metric Value
    ----------------------- ------------- ------------
    DRAM Frequency          cycle/nsecond         6.99
    SM Frequency            cycle/nsecond         1.21
    Elapsed Cycles                  cycle      3510552
    Memory Throughput                   %        95.73
    DRAM Throughput                     %        10.54
    Duration                      msecond         2.89
    L1/TEX Cache Throughput             %        97.25
    L2 Cache Throughput                 %         7.81
    SM Active Cycles                cycle   3452865.62
    Compute (SM) Throughput             %        95.73
    ----------------------- ------------- ------------

    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing workloads in the Compute Workload Analysis section.                                        

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved 6% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         2.42
    Dropped Samples                sample            0
    Maximum Sampling Interval     msecond         1.02
    # Pass Groups                                    2
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         1.42
    Executed Ipc Elapsed  inst/cycle         1.39
    Issue Slots Busy               %        35.39
    Issued Ipc Active     inst/cycle         1.42
    SM Busy                        %        35.39
    -------------------- ----------- ------------

    INF   FMA is the highest-utilized pipeline (20.5%) based on active cycles, taking into account the rates of its     
          different instructions. It executes 32-bit floating point (FADD, FMUL, FMAD, ...) and integer (IMUL, IMAD)    
          operations. It is well-utilized, but should not be a bottleneck.                                              

    Section: Memory Workload Analysis
    --------------------------- ------------ ------------
    Metric Name                  Metric Unit Metric Value
    --------------------------- ------------ ------------
    Memory Throughput           Gbyte/second        47.16
    Mem Busy                               %        71.82
    Max Bandwidth                          %        95.73
    L1/TEX Hit Rate                        %        91.74
    L2 Compression Success Rate            %            0
    L2 Compression Ratio                                0
    L2 Hit Rate                            %        49.86
    Mem Pipes Busy                         %        95.73
    --------------------------- ------------ ------------

    Section: Memory Workload Analysis Tables
    OPT   Est. Speedup: 59.83%                                                                                          
          The memory access pattern for global loads from L1TEX might not be optimal. On average, only 12.0 of the 32   
          bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between   
          threads. Check the Source Counters section for uncoalesced global loads.                                      

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %        35.39
    Issued Warp Per Scheduler                        0.35
    No Eligible                            %        64.61
    Active Warps Per Scheduler          warp        11.48
    Eligible Warps Per Scheduler        warp         1.84
    ---------------------------- ----------- ------------

    OPT   Est. Local Speedup: 4.269%                                                                                    
          Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 2.8 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of   
          11.48 active warps per scheduler, but only an average of 1.84 warps were eligible per cycle. Eligible warps   
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        32.44
    Warp Cycles Per Executed Instruction           cycle        32.44
    Avg. Active Threads Per Warp                                   32
    Avg. Not Predicated Off Threads Per Warp                    31.99
    ---------------------------------------- ----------- ------------

    OPT   Est. Speedup: 4.269%                                                                                          
          On average, each warp of this kernel spends 17.6 cycles being stalled waiting for the L1 instruction queue    
          for local and global (LG) memory operations to be not full. Typically, this stall occurs only when executing  
          local or global memory instructions extremely frequently. Avoid redundant global memory accesses. Try to      
          avoid using thread-local memory by checking if dynamically indexed arrays are declared in local scope, of if  
          the kernel has excessive register pressure causing by spills. If applicable, consider combining multiple      
          lower-width memory operations into fewer wider memory operations and try interleaving memory operations and   
          math instructions. This stall type represents about 54.3% of the total average of 32.4 cycles between         
          issuing two instructions.                                                                                     
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on         
          sampling data. The Kernel Profiling Guide                                                                     
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details    
          on each stall reason.                                                                                         

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst   1221836.80
    Executed Instructions                           inst    195493888
    Avg. Issued Instructions Per Scheduler          inst   1221926.07
    Issued Instructions                             inst    195508171
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                   256
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                   2048
    Registers Per Thread             register/thread              39
    Shared Memory Configuration Size           Kbyte            8.19
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block        byte/block               0
    # SMs                                         SM              40
    Threads                                   thread          524288
    Uses Green Context                                             0
    Waves Per SM                                                8.53
    -------------------------------- --------------- ---------------

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           16
    Block Limit Registers                 block            6
    Block Limit Shared Mem                block            8
    Block Limit Warps                     block            6
    Theoretical Active Warps per SM        warp           48
    Theoretical Occupancy                     %          100
    Achieved Occupancy                        %        95.67
    Achieved Active Warps Per SM           warp        45.92
    ------------------------------- ----------- ------------

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle      2129084
    Total DRAM Elapsed Cycles        cycle    161665024
    Average L1 Active Cycles         cycle   3452865.62
    Total L1 Elapsed Cycles          cycle    140305982
    Average L2 Active Cycles         cycle   3294609.59
    Total L2 Elapsed Cycles          cycle    106790528
    Average SM Active Cycles         cycle   3452865.62
    Total SM Elapsed Cycles          cycle    140305982
    Average SMSP Active Cycles       cycle   3452605.78
    Total SMSP Elapsed Cycles        cycle    561223928
    -------------------------- ----------- ------------

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.01
    Branch Instructions              inst      2129920
    Branch Efficiency                   %          100
    Avg. Divergent Branches                          0
    ------------------------- ----------- ------------

  hgemm_tensor_core(const __half *, const __half *, float *, int, int) (64, 512, 1)x(32, 1, 1), Context 1, Stream 14, Device 0, CC 8.6
    Section: GPU Speed Of Light Throughput
    ----------------------- ------------- ------------
    Metric Name               Metric Unit Metric Value
    ----------------------- ------------- ------------
    DRAM Frequency          cycle/nsecond         6.99
    SM Frequency            cycle/nsecond         1.21
    Elapsed Cycles                  cycle     28892895
    Memory Throughput                   %        98.76
    DRAM Throughput                     %         9.80
    Duration                      msecond        23.78
    L1/TEX Cache Throughput             %        99.48
    L2 Cache Throughput                 %        39.59
    SM Active Cycles                cycle  28755842.40
    Compute (SM) Throughput             %        34.96
    ----------------------- ------------- ------------

    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing L1 in the Memory Workload Analysis section.                                                

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved 0% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         3.41
    Dropped Samples                sample            0
    Maximum Sampling Interval     msecond         1.02
    # Pass Groups                                    2
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         0.42
    Executed Ipc Elapsed  inst/cycle         0.42
    Issue Slots Busy               %        10.46
    Issued Ipc Active     inst/cycle         0.42
    SM Busy                        %        11.74
    -------------------- ----------- ------------

    OPT   Est. Local Speedup: 88.33%                                                                                    
          All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps   
          per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.             

    Section: Memory Workload Analysis
    --------------------------- ------------ ------------
    Metric Name                  Metric Unit Metric Value
    --------------------------- ------------ ------------
    Memory Throughput           Gbyte/second        43.86
    Mem Busy                               %        98.76
    Max Bandwidth                          %        39.30
    L1/TEX Hit Rate                        %        67.96
    L2 Compression Success Rate            %            0
    L2 Compression Ratio                                0
    L2 Hit Rate                            %        91.68
    Mem Pipes Busy                         %        34.96
    --------------------------- ------------ ------------

    Section: Memory Workload Analysis Tables
    OPT   Est. Speedup: 49.38%                                                                                          
          The memory access pattern for global loads from L1TEX might not be optimal. On average, only 16.0 of the 32   
          bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between   
          threads. Check the Source Counters section for uncoalesced global loads.                                      

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %        10.47
    Issued Warp Per Scheduler                        0.10
    No Eligible                            %        89.53
    Active Warps Per Scheduler          warp         3.99
    Eligible Warps Per Scheduler        warp         0.11
    ---------------------------- ----------- ------------

    OPT   Est. Local Speedup: 1.241%                                                                                    
          Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 9.6 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of   
          3.99 active warps per scheduler, but only an average of 0.11 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        38.09
    Warp Cycles Per Executed Instruction           cycle        38.09
    Avg. Active Threads Per Warp                                   32
    Avg. Not Predicated Off Threads Per Warp                    31.93
    ---------------------------------------- ----------- ------------

    OPT   Est. Speedup: 1.241%                                                                                          
          On average, each warp of this kernel spends 33.8 cycles being stalled waiting for a scoreboard dependency on  
          a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited     
          upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the        
          memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by        
          increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently     
          used data to shared memory. This stall type represents about 88.8% of the total average of 38.1 cycles        
          between issuing two instructions.                                                                             
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on         
          sampling data. The Kernel Profiling Guide                                                                     
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details    
          on each stall reason.                                                                                         

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst   3008921.60
    Executed Instructions                           inst    481427456
    Avg. Issued Instructions Per Scheduler          inst   3009146.54
    Issued Instructions                             inst    481463447
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                    32
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                  32768
    Registers Per Thread             register/thread              40
    Shared Memory Configuration Size           Kbyte           16.38
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block        byte/block               0
    # SMs                                         SM              40
    Threads                                   thread         1048576
    Uses Green Context                                             0
    Waves Per SM                                               51.20
    -------------------------------- --------------- ---------------

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           16
    Block Limit Registers                 block           48
    Block Limit Shared Mem                block           16
    Block Limit Warps                     block           48
    Theoretical Active Warps per SM        warp           16
    Theoretical Occupancy                     %        33.33
    Achieved Occupancy                        %        33.21
    Achieved Active Warps Per SM           warp        15.94
    ------------------------------- ----------- ------------

    OPT   Est. Speedup: 1.241%                                                                                          
          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 12. This kernel's theoretical occupancy (33.3%) is limited by the number of blocks that   
          can fit on the SM. This kernel's theoretical occupancy (33.3%) is limited by the required amount of shared    
          memory.                                                                                                       

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle     16296900
    Total DRAM Elapsed Cycles        cycle   1330547712
    Average L1 Active Cycles         cycle  28755842.40
    Total L1 Elapsed Cycles          cycle   1158601418
    Average L2 Active Cycles         cycle  27497584.28
    Total L2 Elapsed Cycles          cycle    878914880
    Average SM Active Cycles         cycle  28755842.40
    Total SM Elapsed Cycles          cycle   1158601418
    Average SMSP Active Cycles       cycle  28751345.34
    Total SMSP Elapsed Cycles        cycle   4634405672
    -------------------------- ----------- ------------

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.01
    Branch Instructions              inst      3211264
    Branch Efficiency                   %          100
    Avg. Divergent Branches                          0
    ------------------------- ----------- ------------

    OPT   Est. Speedup: 50.01%                                                                                          
          This kernel has uncoalesced global accesses resulting in a total of 536870912 excessive sectors (50% of the   
          total 1074790400 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source     
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional      
          information on reducing uncoalesced device memory accesses.                                                   

  hgemm_normal(const __half *, const __half *, float *, int, int) (128, 16, 1)x(16, 16, 1), Context 1, Stream 15, Device 0, CC 8.6
    Section: GPU Speed Of Light Throughput
    ----------------------- ------------- ------------
    Metric Name               Metric Unit Metric Value
    ----------------------- ------------- ------------
    DRAM Frequency          cycle/nsecond         6.99
    SM Frequency            cycle/nsecond         1.21
    Elapsed Cycles                  cycle      3512416
    Memory Throughput                   %        95.67
    DRAM Throughput                     %        10.52
    Duration                      msecond         2.89
    L1/TEX Cache Throughput             %        97.25
    L2 Cache Throughput                 %         7.81
    SM Active Cycles                cycle   3452956.73
    Compute (SM) Throughput             %        95.67
    ----------------------- ------------- ------------

    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing workloads in the Compute Workload Analysis section.                                        

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved 6% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         2.42
    Dropped Samples                sample            0
    Maximum Sampling Interval     msecond         1.02
    # Pass Groups                                    2
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         1.42
    Executed Ipc Elapsed  inst/cycle         1.39
    Issue Slots Busy               %        35.39
    Issued Ipc Active     inst/cycle         1.42
    SM Busy                        %        35.39
    -------------------- ----------- ------------

    INF   FMA is the highest-utilized pipeline (20.5%) based on active cycles, taking into account the rates of its     
          different instructions. It executes 32-bit floating point (FADD, FMUL, FMAD, ...) and integer (IMUL, IMAD)    
          operations. It is well-utilized, but should not be a bottleneck.                                              

    Section: Memory Workload Analysis
    --------------------------- ------------ ------------
    Metric Name                  Metric Unit Metric Value
    --------------------------- ------------ ------------
    Memory Throughput           Gbyte/second        47.11
    Mem Busy                               %        71.77
    Max Bandwidth                          %        95.67
    L1/TEX Hit Rate                        %        91.74
    L2 Compression Success Rate            %            0
    L2 Compression Ratio                                0
    L2 Hit Rate                            %        49.84
    Mem Pipes Busy                         %        95.67
    --------------------------- ------------ ------------

    Section: Memory Workload Analysis Tables
    OPT   Est. Speedup: 59.79%                                                                                          
          The memory access pattern for global loads from L1TEX might not be optimal. On average, only 12.0 of the 32   
          bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between   
          threads. Check the Source Counters section for uncoalesced global loads.                                      

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %        35.38
    Issued Warp Per Scheduler                        0.35
    No Eligible                            %        64.62
    Active Warps Per Scheduler          warp        11.48
    Eligible Warps Per Scheduler        warp         1.84
    ---------------------------- ----------- ------------

    OPT   Est. Local Speedup: 4.332%                                                                                    
          Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 2.8 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of   
          11.48 active warps per scheduler, but only an average of 1.84 warps were eligible per cycle. Eligible warps   
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        32.44
    Warp Cycles Per Executed Instruction           cycle        32.44
    Avg. Active Threads Per Warp                                   32
    Avg. Not Predicated Off Threads Per Warp                    31.99
    ---------------------------------------- ----------- ------------

    OPT   Est. Speedup: 4.332%                                                                                          
          On average, each warp of this kernel spends 17.6 cycles being stalled waiting for the L1 instruction queue    
          for local and global (LG) memory operations to be not full. Typically, this stall occurs only when executing  
          local or global memory instructions extremely frequently. Avoid redundant global memory accesses. Try to      
          avoid using thread-local memory by checking if dynamically indexed arrays are declared in local scope, of if  
          the kernel has excessive register pressure causing by spills. If applicable, consider combining multiple      
          lower-width memory operations into fewer wider memory operations and try interleaving memory operations and   
          math instructions. This stall type represents about 54.3% of the total average of 32.4 cycles between         
          issuing two instructions.                                                                                     
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on         
          sampling data. The Kernel Profiling Guide                                                                     
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details    
          on each stall reason.                                                                                         

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst   1221836.80
    Executed Instructions                           inst    195493888
    Avg. Issued Instructions Per Scheduler          inst   1221925.54
    Issued Instructions                             inst    195508087
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                   256
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                   2048
    Registers Per Thread             register/thread              39
    Shared Memory Configuration Size           Kbyte            8.19
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block        byte/block               0
    # SMs                                         SM              40
    Threads                                   thread          524288
    Uses Green Context                                             0
    Waves Per SM                                                8.53
    -------------------------------- --------------- ---------------

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           16
    Block Limit Registers                 block            6
    Block Limit Shared Mem                block            8
    Block Limit Warps                     block            6
    Theoretical Active Warps per SM        warp           48
    Theoretical Occupancy                     %          100
    Achieved Occupancy                        %        95.67
    Achieved Active Warps Per SM           warp        45.92
    ------------------------------- ----------- ------------

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle      2127990
    Total DRAM Elapsed Cycles        cycle    161750016
    Average L1 Active Cycles         cycle   3452956.73
    Total L1 Elapsed Cycles          cycle    140398274
    Average L2 Active Cycles         cycle   3297100.06
    Total L2 Elapsed Cycles          cycle    106847328
    Average SM Active Cycles         cycle   3452956.73
    Total SM Elapsed Cycles          cycle    140398274
    Average SMSP Active Cycles       cycle   3453390.66
    Total SMSP Elapsed Cycles        cycle    561593096
    -------------------------- ----------- ------------

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.01
    Branch Instructions              inst      2129920
    Branch Efficiency                   %          100
    Avg. Divergent Branches                          0
    ------------------------- ----------- ------------

  hgemm_tensor_core(const __half *, const __half *, float *, int, int) (64, 512, 1)x(32, 1, 1), Context 1, Stream 16, Device 0, CC 8.6
    Section: GPU Speed Of Light Throughput
    ----------------------- ------------- ------------
    Metric Name               Metric Unit Metric Value
    ----------------------- ------------- ------------
    DRAM Frequency          cycle/nsecond         6.99
    SM Frequency            cycle/nsecond         1.21
    Elapsed Cycles                  cycle     29057484
    Memory Throughput                   %        98.65
    DRAM Throughput                     %         9.86
    Duration                      msecond        23.92
    L1/TEX Cache Throughput             %        99.44
    L2 Cache Throughput                 %        39.16
    SM Active Cycles                cycle  28765324.57
    Compute (SM) Throughput             %        34.92
    ----------------------- ------------- ------------

    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing L1 in the Memory Workload Analysis section.                                                

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved 0% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         2.42
    Dropped Samples                sample            0
    Maximum Sampling Interval     usecond           64
    # Pass Groups                                    2
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         0.42
    Executed Ipc Elapsed  inst/cycle         0.42
    Issue Slots Busy               %        10.46
    Issued Ipc Active     inst/cycle         0.42
    SM Busy                        %        11.74
    -------------------- ----------- ------------

    OPT   Est. Local Speedup: 88.34%                                                                                    
          All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps   
          per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.             

    Section: Memory Workload Analysis
    --------------------------- ------------ ------------
    Metric Name                  Metric Unit Metric Value
    --------------------------- ------------ ------------
    Memory Throughput           Gbyte/second        44.13
    Mem Busy                               %        98.65
    Max Bandwidth                          %        39.16
    L1/TEX Hit Rate                        %        67.62
    L2 Compression Success Rate            %            0
    L2 Compression Ratio                                0
    L2 Hit Rate                            %        90.61
    Mem Pipes Busy                         %        34.92
    --------------------------- ------------ ------------

    Section: Memory Workload Analysis Tables
    OPT   Est. Speedup: 49.32%                                                                                          
          The memory access pattern for global loads from L1TEX might not be optimal. On average, only 16.0 of the 32   
          bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between   
          threads. Check the Source Counters section for uncoalesced global loads.                                      

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %        10.47
    Issued Warp Per Scheduler                        0.10
    No Eligible                            %        89.53
    Active Warps Per Scheduler          warp         3.99
    Eligible Warps Per Scheduler        warp         0.11
    ---------------------------- ----------- ------------

    OPT   Est. Local Speedup: 1.351%                                                                                    
          Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 9.6 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of   
          3.99 active warps per scheduler, but only an average of 0.11 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        38.09
    Warp Cycles Per Executed Instruction           cycle        38.09
    Avg. Active Threads Per Warp                                   32
    Avg. Not Predicated Off Threads Per Warp                    31.93
    ---------------------------------------- ----------- ------------

    OPT   Est. Speedup: 1.351%                                                                                          
          On average, each warp of this kernel spends 33.8 cycles being stalled waiting for a scoreboard dependency on  
          a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited     
          upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the        
          memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by        
          increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently     
          used data to shared memory. This stall type represents about 88.8% of the total average of 38.1 cycles        
          between issuing two instructions.                                                                             
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on         
          sampling data. The Kernel Profiling Guide                                                                     
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details    
          on each stall reason.                                                                                         

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst   3008921.60
    Executed Instructions                           inst    481427456
    Avg. Issued Instructions Per Scheduler          inst   3009146.58
    Issued Instructions                             inst    481463452
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                    32
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                  32768
    Registers Per Thread             register/thread              40
    Shared Memory Configuration Size           Kbyte           16.38
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block        byte/block               0
    # SMs                                         SM              40
    Threads                                   thread         1048576
    Uses Green Context                                             0
    Waves Per SM                                               51.20
    -------------------------------- --------------- ---------------

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           16
    Block Limit Registers                 block           48
    Block Limit Shared Mem                block           16
    Block Limit Warps                     block           48
    Theoretical Active Warps per SM        warp           16
    Theoretical Occupancy                     %        33.33
    Achieved Occupancy                        %        33.20
    Achieved Active Warps Per SM           warp        15.94
    ------------------------------- ----------- ------------

    OPT   Est. Speedup: 1.351%                                                                                          
          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 12. This kernel's theoretical occupancy (33.3%) is limited by the number of blocks that   
          can fit on the SM. This kernel's theoretical occupancy (33.3%) is limited by the required amount of shared    
          memory.                                                                                                       

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle     16490474
    Total DRAM Elapsed Cycles        cycle   1338126336
    Average L1 Active Cycles         cycle  28765324.57
    Total L1 Elapsed Cycles          cycle   1159890986
    Average L2 Active Cycles         cycle  27553025.91
    Total L2 Elapsed Cycles          cycle    883921344
    Average SM Active Cycles         cycle  28765324.57
    Total SM Elapsed Cycles          cycle   1159890986
    Average SMSP Active Cycles       cycle  28746608.31
    Total SMSP Elapsed Cycles        cycle   4639563944
    -------------------------- ----------- ------------

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.01
    Branch Instructions              inst      3211264
    Branch Efficiency                   %          100
    Avg. Divergent Branches                          0
    ------------------------- ----------- ------------

    OPT   Est. Speedup: 49.83%                                                                                          
          This kernel has uncoalesced global accesses resulting in a total of 536870912 excessive sectors (50% of the   
          total 1074790400 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source     
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional      
          information on reducing uncoalesced device memory accesses.                                                   

  hgemm_normal(const __half *, const __half *, float *, int, int) (128, 16, 1)x(16, 16, 1), Context 1, Stream 13, Device 0, CC 8.6
    Section: GPU Speed Of Light Throughput
    ----------------------- ------------- ------------
    Metric Name               Metric Unit Metric Value
    ----------------------- ------------- ------------
    DRAM Frequency          cycle/nsecond         6.99
    SM Frequency            cycle/nsecond         1.21
    Elapsed Cycles                  cycle      3510430
    Memory Throughput                   %        95.61
    DRAM Throughput                     %        10.53
    Duration                      msecond         2.89
    L1/TEX Cache Throughput             %        97.27
    L2 Cache Throughput                 %         7.81
    SM Active Cycles                cycle   3452127.90
    Compute (SM) Throughput             %        95.61
    ----------------------- ------------- ------------

    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing workloads in the Compute Workload Analysis section.                                        

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved 6% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         2.42
    Dropped Samples                sample            0
    Maximum Sampling Interval     usecond            8
    # Pass Groups                                    2
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         1.42
    Executed Ipc Elapsed  inst/cycle         1.39
    Issue Slots Busy               %        35.40
    Issued Ipc Active     inst/cycle         1.42
    SM Busy                        %        35.40
    -------------------- ----------- ------------

    INF   FMA is the highest-utilized pipeline (20.5%) based on active cycles, taking into account the rates of its     
          different instructions. It executes 32-bit floating point (FADD, FMUL, FMAD, ...) and integer (IMUL, IMAD)    
          operations. It is well-utilized, but should not be a bottleneck.                                              

    Section: Memory Workload Analysis
    --------------------------- ------------ ------------
    Metric Name                  Metric Unit Metric Value
    --------------------------- ------------ ------------
    Memory Throughput           Gbyte/second        47.11
    Mem Busy                               %        71.73
    Max Bandwidth                          %        95.61
    L1/TEX Hit Rate                        %        91.74
    L2 Compression Success Rate            %            0
    L2 Compression Ratio                                0
    L2 Hit Rate                            %        49.83
    Mem Pipes Busy                         %        95.61
    --------------------------- ------------ ------------

    Section: Memory Workload Analysis Tables
    OPT   Est. Speedup: 59.76%                                                                                          
          The memory access pattern for global loads from L1TEX might not be optimal. On average, only 12.0 of the 32   
          bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between   
          threads. Check the Source Counters section for uncoalesced global loads.                                      

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %        35.39
    Issued Warp Per Scheduler                        0.35
    No Eligible                            %        64.61
    Active Warps Per Scheduler          warp        11.48
    Eligible Warps Per Scheduler        warp         1.84
    ---------------------------- ----------- ------------

    OPT   Est. Local Speedup: 4.388%                                                                                    
          Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 2.8 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of   
          11.48 active warps per scheduler, but only an average of 1.84 warps were eligible per cycle. Eligible warps   
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        32.43
    Warp Cycles Per Executed Instruction           cycle        32.44
    Avg. Active Threads Per Warp                                   32
    Avg. Not Predicated Off Threads Per Warp                    31.99
    ---------------------------------------- ----------- ------------

    OPT   Est. Speedup: 4.388%                                                                                          
          On average, each warp of this kernel spends 17.6 cycles being stalled waiting for the L1 instruction queue    
          for local and global (LG) memory operations to be not full. Typically, this stall occurs only when executing  
          local or global memory instructions extremely frequently. Avoid redundant global memory accesses. Try to      
          avoid using thread-local memory by checking if dynamically indexed arrays are declared in local scope, of if  
          the kernel has excessive register pressure causing by spills. If applicable, consider combining multiple      
          lower-width memory operations into fewer wider memory operations and try interleaving memory operations and   
          math instructions. This stall type represents about 54.4% of the total average of 32.4 cycles between         
          issuing two instructions.                                                                                     
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on         
          sampling data. The Kernel Profiling Guide                                                                     
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details    
          on each stall reason.                                                                                         

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst   1221836.80
    Executed Instructions                           inst    195493888
    Avg. Issued Instructions Per Scheduler          inst   1221925.31
    Issued Instructions                             inst    195508049
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                   256
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                   2048
    Registers Per Thread             register/thread              39
    Shared Memory Configuration Size           Kbyte            8.19
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block        byte/block               0
    # SMs                                         SM              40
    Threads                                   thread          524288
    Uses Green Context                                             0
    Waves Per SM                                                8.53
    -------------------------------- --------------- ---------------

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           16
    Block Limit Registers                 block            6
    Block Limit Shared Mem                block            8
    Block Limit Warps                     block            6
    Theoretical Active Warps per SM        warp           48
    Theoretical Occupancy                     %          100
    Achieved Occupancy                        %        95.68
    Achieved Active Warps Per SM           warp        45.93
    ------------------------------- ----------- ------------

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle      2127020
    Total DRAM Elapsed Cycles        cycle    161658880
    Average L1 Active Cycles         cycle   3452127.90
    Total L1 Elapsed Cycles          cycle    140480042
    Average L2 Active Cycles         cycle   3297021.25
    Total L2 Elapsed Cycles          cycle    106786720
    Average SM Active Cycles         cycle   3452127.90
    Total SM Elapsed Cycles          cycle    140480042
    Average SMSP Active Cycles       cycle   3452525.84
    Total SMSP Elapsed Cycles        cycle    561920168
    -------------------------- ----------- ------------

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.01
    Branch Instructions              inst      2129920
    Branch Efficiency                   %          100
    Avg. Divergent Branches                          0
    ------------------------- ----------- ------------

  hgemm_tensor_core(const __half *, const __half *, float *, int, int) (64, 512, 1)x(32, 1, 1), Context 1, Stream 14, Device 0, CC 8.6
    Section: GPU Speed Of Light Throughput
    ----------------------- ------------- ------------
    Metric Name               Metric Unit Metric Value
    ----------------------- ------------- ------------
    DRAM Frequency          cycle/nsecond         6.99
    SM Frequency            cycle/nsecond         1.21
    Elapsed Cycles                  cycle     28963034
    Memory Throughput                   %        98.78
    DRAM Throughput                     %         9.81
    Duration                      msecond        23.84
    L1/TEX Cache Throughput             %        99.46
    L2 Cache Throughput                 %        39.28
    SM Active Cycles                cycle  28760814.77
    Compute (SM) Throughput             %        34.97
    ----------------------- ------------- ------------

    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing L1 in the Memory Workload Analysis section.                                                

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved 0% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         3.41
    Dropped Samples                sample            0
    Maximum Sampling Interval     msecond         1.02
    # Pass Groups                                    2
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         0.42
    Executed Ipc Elapsed  inst/cycle         0.42
    Issue Slots Busy               %        10.46
    Issued Ipc Active     inst/cycle         0.42
    SM Busy                        %        11.74
    -------------------- ----------- ------------

    OPT   Est. Local Speedup: 88.33%                                                                                    
          All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps   
          per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.             

    Section: Memory Workload Analysis
    --------------------------- ------------ ------------
    Metric Name                  Metric Unit Metric Value
    --------------------------- ------------ ------------
    Memory Throughput           Gbyte/second        43.90
    Mem Busy                               %        98.78
    Max Bandwidth                          %        38.77
    L1/TEX Hit Rate                        %        67.55
    L2 Compression Success Rate            %            0
    L2 Compression Ratio                                0
    L2 Hit Rate                            %        90.03
    Mem Pipes Busy                         %        34.97
    --------------------------- ------------ ------------

    Section: Memory Workload Analysis Tables
    OPT   Est. Speedup: 49.39%                                                                                          
          The memory access pattern for global loads from L1TEX might not be optimal. On average, only 16.0 of the 32   
          bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between   
          threads. Check the Source Counters section for uncoalesced global loads.                                      

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %        10.47
    Issued Warp Per Scheduler                        0.10
    No Eligible                            %        89.53
    Active Warps Per Scheduler          warp         3.99
    Eligible Warps Per Scheduler        warp         0.11
    ---------------------------- ----------- ------------

    OPT   Est. Local Speedup: 1.218%                                                                                    
          Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 9.6 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of   
          3.99 active warps per scheduler, but only an average of 0.11 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        38.09
    Warp Cycles Per Executed Instruction           cycle        38.09
    Avg. Active Threads Per Warp                                   32
    Avg. Not Predicated Off Threads Per Warp                    31.93
    ---------------------------------------- ----------- ------------

    OPT   Est. Speedup: 1.218%                                                                                          
          On average, each warp of this kernel spends 33.8 cycles being stalled waiting for a scoreboard dependency on  
          a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited     
          upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the        
          memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by        
          increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently     
          used data to shared memory. This stall type represents about 88.8% of the total average of 38.1 cycles        
          between issuing two instructions.                                                                             
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on         
          sampling data. The Kernel Profiling Guide                                                                     
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details    
          on each stall reason.                                                                                         

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst   3008921.60
    Executed Instructions                           inst    481427456
    Avg. Issued Instructions Per Scheduler          inst   3009146.43
    Issued Instructions                             inst    481463429
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                    32
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                  32768
    Registers Per Thread             register/thread              40
    Shared Memory Configuration Size           Kbyte           16.38
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block        byte/block               0
    # SMs                                         SM              40
    Threads                                   thread         1048576
    Uses Green Context                                             0
    Waves Per SM                                               51.20
    -------------------------------- --------------- ---------------

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           16
    Block Limit Registers                 block           48
    Block Limit Shared Mem                block           16
    Block Limit Warps                     block           48
    Theoretical Active Warps per SM        warp           16
    Theoretical Occupancy                     %        33.33
    Achieved Occupancy                        %        33.21
    Achieved Active Warps Per SM           warp        15.94
    ------------------------------- ----------- ------------

    OPT   Est. Speedup: 1.218%                                                                                          
          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 12. This kernel's theoretical occupancy (33.3%) is limited by the number of blocks that   
          can fit on the SM. This kernel's theoretical occupancy (33.3%) is limited by the required amount of shared    
          memory.                                                                                                       

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle     16351754
    Total DRAM Elapsed Cycles        cycle   1333778432
    Average L1 Active Cycles         cycle  28760814.77
    Total L1 Elapsed Cycles          cycle   1158329234
    Average L2 Active Cycles         cycle  27472822.72
    Total L2 Elapsed Cycles          cycle    881048448
    Average SM Active Cycles         cycle  28760814.77
    Total SM Elapsed Cycles          cycle   1158329234
    Average SMSP Active Cycles       cycle  28750047.58
    Total SMSP Elapsed Cycles        cycle   4633316936
    -------------------------- ----------- ------------

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.01
    Branch Instructions              inst      3211264
    Branch Efficiency                   %          100
    Avg. Divergent Branches                          0
    ------------------------- ----------- ------------

    OPT   Est. Speedup: 49.84%                                                                                          
          This kernel has uncoalesced global accesses resulting in a total of 536870912 excessive sectors (50% of the   
          total 1074790400 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source     
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional      
          information on reducing uncoalesced device memory accesses.                                                   

  hgemm_normal(const __half *, const __half *, float *, int, int) (128, 16, 1)x(16, 16, 1), Context 1, Stream 15, Device 0, CC 8.6
    Section: GPU Speed Of Light Throughput
    ----------------------- ------------- ------------
    Metric Name               Metric Unit Metric Value
    ----------------------- ------------- ------------
    DRAM Frequency          cycle/nsecond         6.99
    SM Frequency            cycle/nsecond         1.21
    Elapsed Cycles                  cycle      3509989
    Memory Throughput                   %        95.66
    DRAM Throughput                     %        10.53
    Duration                      msecond         2.89
    L1/TEX Cache Throughput             %        97.25
    L2 Cache Throughput                 %         7.81
    SM Active Cycles                cycle   3453009.20
    Compute (SM) Throughput             %        95.66
    ----------------------- ------------- ------------

    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing workloads in the Compute Workload Analysis section.                                        

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved 6% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         2.42
    Dropped Samples                sample            0
    Maximum Sampling Interval     msecond         1.02
    # Pass Groups                                    2
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         1.42
    Executed Ipc Elapsed  inst/cycle         1.39
    Issue Slots Busy               %        35.39
    Issued Ipc Active     inst/cycle         1.42
    SM Busy                        %        35.39
    -------------------- ----------- ------------

    INF   FMA is the highest-utilized pipeline (20.5%) based on active cycles, taking into account the rates of its     
          different instructions. It executes 32-bit floating point (FADD, FMUL, FMAD, ...) and integer (IMUL, IMAD)    
          operations. It is well-utilized, but should not be a bottleneck.                                              

    Section: Memory Workload Analysis
    --------------------------- ------------ ------------
    Metric Name                  Metric Unit Metric Value
    --------------------------- ------------ ------------
    Memory Throughput           Gbyte/second        47.15
    Mem Busy                               %        71.76
    Max Bandwidth                          %        95.66
    L1/TEX Hit Rate                        %        91.74
    L2 Compression Success Rate            %            0
    L2 Compression Ratio                                0
    L2 Hit Rate                            %        49.82
    Mem Pipes Busy                         %        95.66
    --------------------------- ------------ ------------

    Section: Memory Workload Analysis Tables
    OPT   Est. Speedup: 59.79%                                                                                          
          The memory access pattern for global loads from L1TEX might not be optimal. On average, only 12.0 of the 32   
          bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between   
          threads. Check the Source Counters section for uncoalesced global loads.                                      

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %        35.38
    Issued Warp Per Scheduler                        0.35
    No Eligible                            %        64.62
    Active Warps Per Scheduler          warp        11.48
    Eligible Warps Per Scheduler        warp         1.84
    ---------------------------- ----------- ------------

    OPT   Est. Local Speedup: 4.342%                                                                                    
          Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 2.8 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of   
          11.48 active warps per scheduler, but only an average of 1.84 warps were eligible per cycle. Eligible warps   
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        32.44
    Warp Cycles Per Executed Instruction           cycle        32.44
    Avg. Active Threads Per Warp                                   32
    Avg. Not Predicated Off Threads Per Warp                    31.99
    ---------------------------------------- ----------- ------------

    OPT   Est. Speedup: 4.342%                                                                                          
          On average, each warp of this kernel spends 17.6 cycles being stalled waiting for the L1 instruction queue    
          for local and global (LG) memory operations to be not full. Typically, this stall occurs only when executing  
          local or global memory instructions extremely frequently. Avoid redundant global memory accesses. Try to      
          avoid using thread-local memory by checking if dynamically indexed arrays are declared in local scope, of if  
          the kernel has excessive register pressure causing by spills. If applicable, consider combining multiple      
          lower-width memory operations into fewer wider memory operations and try interleaving memory operations and   
          math instructions. This stall type represents about 54.3% of the total average of 32.4 cycles between         
          issuing two instructions.                                                                                     
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on         
          sampling data. The Kernel Profiling Guide                                                                     
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details    
          on each stall reason.                                                                                         

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst   1221836.80
    Executed Instructions                           inst    195493888
    Avg. Issued Instructions Per Scheduler          inst   1221923.90
    Issued Instructions                             inst    195507824
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                   256
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                   2048
    Registers Per Thread             register/thread              39
    Shared Memory Configuration Size           Kbyte            8.19
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block        byte/block               0
    # SMs                                         SM              40
    Threads                                   thread          524288
    Uses Green Context                                             0
    Waves Per SM                                                8.53
    -------------------------------- --------------- ---------------

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           16
    Block Limit Registers                 block            6
    Block Limit Shared Mem                block            8
    Block Limit Warps                     block            6
    Theoretical Active Warps per SM        warp           48
    Theoretical Occupancy                     %          100
    Achieved Occupancy                        %        95.66
    Achieved Active Warps Per SM           warp        45.92
    ------------------------------- ----------- ------------

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle      2128300
    Total DRAM Elapsed Cycles        cycle    161638400
    Average L1 Active Cycles         cycle   3453009.20
    Total L1 Elapsed Cycles          cycle    140412714
    Average L2 Active Cycles         cycle   3296656.62
    Total L2 Elapsed Cycles          cycle    106773504
    Average SM Active Cycles         cycle   3453009.20
    Total SM Elapsed Cycles          cycle    140412714
    Average SMSP Active Cycles       cycle   3453589.22
    Total SMSP Elapsed Cycles        cycle    561650856
    -------------------------- ----------- ------------

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.01
    Branch Instructions              inst      2129920
    Branch Efficiency                   %          100
    Avg. Divergent Branches                          0
    ------------------------- ----------- ------------

  hgemm_tensor_core(const __half *, const __half *, float *, int, int) (64, 512, 1)x(32, 1, 1), Context 1, Stream 16, Device 0, CC 8.6
    Section: GPU Speed Of Light Throughput
    ----------------------- ------------- ------------
    Metric Name               Metric Unit Metric Value
    ----------------------- ------------- ------------
    DRAM Frequency          cycle/nsecond         6.99
    SM Frequency            cycle/nsecond         1.21
    Elapsed Cycles                  cycle     28959640
    Memory Throughput                   %        98.67
    DRAM Throughput                     %         9.82
    Duration                      msecond        23.84
    L1/TEX Cache Throughput             %        99.50
    L2 Cache Throughput                 %        39.26
    SM Active Cycles                cycle  28747969.75
    Compute (SM) Throughput             %        34.93
    ----------------------- ------------- ------------

    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing L1 in the Memory Workload Analysis section.                                                

    Section: GPU Speed Of Light Roofline Chart
    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved 0% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline      
          analysis.                                                                                                     

    Section: PM Sampling
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Maximum Buffer Size             Mbyte         3.41
    Dropped Samples                sample            0
    Maximum Sampling Interval     msecond         1.02
    # Pass Groups                                    2
    ------------------------- ----------- ------------

    Section: Compute Workload Analysis
    -------------------- ----------- ------------
    Metric Name          Metric Unit Metric Value
    -------------------- ----------- ------------
    Executed Ipc Active   inst/cycle         0.42
    Executed Ipc Elapsed  inst/cycle         0.42
    Issue Slots Busy               %        10.47
    Issued Ipc Active     inst/cycle         0.42
    SM Busy                        %        11.75
    -------------------- ----------- ------------

    OPT   Est. Local Speedup: 88.33%                                                                                    
          All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps   
          per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details.             

    Section: Memory Workload Analysis
    --------------------------- ------------ ------------
    Metric Name                  Metric Unit Metric Value
    --------------------------- ------------ ------------
    Memory Throughput           Gbyte/second        43.94
    Mem Busy                               %        98.67
    Max Bandwidth                          %        39.08
    L1/TEX Hit Rate                        %        68.01
    L2 Compression Success Rate            %            0
    L2 Compression Ratio                                0
    L2 Hit Rate                            %        91.89
    Mem Pipes Busy                         %        34.93
    --------------------------- ------------ ------------

    Section: Memory Workload Analysis Tables
    OPT   Est. Speedup: 49.34%                                                                                          
          The memory access pattern for global loads from L1TEX might not be optimal. On average, only 16.0 of the 32   
          bytes transmitted per sector are utilized by each thread. This could possibly be caused by a stride between   
          threads. Check the Source Counters section for uncoalesced global loads.                                      

    Section: Scheduler Statistics
    ---------------------------- ----------- ------------
    Metric Name                  Metric Unit Metric Value
    ---------------------------- ----------- ------------
    One or More Eligible                   %        10.47
    Issued Warp Per Scheduler                        0.10
    No Eligible                            %        89.53
    Active Warps Per Scheduler          warp         3.99
    Eligible Warps Per Scheduler        warp         0.11
    ---------------------------- ----------- ------------

    OPT   Est. Local Speedup: 1.328%                                                                                    
          Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 9.6 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of   
          3.99 active warps per scheduler, but only an average of 0.11 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            

    Section: Warp State Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Warp Cycles Per Issued Instruction             cycle        38.08
    Warp Cycles Per Executed Instruction           cycle        38.09
    Avg. Active Threads Per Warp                                   32
    Avg. Not Predicated Off Threads Per Warp                    31.93
    ---------------------------------------- ----------- ------------

    OPT   Est. Speedup: 1.328%                                                                                          
          On average, each warp of this kernel spends 33.8 cycles being stalled waiting for a scoreboard dependency on  
          a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited     
          upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the        
          memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by        
          increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently     
          used data to shared memory. This stall type represents about 88.8% of the total average of 38.1 cycles        
          between issuing two instructions.                                                                             
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Warp Stall Sampling (All Samples) table for the top stall locations in your source based on         
          sampling data. The Kernel Profiling Guide                                                                     
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details    
          on each stall reason.                                                                                         

    Section: Instruction Statistics
    ---------------------------------------- ----------- ------------
    Metric Name                              Metric Unit Metric Value
    ---------------------------------------- ----------- ------------
    Avg. Executed Instructions Per Scheduler        inst   3008921.60
    Executed Instructions                           inst    481427456
    Avg. Issued Instructions Per Scheduler          inst   3009146.59
    Issued Instructions                             inst    481463454
    ---------------------------------------- ----------- ------------

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                    32
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                  32768
    Registers Per Thread             register/thread              40
    Shared Memory Configuration Size           Kbyte           16.38
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block        byte/block               0
    # SMs                                         SM              40
    Threads                                   thread         1048576
    Uses Green Context                                             0
    Waves Per SM                                               51.20
    -------------------------------- --------------- ---------------

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           16
    Block Limit Registers                 block           48
    Block Limit Shared Mem                block           16
    Block Limit Warps                     block           48
    Theoretical Active Warps per SM        warp           16
    Theoretical Occupancy                     %        33.33
    Achieved Occupancy                        %        33.24
    Achieved Active Warps Per SM           warp        15.95
    ------------------------------- ----------- ------------

    OPT   Est. Speedup: 1.328%                                                                                          
          The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 12. This kernel's theoretical occupancy (33.3%) is limited by the number of blocks that   
          can fit on the SM. This kernel's theoretical occupancy (33.3%) is limited by the required amount of shared    
          memory.                                                                                                       

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- ------------
    Metric Name                Metric Unit Metric Value
    -------------------------- ----------- ------------
    Average DRAM Active Cycles       cycle     16365946
    Total DRAM Elapsed Cycles        cycle   1333620736
    Average L1 Active Cycles         cycle  28747969.75
    Total L1 Elapsed Cycles          cycle   1159624340
    Average L2 Active Cycles         cycle  27546812.50
    Total L2 Elapsed Cycles          cycle    880945344
    Average SM Active Cycles         cycle  28747969.75
    Total SM Elapsed Cycles          cycle   1159624340
    Average SMSP Active Cycles       cycle  28754047.08
    Total SMSP Elapsed Cycles        cycle   4638497360
    -------------------------- ----------- ------------

    Section: Source Counters
    ------------------------- ----------- ------------
    Metric Name               Metric Unit Metric Value
    ------------------------- ----------- ------------
    Branch Instructions Ratio           %         0.01
    Branch Instructions              inst      3211264
    Branch Efficiency                   %          100
    Avg. Divergent Branches                          0
    ------------------------- ----------- ------------

    OPT   Est. Speedup: 49.98%                                                                                          
          This kernel has uncoalesced global accesses resulting in a total of 536870912 excessive sectors (50% of the   
          total 1074790400 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source     
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) has additional      
          information on reducing uncoalesced device memory accesses.                                                   

